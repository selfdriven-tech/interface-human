/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/pkijs@3.2.4/build/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
/*!
 * Copyright (c) 2014, GlobalSign
 * Copyright (c) 2015-2019, Peculiar Ventures
 * All rights reserved.
 * 
 * Author 2014-2019, Yury Strozhevsky
 * 
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 * 
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 * 
 * * Neither the name of the {organization} nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var asn1js=require("asn1js"),pvtsutils=require("pvtsutils"),pvutils=require("pvutils"),bs=require("bytestreamjs"),sha1=require("@noble/hashes/sha1"),sha256=require("@noble/hashes/sha256"),sha512=require("@noble/hashes/sha512");function _interopNamespace(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(a){if("default"!==a){var s=Object.getOwnPropertyDescriptor(e,a);Object.defineProperty(t,a,s.get?s:{enumerable:!0,get:function(){return e[a]}})}})),t.default=e,Object.freeze(t)}var asn1js__namespace=_interopNamespace(asn1js),pvtsutils__namespace=_interopNamespace(pvtsutils),pvutils__namespace=_interopNamespace(pvutils),bs__namespace=_interopNamespace(bs);const EMPTY_BUFFER=new ArrayBuffer(0),EMPTY_STRING="";class ArgumentError extends TypeError{constructor(){super(...arguments),this.name=ArgumentError.NAME}static isType(e,t){if("string"==typeof t){if("Array"===t&&Array.isArray(e))return!0;if("ArrayBuffer"===t&&e instanceof ArrayBuffer)return!0;if("ArrayBufferView"===t&&ArrayBuffer.isView(e))return!0;if(typeof e===t)return!0}else if(e instanceof t)return!0;return!1}static assert(e,t,...a){for(const t of a)if(this.isType(e,t))return;const s=a.map((e=>e instanceof Function&&"name"in e?e.name:`${e}`));throw new ArgumentError(`Parameter '${t}' is not of type ${s.length>1?`(${s.join(" or ")})`:s[0]}`)}}ArgumentError.NAME="ArgumentError";class ParameterError extends TypeError{static assert(...e){let t,a,s=null;"string"==typeof e[0]?(s=e[0],t=e[1],a=e.slice(2)):(t=e[0],a=e.slice(1)),ArgumentError.assert(t,"parameters","object");for(const e of a){const a=t[e];if(null==a)throw new ParameterError(e,s)}}static assertEmpty(e,t,a){if(null==e)throw new ParameterError(t,a)}constructor(e,t=null,a){super(),this.name=ParameterError.NAME,this.field=e,t&&(this.target=t),this.message=a||`Absent mandatory parameter '${e}' ${t?` in '${t}'`:""}`}}ParameterError.NAME="ParameterError";class AsnError extends Error{static assertSchema(e,t){if(!e.verified)throw new Error(`Object's schema was not verified against input data for ${t}`)}static assert(e,t){if(-1===e.offset)throw new AsnError(`Error during parsing of ASN.1 data. Data is not correct for '${t}'.`)}constructor(e){super(e),this.name="AsnError"}}class PkiObject{static blockName(){return this.CLASS_NAME}static fromBER(e){const t=asn1js__namespace.fromBER(e);AsnError.assert(t,this.name);try{return new this({schema:t.result})}catch(e){throw new AsnError(`Cannot create '${this.CLASS_NAME}' from ASN.1 object`)}}static defaultValues(e){throw new Error(`Invalid member name for ${this.CLASS_NAME} class: ${e}`)}static schema(e={}){throw new Error(`Method '${this.CLASS_NAME}.schema' should be overridden`)}get className(){return this.constructor.CLASS_NAME}toString(e="hex"){let t;try{t=this.toSchema()}catch{t=this.toSchema(!0)}return pvtsutils__namespace.Convert.ToString(t.toBER(),e)}}function stringPrep(e){let t=!1,a="";const s=e.trim();for(let e=0;e<s.length;e++)32===s.charCodeAt(e)?!1===t&&(t=!0):(t&&(a+=" ",t=!1),a+=s[e]);return a.toLowerCase()}PkiObject.CLASS_NAME="PkiObject";const TYPE$5="type",VALUE$6="value";class AttributeTypeAndValue extends PkiObject{constructor(e={}){super(),this.type=pvutils__namespace.getParametersValue(e,"type",AttributeTypeAndValue.defaultValues("type")),this.value=pvutils__namespace.getParametersValue(e,"value",AttributeTypeAndValue.defaultValues("value")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"type":return"";case"value":return{};default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.type||""}),new asn1js__namespace.Any({name:t.value||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,["type","typeValue"]);const t=asn1js__namespace.compareSchema(e,e,AttributeTypeAndValue.schema({names:{type:"type",value:"typeValue"}}));AsnError.assertSchema(t,this.className),this.type=t.result.type.valueBlock.toString(),this.value=t.result.typeValue}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.type}),this.value]})}toJSON(){const e={type:this.type};return 0!==Object.keys(this.value).length?e.value=this.value.toJSON():e.value=this.value,e}isEqual(e){const t=[asn1js__namespace.Utf8String.blockName(),asn1js__namespace.BmpString.blockName(),asn1js__namespace.UniversalString.blockName(),asn1js__namespace.NumericString.blockName(),asn1js__namespace.PrintableString.blockName(),asn1js__namespace.TeletexString.blockName(),asn1js__namespace.VideotexString.blockName(),asn1js__namespace.IA5String.blockName(),asn1js__namespace.GraphicString.blockName(),asn1js__namespace.VisibleString.blockName(),asn1js__namespace.GeneralString.blockName(),asn1js__namespace.CharacterString.blockName()];if(e instanceof ArrayBuffer)return pvtsutils__namespace.BufferSourceConverter.isEqual(this.value.valueBeforeDecodeView,e);if(e.constructor.blockName()===AttributeTypeAndValue.blockName()){if(this.type!==e.type)return!1;const a=[!1,!1],s=this.value.constructor.blockName();for(const r of t)s===r&&(a[0]=!0),e.value.constructor.blockName()===r&&(a[1]=!0);if(a[0]!==a[1])return!1;if(a[0]&&a[1]){const t=stringPrep(this.value.valueBlock.value),a=stringPrep(e.value.valueBlock.value);if(0!==t.localeCompare(a))return!1}else if(!pvtsutils__namespace.BufferSourceConverter.isEqual(this.value.valueBeforeDecodeView,e.value.valueBeforeDecodeView))return!1;return!0}return!1}}AttributeTypeAndValue.CLASS_NAME="AttributeTypeAndValue";const TYPE_AND_VALUES="typesAndValues",VALUE_BEFORE_DECODE="valueBeforeDecode",RDN="RDN";class RelativeDistinguishedNames extends PkiObject{constructor(e={}){super(),this.typesAndValues=pvutils__namespace.getParametersValue(e,TYPE_AND_VALUES,RelativeDistinguishedNames.defaultValues(TYPE_AND_VALUES)),this.valueBeforeDecode=pvutils__namespace.getParametersValue(e,"valueBeforeDecode",RelativeDistinguishedNames.defaultValues("valueBeforeDecode")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case TYPE_AND_VALUES:return[];case"valueBeforeDecode":return EMPTY_BUFFER;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case TYPE_AND_VALUES:return 0===t.length;case"valueBeforeDecode":return 0===t.byteLength;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.repeatedSequence||"",value:new asn1js__namespace.Set({value:[new asn1js__namespace.Repeated({name:t.repeatedSet||"",value:AttributeTypeAndValue.schema(t.typeAndValue||{})})]})})]})}fromSchema(e){pvutils__namespace.clearProps(e,[RDN,TYPE_AND_VALUES]);const t=asn1js__namespace.compareSchema(e,e,RelativeDistinguishedNames.schema({names:{blockName:RDN,repeatedSet:TYPE_AND_VALUES}}));AsnError.assertSchema(t,this.className),TYPE_AND_VALUES in t.result&&(this.typesAndValues=Array.from(t.result.typesAndValues,(e=>new AttributeTypeAndValue({schema:e})))),this.valueBeforeDecode=t.result.RDN.valueBeforeDecodeView.slice().buffer}toSchema(){if(0===this.valueBeforeDecode.byteLength)return new asn1js__namespace.Sequence({value:[new asn1js__namespace.Set({value:Array.from(this.typesAndValues,(e=>e.toSchema()))})]});const e=asn1js__namespace.fromBER(this.valueBeforeDecode);if(AsnError.assert(e,"RelativeDistinguishedNames"),!(e.result instanceof asn1js__namespace.Sequence))throw new Error("ASN.1 result should be SEQUENCE");return e.result}toJSON(){return{typesAndValues:Array.from(this.typesAndValues,(e=>e.toJSON()))}}isEqual(e){if(e instanceof RelativeDistinguishedNames){if(this.typesAndValues.length!==e.typesAndValues.length)return!1;for(const[t,a]of this.typesAndValues.entries())if(!1===a.isEqual(e.typesAndValues[t]))return!1;return!0}return e instanceof ArrayBuffer&&pvutils__namespace.isEqualBuffer(this.valueBeforeDecode,e)}}RelativeDistinguishedNames.CLASS_NAME="RelativeDistinguishedNames";const TYPE$4="type",VALUE$5="value";function builtInStandardAttributes(e={},t=!1){const a=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({optional:t,value:[new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:2,tagNumber:1},name:a.country_name||"",value:[new asn1js__namespace.Choice({value:[new asn1js__namespace.NumericString,new asn1js__namespace.PrintableString]})]}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:2,tagNumber:2},name:a.administration_domain_name||"",value:[new asn1js__namespace.Choice({value:[new asn1js__namespace.NumericString,new asn1js__namespace.PrintableString]})]}),new asn1js__namespace.Primitive({optional:!0,idBlock:{tagClass:3,tagNumber:0},name:a.network_address||"",isHexOnly:!0}),new asn1js__namespace.Primitive({optional:!0,idBlock:{tagClass:3,tagNumber:1},name:a.terminal_identifier||"",isHexOnly:!0}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:2},name:a.private_domain_name||"",value:[new asn1js__namespace.Choice({value:[new asn1js__namespace.NumericString,new asn1js__namespace.PrintableString]})]}),new asn1js__namespace.Primitive({optional:!0,idBlock:{tagClass:3,tagNumber:3},name:a.organization_name||"",isHexOnly:!0}),new asn1js__namespace.Primitive({optional:!0,name:a.numeric_user_identifier||"",idBlock:{tagClass:3,tagNumber:4},isHexOnly:!0}),new asn1js__namespace.Constructed({optional:!0,name:a.personal_name||"",idBlock:{tagClass:3,tagNumber:5},value:[new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:0},isHexOnly:!0}),new asn1js__namespace.Primitive({optional:!0,idBlock:{tagClass:3,tagNumber:1},isHexOnly:!0}),new asn1js__namespace.Primitive({optional:!0,idBlock:{tagClass:3,tagNumber:2},isHexOnly:!0}),new asn1js__namespace.Primitive({optional:!0,idBlock:{tagClass:3,tagNumber:3},isHexOnly:!0})]}),new asn1js__namespace.Constructed({optional:!0,name:a.organizational_unit_names||"",idBlock:{tagClass:3,tagNumber:6},value:[new asn1js__namespace.Repeated({value:new asn1js__namespace.PrintableString})]})]})}function builtInDomainDefinedAttributes(e=!1){return new asn1js__namespace.Sequence({optional:e,value:[new asn1js__namespace.PrintableString,new asn1js__namespace.PrintableString]})}function extensionAttributes(e=!1){return new asn1js__namespace.Set({optional:e,value:[new asn1js__namespace.Primitive({optional:!0,idBlock:{tagClass:3,tagNumber:0},isHexOnly:!0}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.Any]})]})}class GeneralName extends PkiObject{constructor(e={}){super(),this.type=pvutils__namespace.getParametersValue(e,"type",GeneralName.defaultValues("type")),this.value=pvutils__namespace.getParametersValue(e,"value",GeneralName.defaultValues("value")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"type":return 9;case"value":return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"type":return t===GeneralName.defaultValues(e);case"value":return 0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Choice({value:[new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier,new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Any]})]}),new asn1js__namespace.Primitive({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:1}}),new asn1js__namespace.Primitive({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:2}}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:3},name:t.blockName||"",value:[builtInStandardAttributes(t.builtInStandardAttributes||{},!1),builtInDomainDefinedAttributes(!0),extensionAttributes(!0)]}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:4},name:t.blockName||"",value:[RelativeDistinguishedNames.schema(t.directoryName||{})]}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:5},name:t.blockName||"",value:[new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Choice({value:[new asn1js__namespace.TeletexString,new asn1js__namespace.PrintableString,new asn1js__namespace.UniversalString,new asn1js__namespace.Utf8String,new asn1js__namespace.BmpString]})]}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.Choice({value:[new asn1js__namespace.TeletexString,new asn1js__namespace.PrintableString,new asn1js__namespace.UniversalString,new asn1js__namespace.Utf8String,new asn1js__namespace.BmpString]})]})]}),new asn1js__namespace.Primitive({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:6}}),new asn1js__namespace.Primitive({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:7}}),new asn1js__namespace.Primitive({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:8}})]})}fromSchema(e){pvutils__namespace.clearProps(e,["blockName","otherName","rfc822Name","dNSName","x400Address","directoryName","ediPartyName","uniformResourceIdentifier","iPAddress","registeredID"]);const t=asn1js__namespace.compareSchema(e,e,GeneralName.schema({names:{blockName:"blockName",otherName:"otherName",rfc822Name:"rfc822Name",dNSName:"dNSName",x400Address:"x400Address",directoryName:{names:{blockName:"directoryName"}},ediPartyName:"ediPartyName",uniformResourceIdentifier:"uniformResourceIdentifier",iPAddress:"iPAddress",registeredID:"registeredID"}}));switch(AsnError.assertSchema(t,this.className),this.type=t.result.blockName.idBlock.tagNumber,this.type){case 0:case 3:this.value=t.result.blockName;break;case 1:case 2:case 6:{const e=t.result.blockName;e.idBlock.tagClass=1,e.idBlock.tagNumber=22;const a=e.toBER(!1),s=asn1js__namespace.fromBER(a);AsnError.assert(s,"GeneralName value"),this.value=s.result.valueBlock.value}break;case 4:this.value=new RelativeDistinguishedNames({schema:t.result.directoryName});break;case 5:this.value=t.result.ediPartyName;break;case 7:this.value=new asn1js__namespace.OctetString({valueHex:t.result.blockName.valueBlock.valueHex});break;case 8:{const e=t.result.blockName;e.idBlock.tagClass=1,e.idBlock.tagNumber=6;const a=e.toBER(!1),s=asn1js__namespace.fromBER(a);AsnError.assert(s,"GeneralName registeredID"),this.value=s.result.valueBlock.toString()}}}toSchema(){switch(this.type){case 0:case 3:case 5:return new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:this.type},value:[this.value]});case 1:case 2:case 6:{const e=new asn1js__namespace.IA5String({value:this.value});return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}case 4:return new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:4},value:[this.value.toSchema()]});case 7:{const e=this.value;return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}case 8:{const e=new asn1js__namespace.ObjectIdentifier({value:this.value});return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.type,e}default:return GeneralName.schema()}}toJSON(){const e={type:this.type,value:""};if("string"==typeof this.value)e.value=this.value;else try{e.value=this.value.toJSON()}catch(e){}return e}}GeneralName.CLASS_NAME="GeneralName";const ACCESS_METHOD="accessMethod",ACCESS_LOCATION="accessLocation",CLEAR_PROPS$1v=[ACCESS_METHOD,ACCESS_LOCATION];class AccessDescription extends PkiObject{constructor(e={}){super(),this.accessMethod=pvutils__namespace.getParametersValue(e,ACCESS_METHOD,AccessDescription.defaultValues(ACCESS_METHOD)),this.accessLocation=pvutils__namespace.getParametersValue(e,ACCESS_LOCATION,AccessDescription.defaultValues(ACCESS_LOCATION)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case ACCESS_METHOD:return"";case ACCESS_LOCATION:return new GeneralName;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.accessMethod||""}),GeneralName.schema(t.accessLocation||{})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1v);const t=asn1js__namespace.compareSchema(e,e,AccessDescription.schema({names:{accessMethod:ACCESS_METHOD,accessLocation:{names:{blockName:ACCESS_LOCATION}}}}));AsnError.assertSchema(t,this.className),this.accessMethod=t.result.accessMethod.valueBlock.toString(),this.accessLocation=new GeneralName({schema:t.result.accessLocation})}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.accessMethod}),this.accessLocation.toSchema()]})}toJSON(){return{accessMethod:this.accessMethod,accessLocation:this.accessLocation.toJSON()}}}AccessDescription.CLASS_NAME="AccessDescription";const SECONDS="seconds",MILLIS="millis",MICROS="micros";class Accuracy extends PkiObject{constructor(e={}){super(),SECONDS in e&&(this.seconds=pvutils__namespace.getParametersValue(e,SECONDS,Accuracy.defaultValues(SECONDS))),MILLIS in e&&(this.millis=pvutils__namespace.getParametersValue(e,MILLIS,Accuracy.defaultValues(MILLIS))),MICROS in e&&(this.micros=pvutils__namespace.getParametersValue(e,MICROS,Accuracy.defaultValues(MICROS))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case SECONDS:case MILLIS:case MICROS:return 0;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case SECONDS:case MILLIS:case MICROS:return t===Accuracy.defaultValues(e);default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",optional:!0,value:[new asn1js__namespace.Integer({optional:!0,name:t.seconds||""}),new asn1js__namespace.Primitive({name:t.millis||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new asn1js__namespace.Primitive({name:t.micros||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}})]})}fromSchema(e){pvutils__namespace.clearProps(e,[SECONDS,MILLIS,MICROS]);const t=asn1js__namespace.compareSchema(e,e,Accuracy.schema({names:{seconds:SECONDS,millis:MILLIS,micros:MICROS}}));if(AsnError.assertSchema(t,this.className),"seconds"in t.result&&(this.seconds=t.result.seconds.valueBlock.valueDec),"millis"in t.result){const e=new asn1js__namespace.Integer({valueHex:t.result.millis.valueBlock.valueHex});this.millis=e.valueBlock.valueDec}if("micros"in t.result){const e=new asn1js__namespace.Integer({valueHex:t.result.micros.valueBlock.valueHex});this.micros=e.valueBlock.valueDec}}toSchema(){const e=[];if(void 0!==this.seconds&&e.push(new asn1js__namespace.Integer({value:this.seconds})),void 0!==this.millis){const t=new asn1js__namespace.Integer({value:this.millis});e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:0},valueHex:t.valueBlock.valueHexView}))}if(void 0!==this.micros){const t=new asn1js__namespace.Integer({value:this.micros});e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:1},valueHex:t.valueBlock.valueHexView}))}return new asn1js__namespace.Sequence({value:e})}toJSON(){const e={};return void 0!==this.seconds&&(e.seconds=this.seconds),void 0!==this.millis&&(e.millis=this.millis),void 0!==this.micros&&(e.micros=this.micros),e}}Accuracy.CLASS_NAME="Accuracy";const ALGORITHM_ID="algorithmId",ALGORITHM_PARAMS="algorithmParams",ALGORITHM$2="algorithm",PARAMS="params",CLEAR_PROPS$1u=["algorithm",PARAMS];class AlgorithmIdentifier extends PkiObject{constructor(e={}){super(),this.algorithmId=pvutils__namespace.getParametersValue(e,ALGORITHM_ID,AlgorithmIdentifier.defaultValues(ALGORITHM_ID)),ALGORITHM_PARAMS in e&&(this.algorithmParams=pvutils__namespace.getParametersValue(e,ALGORITHM_PARAMS,AlgorithmIdentifier.defaultValues(ALGORITHM_PARAMS))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case ALGORITHM_ID:return"";case ALGORITHM_PARAMS:return new asn1js__namespace.Any;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case ALGORITHM_ID:return""===t;case ALGORITHM_PARAMS:return t instanceof asn1js__namespace.Any;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",optional:t.optional||!1,value:[new asn1js__namespace.ObjectIdentifier({name:t.algorithmIdentifier||""}),new asn1js__namespace.Any({name:t.algorithmParams||"",optional:!0})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1u);const t=asn1js__namespace.compareSchema(e,e,AlgorithmIdentifier.schema({names:{algorithmIdentifier:"algorithm",algorithmParams:PARAMS}}));AsnError.assertSchema(t,this.className),this.algorithmId=t.result.algorithm.valueBlock.toString(),PARAMS in t.result&&(this.algorithmParams=t.result.params)}toSchema(){const e=[];return e.push(new asn1js__namespace.ObjectIdentifier({value:this.algorithmId})),!this.algorithmParams||this.algorithmParams instanceof asn1js__namespace.Any||e.push(this.algorithmParams),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={algorithmId:this.algorithmId};return!this.algorithmParams||this.algorithmParams instanceof asn1js__namespace.Any||(e.algorithmParams=this.algorithmParams.toJSON()),e}isEqual(e){return e instanceof AlgorithmIdentifier&&(this.algorithmId===e.algorithmId&&(this.algorithmParams?!!e.algorithmParams&&JSON.stringify(this.algorithmParams)===JSON.stringify(e.algorithmParams):!e.algorithmParams))}}AlgorithmIdentifier.CLASS_NAME="AlgorithmIdentifier";const ALT_NAMES="altNames",CLEAR_PROPS$1t=[ALT_NAMES];class AltName extends PkiObject{constructor(e={}){super(),this.altNames=pvutils__namespace.getParametersValue(e,ALT_NAMES,AltName.defaultValues(ALT_NAMES)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return e===ALT_NAMES?[]:super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.altNames||"",value:GeneralName.schema()})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1t);const t=asn1js__namespace.compareSchema(e,e,AltName.schema({names:{altNames:ALT_NAMES}}));AsnError.assertSchema(t,this.className),ALT_NAMES in t.result&&(this.altNames=Array.from(t.result.altNames,(e=>new GeneralName({schema:e}))))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.altNames,(e=>e.toSchema()))})}toJSON(){return{altNames:Array.from(this.altNames,(e=>e.toJSON()))}}}AltName.CLASS_NAME="AltName";const TYPE$3="type",VALUES$1="values",CLEAR_PROPS$1s=["type","values"];class Attribute extends PkiObject{constructor(e={}){super(),this.type=pvutils__namespace.getParametersValue(e,"type",Attribute.defaultValues("type")),this.values=pvutils__namespace.getParametersValue(e,"values",Attribute.defaultValues("values")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"type":return"";case"values":return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"type":return""===t;case"values":return 0===t.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.type||""}),new asn1js__namespace.Set({name:t.setName||"",value:[new asn1js__namespace.Repeated({name:t.values||"",value:new asn1js__namespace.Any})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1s);const t=asn1js__namespace.compareSchema(e,e,Attribute.schema({names:{type:"type",values:"values"}}));AsnError.assertSchema(t,this.className),this.type=t.result.type.valueBlock.toString(),this.values=t.result.values}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.type}),new asn1js__namespace.Set({value:this.values})]})}toJSON(){return{type:this.type,values:Array.from(this.values,(e=>e.toJSON()))}}}Attribute.CLASS_NAME="Attribute";const NOT_BEFORE_TIME="notBeforeTime",NOT_AFTER_TIME="notAfterTime",CLEAR_PROPS$1r=["notBeforeTime","notAfterTime"];class AttCertValidityPeriod extends PkiObject{constructor(e={}){super(),this.notBeforeTime=pvutils__namespace.getParametersValue(e,"notBeforeTime",AttCertValidityPeriod.defaultValues("notBeforeTime")),this.notAfterTime=pvutils__namespace.getParametersValue(e,"notAfterTime",AttCertValidityPeriod.defaultValues("notAfterTime")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"notBeforeTime":case"notAfterTime":return new Date(0,0,0);default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.GeneralizedTime({name:t.notBeforeTime||""}),new asn1js__namespace.GeneralizedTime({name:t.notAfterTime||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1r);const t=asn1js__namespace.compareSchema(e,e,AttCertValidityPeriod.schema({names:{notBeforeTime:"notBeforeTime",notAfterTime:"notAfterTime"}}));AsnError.assertSchema(t,this.className),this.notBeforeTime=t.result.notBeforeTime.toDate(),this.notAfterTime=t.result.notAfterTime.toDate()}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.GeneralizedTime({valueDate:this.notBeforeTime}),new asn1js__namespace.GeneralizedTime({valueDate:this.notAfterTime})]})}toJSON(){return{notBeforeTime:this.notBeforeTime,notAfterTime:this.notAfterTime}}}AttCertValidityPeriod.CLASS_NAME="AttCertValidityPeriod";const NAMES="names",GENERAL_NAMES="generalNames";class GeneralNames extends PkiObject{constructor(e={}){super(),this.names=pvutils__namespace.getParametersValue(e,NAMES,GeneralNames.defaultValues(NAMES)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return"names"===e?[]:super.defaultValues(e)}static schema(e={},t=!1){const a=pvutils__namespace.getParametersValue(e,NAMES,{});return new asn1js__namespace.Sequence({optional:t,name:a.blockName||"",value:[new asn1js__namespace.Repeated({name:a.generalNames||"",value:GeneralName.schema()})]})}fromSchema(e){pvutils__namespace.clearProps(e,[NAMES,GENERAL_NAMES]);const t=asn1js__namespace.compareSchema(e,e,GeneralNames.schema({names:{blockName:NAMES,generalNames:GENERAL_NAMES}}));AsnError.assertSchema(t,this.className),this.names=Array.from(t.result.generalNames,(e=>new GeneralName({schema:e})))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.names,(e=>e.toSchema()))})}toJSON(){return{names:Array.from(this.names,(e=>e.toJSON()))}}}GeneralNames.CLASS_NAME="GeneralNames";const id_SubjectDirectoryAttributes="2.5.29.9",id_SubjectKeyIdentifier="2.5.29.14",id_KeyUsage="2.5.29.15",id_PrivateKeyUsagePeriod="2.5.29.16",id_SubjectAltName="2.5.29.17",id_IssuerAltName="2.5.29.18",id_BasicConstraints="2.5.29.19",id_CRLNumber="2.5.29.20",id_BaseCRLNumber="2.5.29.27",id_CRLReason="2.5.29.21",id_InvalidityDate="2.5.29.24",id_IssuingDistributionPoint="2.5.29.28",id_CertificateIssuer="2.5.29.29",id_NameConstraints="2.5.29.30",id_CRLDistributionPoints="2.5.29.31",id_FreshestCRL="2.5.29.46",id_CertificatePolicies="2.5.29.32",id_AnyPolicy="2.5.29.32.0",id_MicrosoftAppPolicies="1.3.6.1.4.1.311.21.10",id_PolicyMappings="2.5.29.33",id_AuthorityKeyIdentifier="2.5.29.35",id_PolicyConstraints="2.5.29.36",id_ExtKeyUsage="2.5.29.37",id_InhibitAnyPolicy="2.5.29.54",id_AuthorityInfoAccess="1.3.6.1.5.5.7.1.1",id_SubjectInfoAccess="1.3.6.1.5.5.7.1.11",id_SignedCertificateTimestampList="1.3.6.1.4.1.11129.2.4.2",id_MicrosoftCertTemplateV1="1.3.6.1.4.1.311.20.2",id_MicrosoftPrevCaCertHash="1.3.6.1.4.1.311.21.2",id_MicrosoftCertTemplateV2="1.3.6.1.4.1.311.21.7",id_MicrosoftCaVersion="1.3.6.1.4.1.311.21.1",id_QCStatements="1.3.6.1.5.5.7.1.3",id_ContentType_Data="1.2.840.113549.1.7.1",id_ContentType_SignedData="1.2.840.113549.1.7.2",id_ContentType_EnvelopedData="1.2.840.113549.1.7.3",id_ContentType_EncryptedData="1.2.840.113549.1.7.6",id_eContentType_TSTInfo="1.2.840.113549.1.9.16.1.4",id_CertBag_X509Certificate="1.2.840.113549.1.9.22.1",id_CertBag_SDSICertificate="1.2.840.113549.1.9.22.2",id_CertBag_AttributeCertificate="1.2.840.113549.1.9.22.3",id_CRLBag_X509CRL="1.2.840.113549.1.9.23.1",id_pkix="1.3.6.1.5.5.7",id_ad=`${id_pkix}.48`,id_PKIX_OCSP_Basic=`${id_ad}.1.1`,id_ad_caIssuers=`${id_ad}.2`,id_ad_ocsp=`${id_ad}.1`,id_sha1="1.3.14.3.2.26",id_sha256="2.16.840.1.101.3.4.2.1",id_sha384="2.16.840.1.101.3.4.2.2",id_sha512="2.16.840.1.101.3.4.2.3",KEY_IDENTIFIER$1="keyIdentifier",AUTHORITY_CERT_ISSUER="authorityCertIssuer",AUTHORITY_CERT_SERIAL_NUMBER="authorityCertSerialNumber",CLEAR_PROPS$1q=["keyIdentifier","authorityCertIssuer","authorityCertSerialNumber"];class AuthorityKeyIdentifier extends PkiObject{constructor(e={}){super(),"keyIdentifier"in e&&(this.keyIdentifier=pvutils__namespace.getParametersValue(e,"keyIdentifier",AuthorityKeyIdentifier.defaultValues("keyIdentifier"))),"authorityCertIssuer"in e&&(this.authorityCertIssuer=pvutils__namespace.getParametersValue(e,"authorityCertIssuer",AuthorityKeyIdentifier.defaultValues("authorityCertIssuer"))),"authorityCertSerialNumber"in e&&(this.authorityCertSerialNumber=pvutils__namespace.getParametersValue(e,"authorityCertSerialNumber",AuthorityKeyIdentifier.defaultValues("authorityCertSerialNumber"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"keyIdentifier":return new asn1js__namespace.OctetString;case"authorityCertIssuer":return[];case"authorityCertSerialNumber":return new asn1js__namespace.Integer;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Primitive({name:t.keyIdentifier||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.Repeated({name:t.authorityCertIssuer||"",value:GeneralName.schema()})]}),new asn1js__namespace.Primitive({name:t.authorityCertSerialNumber||"",optional:!0,idBlock:{tagClass:3,tagNumber:2}})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1q);const t=asn1js__namespace.compareSchema(e,e,AuthorityKeyIdentifier.schema({names:{keyIdentifier:"keyIdentifier",authorityCertIssuer:"authorityCertIssuer",authorityCertSerialNumber:"authorityCertSerialNumber"}}));AsnError.assertSchema(t,this.className),"keyIdentifier"in t.result&&(this.keyIdentifier=new asn1js__namespace.OctetString({valueHex:t.result.keyIdentifier.valueBlock.valueHex})),"authorityCertIssuer"in t.result&&(this.authorityCertIssuer=Array.from(t.result.authorityCertIssuer,(e=>new GeneralName({schema:e})))),"authorityCertSerialNumber"in t.result&&(this.authorityCertSerialNumber=new asn1js__namespace.Integer({valueHex:t.result.authorityCertSerialNumber.valueBlock.valueHex}))}toSchema(){const e=[];return this.keyIdentifier&&e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:0},valueHex:this.keyIdentifier.valueBlock.valueHexView})),this.authorityCertIssuer&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:Array.from(this.authorityCertIssuer,(e=>e.toSchema()))})),this.authorityCertSerialNumber&&e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:2},valueHex:this.authorityCertSerialNumber.valueBlock.valueHexView})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={};return this.keyIdentifier&&(e.keyIdentifier=this.keyIdentifier.toJSON()),this.authorityCertIssuer&&(e.authorityCertIssuer=Array.from(this.authorityCertIssuer,(e=>e.toJSON()))),this.authorityCertSerialNumber&&(e.authorityCertSerialNumber=this.authorityCertSerialNumber.toJSON()),e}}AuthorityKeyIdentifier.CLASS_NAME="AuthorityKeyIdentifier";const PATH_LENGTH_CONSTRAINT="pathLenConstraint",CA="cA";class BasicConstraints extends PkiObject{constructor(e={}){super(),this.cA=pvutils__namespace.getParametersValue(e,CA,!1),"pathLenConstraint"in e&&(this.pathLenConstraint=pvutils__namespace.getParametersValue(e,"pathLenConstraint",0)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return e!==CA&&super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Boolean({optional:!0,name:t.cA||""}),new asn1js__namespace.Integer({optional:!0,name:t.pathLenConstraint||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,[CA,"pathLenConstraint"]);const t=asn1js__namespace.compareSchema(e,e,BasicConstraints.schema({names:{cA:CA,pathLenConstraint:"pathLenConstraint"}}));AsnError.assertSchema(t,this.className),CA in t.result&&(this.cA=t.result.cA.valueBlock.value),"pathLenConstraint"in t.result&&(t.result.pathLenConstraint.valueBlock.isHexOnly?this.pathLenConstraint=t.result.pathLenConstraint:this.pathLenConstraint=t.result.pathLenConstraint.valueBlock.valueDec)}toSchema(){const e=[];return this.cA!==BasicConstraints.defaultValues(CA)&&e.push(new asn1js__namespace.Boolean({value:this.cA})),"pathLenConstraint"in this&&(this.pathLenConstraint instanceof asn1js__namespace.Integer?e.push(this.pathLenConstraint):e.push(new asn1js__namespace.Integer({value:this.pathLenConstraint}))),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={};return this.cA!==BasicConstraints.defaultValues(CA)&&(e.cA=this.cA),"pathLenConstraint"in this&&(this.pathLenConstraint instanceof asn1js__namespace.Integer?e.pathLenConstraint=this.pathLenConstraint.toJSON():e.pathLenConstraint=this.pathLenConstraint),e}}BasicConstraints.CLASS_NAME="BasicConstraints";const CERTIFICATE_INDEX="certificateIndex",KEY_INDEX="keyIndex";class CAVersion extends PkiObject{constructor(e={}){super(),this.certificateIndex=pvutils__namespace.getParametersValue(e,CERTIFICATE_INDEX,CAVersion.defaultValues(CERTIFICATE_INDEX)),this.keyIndex=pvutils__namespace.getParametersValue(e,KEY_INDEX,CAVersion.defaultValues(KEY_INDEX)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case CERTIFICATE_INDEX:case KEY_INDEX:return 0;default:return super.defaultValues(e)}}static schema(){return new asn1js__namespace.Integer}fromSchema(e){if(e.constructor.blockName()!==asn1js__namespace.Integer.blockName())throw new Error("Object's schema was not verified against input data for CAVersion");let t=e.valueBlock.valueHex.slice(0);const a=new Uint8Array(t);switch(!0){case t.byteLength<4:{const e=new ArrayBuffer(4);new Uint8Array(e).set(a,4-t.byteLength),t=e.slice(0)}break;case t.byteLength>4:{const e=new ArrayBuffer(4);new Uint8Array(e).set(a.slice(0,4)),t=e.slice(0)}}const s=t.slice(0,2),r=new Uint8Array(s);let n=r[0];r[0]=r[1],r[1]=n;const i=new Uint16Array(s);this.keyIndex=i[0];const c=t.slice(2),o=new Uint8Array(c);n=o[0],o[0]=o[1],o[1]=n;const u=new Uint16Array(c);this.certificateIndex=u[0]}toSchema(){const e=new ArrayBuffer(2);new Uint16Array(e)[0]=this.certificateIndex;const t=new Uint8Array(e);let a=t[0];t[0]=t[1],t[1]=a;const s=new ArrayBuffer(2);new Uint16Array(s)[0]=this.keyIndex;const r=new Uint8Array(s);return a=r[0],r[0]=r[1],r[1]=a,new asn1js__namespace.Integer({valueHex:pvutils__namespace.utilConcatBuf(s,e)})}toJSON(){return{certificateIndex:this.certificateIndex,keyIndex:this.keyIndex}}}CAVersion.CLASS_NAME="CAVersion";const POLICY_QUALIFIER_ID="policyQualifierId",QUALIFIER="qualifier",CLEAR_PROPS$1p=["policyQualifierId",QUALIFIER];class PolicyQualifierInfo extends PkiObject{constructor(e={}){super(),this.policyQualifierId=pvutils__namespace.getParametersValue(e,"policyQualifierId",PolicyQualifierInfo.defaultValues("policyQualifierId")),this.qualifier=pvutils__namespace.getParametersValue(e,QUALIFIER,PolicyQualifierInfo.defaultValues(QUALIFIER)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"policyQualifierId":return"";case QUALIFIER:return new asn1js__namespace.Any;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.policyQualifierId||""}),new asn1js__namespace.Any({name:t.qualifier||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1p);const t=asn1js__namespace.compareSchema(e,e,PolicyQualifierInfo.schema({names:{policyQualifierId:"policyQualifierId",qualifier:QUALIFIER}}));AsnError.assertSchema(t,this.className),this.policyQualifierId=t.result.policyQualifierId.valueBlock.toString(),this.qualifier=t.result.qualifier}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.policyQualifierId}),this.qualifier]})}toJSON(){return{policyQualifierId:this.policyQualifierId,qualifier:this.qualifier.toJSON()}}}PolicyQualifierInfo.CLASS_NAME="PolicyQualifierInfo";const POLICY_IDENTIFIER="policyIdentifier",POLICY_QUALIFIERS="policyQualifiers",CLEAR_PROPS$1o=[POLICY_IDENTIFIER,POLICY_QUALIFIERS];class PolicyInformation extends PkiObject{constructor(e={}){super(),this.policyIdentifier=pvutils__namespace.getParametersValue(e,POLICY_IDENTIFIER,PolicyInformation.defaultValues(POLICY_IDENTIFIER)),POLICY_QUALIFIERS in e&&(this.policyQualifiers=pvutils__namespace.getParametersValue(e,POLICY_QUALIFIERS,PolicyInformation.defaultValues(POLICY_QUALIFIERS))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case POLICY_IDENTIFIER:return"";case POLICY_QUALIFIERS:return[];default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.policyIdentifier||""}),new asn1js__namespace.Sequence({optional:!0,value:[new asn1js__namespace.Repeated({name:t.policyQualifiers||"",value:PolicyQualifierInfo.schema()})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1o);const t=asn1js__namespace.compareSchema(e,e,PolicyInformation.schema({names:{policyIdentifier:POLICY_IDENTIFIER,policyQualifiers:POLICY_QUALIFIERS}}));AsnError.assertSchema(t,this.className),this.policyIdentifier=t.result.policyIdentifier.valueBlock.toString(),POLICY_QUALIFIERS in t.result&&(this.policyQualifiers=Array.from(t.result.policyQualifiers,(e=>new PolicyQualifierInfo({schema:e}))))}toSchema(){const e=[];return e.push(new asn1js__namespace.ObjectIdentifier({value:this.policyIdentifier})),this.policyQualifiers&&e.push(new asn1js__namespace.Sequence({value:Array.from(this.policyQualifiers,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={policyIdentifier:this.policyIdentifier};return this.policyQualifiers&&(e.policyQualifiers=Array.from(this.policyQualifiers,(e=>e.toJSON()))),e}}PolicyInformation.CLASS_NAME="PolicyInformation";const CERTIFICATE_POLICIES="certificatePolicies",CLEAR_PROPS$1n=[CERTIFICATE_POLICIES];class CertificatePolicies extends PkiObject{constructor(e={}){super(),this.certificatePolicies=pvutils__namespace.getParametersValue(e,CERTIFICATE_POLICIES,CertificatePolicies.defaultValues(CERTIFICATE_POLICIES)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return e===CERTIFICATE_POLICIES?[]:super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.certificatePolicies||"",value:PolicyInformation.schema()})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1n);const t=asn1js__namespace.compareSchema(e,e,CertificatePolicies.schema({names:{certificatePolicies:CERTIFICATE_POLICIES}}));AsnError.assertSchema(t,this.className),this.certificatePolicies=Array.from(t.result.certificatePolicies,(e=>new PolicyInformation({schema:e})))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.certificatePolicies,(e=>e.toSchema()))})}toJSON(){return{certificatePolicies:Array.from(this.certificatePolicies,(e=>e.toJSON()))}}}CertificatePolicies.CLASS_NAME="CertificatePolicies";const TEMPLATE_ID="templateID",TEMPLATE_MAJOR_VERSION="templateMajorVersion",TEMPLATE_MINOR_VERSION="templateMinorVersion",CLEAR_PROPS$1m=[TEMPLATE_ID,"templateMajorVersion","templateMinorVersion"];class CertificateTemplate extends PkiObject{constructor(e={}){super(),this.templateID=pvutils__namespace.getParametersValue(e,TEMPLATE_ID,CertificateTemplate.defaultValues(TEMPLATE_ID)),"templateMajorVersion"in e&&(this.templateMajorVersion=pvutils__namespace.getParametersValue(e,"templateMajorVersion",CertificateTemplate.defaultValues("templateMajorVersion"))),"templateMinorVersion"in e&&(this.templateMinorVersion=pvutils__namespace.getParametersValue(e,"templateMinorVersion",CertificateTemplate.defaultValues("templateMinorVersion"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case TEMPLATE_ID:return"";case"templateMajorVersion":case"templateMinorVersion":return 0;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.templateID||""}),new asn1js__namespace.Integer({name:t.templateMajorVersion||"",optional:!0}),new asn1js__namespace.Integer({name:t.templateMinorVersion||"",optional:!0})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1m);const t=asn1js__namespace.compareSchema(e,e,CertificateTemplate.schema({names:{templateID:TEMPLATE_ID,templateMajorVersion:"templateMajorVersion",templateMinorVersion:"templateMinorVersion"}}));AsnError.assertSchema(t,this.className),this.templateID=t.result.templateID.valueBlock.toString(),"templateMajorVersion"in t.result&&(this.templateMajorVersion=t.result.templateMajorVersion.valueBlock.valueDec),"templateMinorVersion"in t.result&&(this.templateMinorVersion=t.result.templateMinorVersion.valueBlock.valueDec)}toSchema(){const e=[];return e.push(new asn1js__namespace.ObjectIdentifier({value:this.templateID})),"templateMajorVersion"in this&&e.push(new asn1js__namespace.Integer({value:this.templateMajorVersion})),"templateMinorVersion"in this&&e.push(new asn1js__namespace.Integer({value:this.templateMinorVersion})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={templateID:this.templateID};return"templateMajorVersion"in this&&(e.templateMajorVersion=this.templateMajorVersion),"templateMinorVersion"in this&&(e.templateMinorVersion=this.templateMinorVersion),e}}const DISTRIBUTION_POINT$1="distributionPoint",DISTRIBUTION_POINT_NAMES$1="distributionPointNames",REASONS="reasons",CRL_ISSUER="cRLIssuer",CRL_ISSUER_NAMES="cRLIssuerNames",CLEAR_PROPS$1l=["distributionPoint","distributionPointNames",REASONS,CRL_ISSUER,"cRLIssuerNames"];class DistributionPoint extends PkiObject{constructor(e={}){super(),"distributionPoint"in e&&(this.distributionPoint=pvutils__namespace.getParametersValue(e,"distributionPoint",DistributionPoint.defaultValues("distributionPoint"))),REASONS in e&&(this.reasons=pvutils__namespace.getParametersValue(e,REASONS,DistributionPoint.defaultValues(REASONS))),CRL_ISSUER in e&&(this.cRLIssuer=pvutils__namespace.getParametersValue(e,CRL_ISSUER,DistributionPoint.defaultValues(CRL_ISSUER))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"distributionPoint":return[];case REASONS:return new asn1js__namespace.BitString;case CRL_ISSUER:return[];default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Choice({value:[new asn1js__namespace.Constructed({name:t.distributionPoint||"",optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Repeated({name:t.distributionPointNames||"",value:GeneralName.schema()})]}),new asn1js__namespace.Constructed({name:t.distributionPoint||"",optional:!0,idBlock:{tagClass:3,tagNumber:1},value:RelativeDistinguishedNames.schema().valueBlock.value})]})]}),new asn1js__namespace.Primitive({name:t.reasons||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}}),new asn1js__namespace.Constructed({name:t.cRLIssuer||"",optional:!0,idBlock:{tagClass:3,tagNumber:2},value:[new asn1js__namespace.Repeated({name:t.cRLIssuerNames||"",value:GeneralName.schema()})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1l);const t=asn1js__namespace.compareSchema(e,e,DistributionPoint.schema({names:{distributionPoint:"distributionPoint",distributionPointNames:"distributionPointNames",reasons:REASONS,cRLIssuer:CRL_ISSUER,cRLIssuerNames:"cRLIssuerNames"}}));AsnError.assertSchema(t,this.className),"distributionPoint"in t.result&&(0===t.result.distributionPoint.idBlock.tagNumber&&(this.distributionPoint=Array.from(t.result.distributionPointNames,(e=>new GeneralName({schema:e})))),1===t.result.distributionPoint.idBlock.tagNumber&&(this.distributionPoint=new RelativeDistinguishedNames({schema:new asn1js__namespace.Sequence({value:t.result.distributionPoint.valueBlock.value})}))),REASONS in t.result&&(this.reasons=new asn1js__namespace.BitString({valueHex:t.result.reasons.valueBlock.valueHex})),CRL_ISSUER in t.result&&(this.cRLIssuer=Array.from(t.result.cRLIssuerNames,(e=>new GeneralName({schema:e}))))}toSchema(){const e=[];if(this.distributionPoint){let t;t=this.distributionPoint instanceof Array?new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.distributionPoint,(e=>e.toSchema()))}):new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:[this.distributionPoint.toSchema()]}),e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[t]}))}return this.reasons&&e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:1},valueHex:this.reasons.valueBlock.valueHexView})),this.cRLIssuer&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:2},value:Array.from(this.cRLIssuer,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={};return this.distributionPoint&&(this.distributionPoint instanceof Array?e.distributionPoint=Array.from(this.distributionPoint,(e=>e.toJSON())):e.distributionPoint=this.distributionPoint.toJSON()),this.reasons&&(e.reasons=this.reasons.toJSON()),this.cRLIssuer&&(e.cRLIssuer=Array.from(this.cRLIssuer,(e=>e.toJSON()))),e}}DistributionPoint.CLASS_NAME="DistributionPoint";const DISTRIBUTION_POINTS="distributionPoints",CLEAR_PROPS$1k=[DISTRIBUTION_POINTS];class CRLDistributionPoints extends PkiObject{constructor(e={}){super(),this.distributionPoints=pvutils__namespace.getParametersValue(e,DISTRIBUTION_POINTS,CRLDistributionPoints.defaultValues(DISTRIBUTION_POINTS)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return e===DISTRIBUTION_POINTS?[]:super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.distributionPoints||"",value:DistributionPoint.schema()})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1k);const t=asn1js__namespace.compareSchema(e,e,CRLDistributionPoints.schema({names:{distributionPoints:DISTRIBUTION_POINTS}}));AsnError.assertSchema(t,this.className),this.distributionPoints=Array.from(t.result.distributionPoints,(e=>new DistributionPoint({schema:e})))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.distributionPoints,(e=>e.toSchema()))})}toJSON(){return{distributionPoints:Array.from(this.distributionPoints,(e=>e.toJSON()))}}}CRLDistributionPoints.CLASS_NAME="CRLDistributionPoints";const KEY_PURPOSES="keyPurposes",CLEAR_PROPS$1j=[KEY_PURPOSES];class ExtKeyUsage extends PkiObject{constructor(e={}){super(),this.keyPurposes=pvutils__namespace.getParametersValue(e,KEY_PURPOSES,ExtKeyUsage.defaultValues(KEY_PURPOSES)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return e===KEY_PURPOSES?[]:super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.keyPurposes||"",value:new asn1js__namespace.ObjectIdentifier})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1j);const t=asn1js__namespace.compareSchema(e,e,ExtKeyUsage.schema({names:{keyPurposes:KEY_PURPOSES}}));AsnError.assertSchema(t,this.className),this.keyPurposes=Array.from(t.result.keyPurposes,(e=>e.valueBlock.toString()))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.keyPurposes,(e=>new asn1js__namespace.ObjectIdentifier({value:e})))})}toJSON(){return{keyPurposes:Array.from(this.keyPurposes)}}}ExtKeyUsage.CLASS_NAME="ExtKeyUsage";const ACCESS_DESCRIPTIONS="accessDescriptions";class InfoAccess extends PkiObject{constructor(e={}){super(),this.accessDescriptions=pvutils__namespace.getParametersValue(e,ACCESS_DESCRIPTIONS,InfoAccess.defaultValues(ACCESS_DESCRIPTIONS)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return e===ACCESS_DESCRIPTIONS?[]:super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.accessDescriptions||"",value:AccessDescription.schema()})]})}fromSchema(e){pvutils__namespace.clearProps(e,[ACCESS_DESCRIPTIONS]);const t=asn1js__namespace.compareSchema(e,e,InfoAccess.schema({names:{accessDescriptions:ACCESS_DESCRIPTIONS}}));AsnError.assertSchema(t,this.className),this.accessDescriptions=Array.from(t.result.accessDescriptions,(e=>new AccessDescription({schema:e})))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.accessDescriptions,(e=>e.toSchema()))})}toJSON(){return{accessDescriptions:Array.from(this.accessDescriptions,(e=>e.toJSON()))}}}InfoAccess.CLASS_NAME="InfoAccess";const DISTRIBUTION_POINT="distributionPoint",DISTRIBUTION_POINT_NAMES="distributionPointNames",ONLY_CONTAINS_USER_CERTS="onlyContainsUserCerts",ONLY_CONTAINS_CA_CERTS="onlyContainsCACerts",ONLY_SOME_REASON="onlySomeReasons",INDIRECT_CRL="indirectCRL",ONLY_CONTAINS_ATTRIBUTE_CERTS="onlyContainsAttributeCerts",CLEAR_PROPS$1i=[DISTRIBUTION_POINT,"distributionPointNames","onlyContainsUserCerts","onlyContainsCACerts",ONLY_SOME_REASON,INDIRECT_CRL,"onlyContainsAttributeCerts"];class IssuingDistributionPoint extends PkiObject{constructor(e={}){super(),DISTRIBUTION_POINT in e&&(this.distributionPoint=pvutils__namespace.getParametersValue(e,DISTRIBUTION_POINT,IssuingDistributionPoint.defaultValues(DISTRIBUTION_POINT))),this.onlyContainsUserCerts=pvutils__namespace.getParametersValue(e,"onlyContainsUserCerts",IssuingDistributionPoint.defaultValues("onlyContainsUserCerts")),this.onlyContainsCACerts=pvutils__namespace.getParametersValue(e,"onlyContainsCACerts",IssuingDistributionPoint.defaultValues("onlyContainsCACerts")),ONLY_SOME_REASON in e&&(this.onlySomeReasons=pvutils__namespace.getParametersValue(e,ONLY_SOME_REASON,IssuingDistributionPoint.defaultValues(ONLY_SOME_REASON))),this.indirectCRL=pvutils__namespace.getParametersValue(e,INDIRECT_CRL,IssuingDistributionPoint.defaultValues(INDIRECT_CRL)),this.onlyContainsAttributeCerts=pvutils__namespace.getParametersValue(e,"onlyContainsAttributeCerts",IssuingDistributionPoint.defaultValues("onlyContainsAttributeCerts")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case DISTRIBUTION_POINT:return[];case"onlyContainsUserCerts":case"onlyContainsCACerts":return!1;case ONLY_SOME_REASON:return 0;case INDIRECT_CRL:case"onlyContainsAttributeCerts":return!1;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Choice({value:[new asn1js__namespace.Constructed({name:t.distributionPoint||"",idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Repeated({name:t.distributionPointNames||"",value:GeneralName.schema()})]}),new asn1js__namespace.Constructed({name:t.distributionPoint||"",idBlock:{tagClass:3,tagNumber:1},value:RelativeDistinguishedNames.schema().valueBlock.value})]})]}),new asn1js__namespace.Primitive({name:t.onlyContainsUserCerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}}),new asn1js__namespace.Primitive({name:t.onlyContainsCACerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:2}}),new asn1js__namespace.Primitive({name:t.onlySomeReasons||"",optional:!0,idBlock:{tagClass:3,tagNumber:3}}),new asn1js__namespace.Primitive({name:t.indirectCRL||"",optional:!0,idBlock:{tagClass:3,tagNumber:4}}),new asn1js__namespace.Primitive({name:t.onlyContainsAttributeCerts||"",optional:!0,idBlock:{tagClass:3,tagNumber:5}})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1i);const t=asn1js__namespace.compareSchema(e,e,IssuingDistributionPoint.schema({names:{distributionPoint:DISTRIBUTION_POINT,distributionPointNames:"distributionPointNames",onlyContainsUserCerts:"onlyContainsUserCerts",onlyContainsCACerts:"onlyContainsCACerts",onlySomeReasons:ONLY_SOME_REASON,indirectCRL:INDIRECT_CRL,onlyContainsAttributeCerts:"onlyContainsAttributeCerts"}}));if(AsnError.assertSchema(t,this.className),DISTRIBUTION_POINT in t.result)switch(!0){case 0===t.result.distributionPoint.idBlock.tagNumber:this.distributionPoint=Array.from(t.result.distributionPointNames,(e=>new GeneralName({schema:e})));break;case 1===t.result.distributionPoint.idBlock.tagNumber:this.distributionPoint=new RelativeDistinguishedNames({schema:new asn1js__namespace.Sequence({value:t.result.distributionPoint.valueBlock.value})});break;default:throw new Error("Unknown tagNumber for distributionPoint: {$asn1.result.distributionPoint.idBlock.tagNumber}")}if("onlyContainsUserCerts"in t.result){const e=new Uint8Array(t.result.onlyContainsUserCerts.valueBlock.valueHex);this.onlyContainsUserCerts=0!==e[0]}if("onlyContainsCACerts"in t.result){const e=new Uint8Array(t.result.onlyContainsCACerts.valueBlock.valueHex);this.onlyContainsCACerts=0!==e[0]}if(ONLY_SOME_REASON in t.result){const e=new Uint8Array(t.result.onlySomeReasons.valueBlock.valueHex);this.onlySomeReasons=e[0]}if(INDIRECT_CRL in t.result){const e=new Uint8Array(t.result.indirectCRL.valueBlock.valueHex);this.indirectCRL=0!==e[0]}if("onlyContainsAttributeCerts"in t.result){const e=new Uint8Array(t.result.onlyContainsAttributeCerts.valueBlock.valueHex);this.onlyContainsAttributeCerts=0!==e[0]}}toSchema(){const e=[];if(this.distributionPoint){let t;this.distributionPoint instanceof Array?t=new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.distributionPoint,(e=>e.toSchema()))}):(t=this.distributionPoint.toSchema(),t.idBlock.tagClass=3,t.idBlock.tagNumber=1),e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[t]}))}if(this.onlyContainsUserCerts!==IssuingDistributionPoint.defaultValues("onlyContainsUserCerts")&&e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:1},valueHex:new Uint8Array([255]).buffer})),this.onlyContainsCACerts!==IssuingDistributionPoint.defaultValues("onlyContainsCACerts")&&e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:2},valueHex:new Uint8Array([255]).buffer})),void 0!==this.onlySomeReasons){const t=new ArrayBuffer(1);new Uint8Array(t)[0]=this.onlySomeReasons,e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:3},valueHex:t}))}return this.indirectCRL!==IssuingDistributionPoint.defaultValues(INDIRECT_CRL)&&e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:4},valueHex:new Uint8Array([255]).buffer})),this.onlyContainsAttributeCerts!==IssuingDistributionPoint.defaultValues("onlyContainsAttributeCerts")&&e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:5},valueHex:new Uint8Array([255]).buffer})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={};return this.distributionPoint&&(this.distributionPoint instanceof Array?e.distributionPoint=Array.from(this.distributionPoint,(e=>e.toJSON())):e.distributionPoint=this.distributionPoint.toJSON()),this.onlyContainsUserCerts!==IssuingDistributionPoint.defaultValues("onlyContainsUserCerts")&&(e.onlyContainsUserCerts=this.onlyContainsUserCerts),this.onlyContainsCACerts!==IssuingDistributionPoint.defaultValues("onlyContainsCACerts")&&(e.onlyContainsCACerts=this.onlyContainsCACerts),ONLY_SOME_REASON in this&&(e.onlySomeReasons=this.onlySomeReasons),this.indirectCRL!==IssuingDistributionPoint.defaultValues(INDIRECT_CRL)&&(e.indirectCRL=this.indirectCRL),this.onlyContainsAttributeCerts!==IssuingDistributionPoint.defaultValues("onlyContainsAttributeCerts")&&(e.onlyContainsAttributeCerts=this.onlyContainsAttributeCerts),e}}IssuingDistributionPoint.CLASS_NAME="IssuingDistributionPoint";const BASE="base",MINIMUM="minimum",MAXIMUM="maximum",CLEAR_PROPS$1h=[BASE,MINIMUM,MAXIMUM];class GeneralSubtree extends PkiObject{constructor(e={}){super(),this.base=pvutils__namespace.getParametersValue(e,BASE,GeneralSubtree.defaultValues(BASE)),this.minimum=pvutils__namespace.getParametersValue(e,MINIMUM,GeneralSubtree.defaultValues(MINIMUM)),MAXIMUM in e&&(this.maximum=pvutils__namespace.getParametersValue(e,MAXIMUM,GeneralSubtree.defaultValues(MAXIMUM))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case BASE:return new GeneralName;case MINIMUM:case MAXIMUM:return 0;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[GeneralName.schema(t.base||{}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Integer({name:t.minimum||""})]}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.Integer({name:t.maximum||""})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1h);const t=asn1js__namespace.compareSchema(e,e,GeneralSubtree.schema({names:{base:{names:{blockName:BASE}},minimum:MINIMUM,maximum:MAXIMUM}}));AsnError.assertSchema(t,this.className),this.base=new GeneralName({schema:t.result.base}),MINIMUM in t.result&&(t.result.minimum.valueBlock.isHexOnly?this.minimum=t.result.minimum:this.minimum=t.result.minimum.valueBlock.valueDec),MAXIMUM in t.result&&(t.result.maximum.valueBlock.isHexOnly?this.maximum=t.result.maximum:this.maximum=t.result.maximum.valueBlock.valueDec)}toSchema(){const e=[];if(e.push(this.base.toSchema()),0!==this.minimum){let t=0;t=this.minimum instanceof asn1js__namespace.Integer?this.minimum:new asn1js__namespace.Integer({value:this.minimum}),e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[t]}))}if(MAXIMUM in this){let t=0;t=this.maximum instanceof asn1js__namespace.Integer?this.maximum:new asn1js__namespace.Integer({value:this.maximum}),e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[t]}))}return new asn1js__namespace.Sequence({value:e})}toJSON(){const e={base:this.base.toJSON()};return 0!==this.minimum&&("number"==typeof this.minimum?e.minimum=this.minimum:e.minimum=this.minimum.toJSON()),void 0!==this.maximum&&("number"==typeof this.maximum?e.maximum=this.maximum:e.maximum=this.maximum.toJSON()),e}}GeneralSubtree.CLASS_NAME="GeneralSubtree";const PERMITTED_SUBTREES="permittedSubtrees",EXCLUDED_SUBTREES="excludedSubtrees",CLEAR_PROPS$1g=[PERMITTED_SUBTREES,EXCLUDED_SUBTREES];class NameConstraints extends PkiObject{constructor(e={}){super(),PERMITTED_SUBTREES in e&&(this.permittedSubtrees=pvutils__namespace.getParametersValue(e,PERMITTED_SUBTREES,NameConstraints.defaultValues(PERMITTED_SUBTREES))),EXCLUDED_SUBTREES in e&&(this.excludedSubtrees=pvutils__namespace.getParametersValue(e,EXCLUDED_SUBTREES,NameConstraints.defaultValues(EXCLUDED_SUBTREES))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case PERMITTED_SUBTREES:case EXCLUDED_SUBTREES:return[];default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Repeated({name:t.permittedSubtrees||"",value:GeneralSubtree.schema()})]}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.Repeated({name:t.excludedSubtrees||"",value:GeneralSubtree.schema()})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1g);const t=asn1js__namespace.compareSchema(e,e,NameConstraints.schema({names:{permittedSubtrees:PERMITTED_SUBTREES,excludedSubtrees:EXCLUDED_SUBTREES}}));AsnError.assertSchema(t,this.className),PERMITTED_SUBTREES in t.result&&(this.permittedSubtrees=Array.from(t.result.permittedSubtrees,(e=>new GeneralSubtree({schema:e})))),EXCLUDED_SUBTREES in t.result&&(this.excludedSubtrees=Array.from(t.result.excludedSubtrees,(e=>new GeneralSubtree({schema:e}))))}toSchema(){const e=[];return this.permittedSubtrees&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.permittedSubtrees,(e=>e.toSchema()))})),this.excludedSubtrees&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:Array.from(this.excludedSubtrees,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={};return this.permittedSubtrees&&(e.permittedSubtrees=Array.from(this.permittedSubtrees,(e=>e.toJSON()))),this.excludedSubtrees&&(e.excludedSubtrees=Array.from(this.excludedSubtrees,(e=>e.toJSON()))),e}}NameConstraints.CLASS_NAME="NameConstraints";const REQUIRE_EXPLICIT_POLICY="requireExplicitPolicy",INHIBIT_POLICY_MAPPING="inhibitPolicyMapping",CLEAR_PROPS$1f=["requireExplicitPolicy","inhibitPolicyMapping"];class PolicyConstraints extends PkiObject{constructor(e={}){super(),"requireExplicitPolicy"in e&&(this.requireExplicitPolicy=pvutils__namespace.getParametersValue(e,"requireExplicitPolicy",PolicyConstraints.defaultValues("requireExplicitPolicy"))),"inhibitPolicyMapping"in e&&(this.inhibitPolicyMapping=pvutils__namespace.getParametersValue(e,"inhibitPolicyMapping",PolicyConstraints.defaultValues("inhibitPolicyMapping"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"requireExplicitPolicy":case"inhibitPolicyMapping":return 0;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Primitive({name:t.requireExplicitPolicy||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new asn1js__namespace.Primitive({name:t.inhibitPolicyMapping||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1f);const t=asn1js__namespace.compareSchema(e,e,PolicyConstraints.schema({names:{requireExplicitPolicy:"requireExplicitPolicy",inhibitPolicyMapping:"inhibitPolicyMapping"}}));if(AsnError.assertSchema(t,this.className),"requireExplicitPolicy"in t.result){const e=t.result.requireExplicitPolicy;e.idBlock.tagClass=1,e.idBlock.tagNumber=2;const a=e.toBER(!1),s=asn1js__namespace.fromBER(a);AsnError.assert(s,"Integer"),this.requireExplicitPolicy=s.result.valueBlock.valueDec}if("inhibitPolicyMapping"in t.result){const e=t.result.inhibitPolicyMapping;e.idBlock.tagClass=1,e.idBlock.tagNumber=2;const a=e.toBER(!1),s=asn1js__namespace.fromBER(a);AsnError.assert(s,"Integer"),this.inhibitPolicyMapping=s.result.valueBlock.valueDec}}toSchema(){const e=[];if("requireExplicitPolicy"in this){const t=new asn1js__namespace.Integer({value:this.requireExplicitPolicy});t.idBlock.tagClass=3,t.idBlock.tagNumber=0,e.push(t)}if("inhibitPolicyMapping"in this){const t=new asn1js__namespace.Integer({value:this.inhibitPolicyMapping});t.idBlock.tagClass=3,t.idBlock.tagNumber=1,e.push(t)}return new asn1js__namespace.Sequence({value:e})}toJSON(){const e={};return"requireExplicitPolicy"in this&&(e.requireExplicitPolicy=this.requireExplicitPolicy),"inhibitPolicyMapping"in this&&(e.inhibitPolicyMapping=this.inhibitPolicyMapping),e}}PolicyConstraints.CLASS_NAME="PolicyConstraints";const ISSUER_DOMAIN_POLICY="issuerDomainPolicy",SUBJECT_DOMAIN_POLICY="subjectDomainPolicy",CLEAR_PROPS$1e=["issuerDomainPolicy","subjectDomainPolicy"];class PolicyMapping extends PkiObject{constructor(e={}){super(),this.issuerDomainPolicy=pvutils__namespace.getParametersValue(e,"issuerDomainPolicy",PolicyMapping.defaultValues("issuerDomainPolicy")),this.subjectDomainPolicy=pvutils__namespace.getParametersValue(e,"subjectDomainPolicy",PolicyMapping.defaultValues("subjectDomainPolicy")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"issuerDomainPolicy":case"subjectDomainPolicy":return"";default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.issuerDomainPolicy||""}),new asn1js__namespace.ObjectIdentifier({name:t.subjectDomainPolicy||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1e);const t=asn1js__namespace.compareSchema(e,e,PolicyMapping.schema({names:{issuerDomainPolicy:"issuerDomainPolicy",subjectDomainPolicy:"subjectDomainPolicy"}}));AsnError.assertSchema(t,this.className),this.issuerDomainPolicy=t.result.issuerDomainPolicy.valueBlock.toString(),this.subjectDomainPolicy=t.result.subjectDomainPolicy.valueBlock.toString()}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.issuerDomainPolicy}),new asn1js__namespace.ObjectIdentifier({value:this.subjectDomainPolicy})]})}toJSON(){return{issuerDomainPolicy:this.issuerDomainPolicy,subjectDomainPolicy:this.subjectDomainPolicy}}}PolicyMapping.CLASS_NAME="PolicyMapping";const MAPPINGS="mappings",CLEAR_PROPS$1d=[MAPPINGS];class PolicyMappings extends PkiObject{constructor(e={}){super(),this.mappings=pvutils__namespace.getParametersValue(e,MAPPINGS,PolicyMappings.defaultValues(MAPPINGS)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return e===MAPPINGS?[]:super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.mappings||"",value:PolicyMapping.schema()})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1d);const t=asn1js__namespace.compareSchema(e,e,PolicyMappings.schema({names:{mappings:MAPPINGS}}));AsnError.assertSchema(t,this.className),this.mappings=Array.from(t.result.mappings,(e=>new PolicyMapping({schema:e})))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.mappings,(e=>e.toSchema()))})}toJSON(){return{mappings:Array.from(this.mappings,(e=>e.toJSON()))}}}PolicyMappings.CLASS_NAME="PolicyMappings";const NOT_BEFORE$1="notBefore",NOT_AFTER$1="notAfter",CLEAR_PROPS$1c=["notBefore","notAfter"];class PrivateKeyUsagePeriod extends PkiObject{constructor(e={}){super(),"notBefore"in e&&(this.notBefore=pvutils__namespace.getParametersValue(e,"notBefore",PrivateKeyUsagePeriod.defaultValues("notBefore"))),"notAfter"in e&&(this.notAfter=pvutils__namespace.getParametersValue(e,"notAfter",PrivateKeyUsagePeriod.defaultValues("notAfter"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"notBefore":case"notAfter":return new Date;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Primitive({name:t.notBefore||"",optional:!0,idBlock:{tagClass:3,tagNumber:0}}),new asn1js__namespace.Primitive({name:t.notAfter||"",optional:!0,idBlock:{tagClass:3,tagNumber:1}})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1c);const t=asn1js__namespace.compareSchema(e,e,PrivateKeyUsagePeriod.schema({names:{notBefore:"notBefore",notAfter:"notAfter"}}));if(AsnError.assertSchema(t,this.className),"notBefore"in t.result){const e=new asn1js__namespace.GeneralizedTime;e.fromBuffer(t.result.notBefore.valueBlock.valueHex),this.notBefore=e.toDate()}if("notAfter"in t.result){const e=new asn1js__namespace.GeneralizedTime({valueHex:t.result.notAfter.valueBlock.valueHex});e.fromBuffer(t.result.notAfter.valueBlock.valueHex),this.notAfter=e.toDate()}}toSchema(){const e=[];return"notBefore"in this&&e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:0},valueHex:new asn1js__namespace.GeneralizedTime({valueDate:this.notBefore}).valueBlock.valueHexView})),"notAfter"in this&&e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:1},valueHex:new asn1js__namespace.GeneralizedTime({valueDate:this.notAfter}).valueBlock.valueHexView})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={};return this.notBefore&&(e.notBefore=this.notBefore),this.notAfter&&(e.notAfter=this.notAfter),e}}PrivateKeyUsagePeriod.CLASS_NAME="PrivateKeyUsagePeriod";const ID="id",TYPE$2="type",VALUES="values",QC_STATEMENT_CLEAR_PROPS=[ID,"type"],QC_STATEMENTS_CLEAR_PROPS=[VALUES];class QCStatement extends PkiObject{constructor(e={}){super(),this.id=pvutils__namespace.getParametersValue(e,ID,QCStatement.defaultValues(ID)),"type"in e&&(this.type=pvutils__namespace.getParametersValue(e,"type",QCStatement.defaultValues("type"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case ID:return"";case"type":return new asn1js__namespace.Null;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case ID:return""===t;case"type":return t instanceof asn1js__namespace.Null;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.id||""}),new asn1js__namespace.Any({name:t.type||"",optional:!0})]})}fromSchema(e){pvutils__namespace.clearProps(e,QC_STATEMENT_CLEAR_PROPS);const t=asn1js__namespace.compareSchema(e,e,QCStatement.schema({names:{id:ID,type:"type"}}));AsnError.assertSchema(t,this.className),this.id=t.result.id.valueBlock.toString(),"type"in t.result&&(this.type=t.result.type)}toSchema(){const e=[new asn1js__namespace.ObjectIdentifier({value:this.id})];return"type"in this&&e.push(this.type),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={id:this.id};return this.type&&(e.type=this.type.toJSON()),e}}QCStatement.CLASS_NAME="QCStatement";class QCStatements extends PkiObject{constructor(e={}){super(),this.values=pvutils__namespace.getParametersValue(e,VALUES,QCStatements.defaultValues(VALUES)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return e===VALUES?[]:super.defaultValues(e)}static compareWithDefault(e,t){return e===VALUES?0===t.length:super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.values||"",value:QCStatement.schema(t.value||{})})]})}fromSchema(e){pvutils__namespace.clearProps(e,QC_STATEMENTS_CLEAR_PROPS);const t=asn1js__namespace.compareSchema(e,e,QCStatements.schema({names:{values:VALUES}}));AsnError.assertSchema(t,this.className),this.values=Array.from(t.result.values,(e=>new QCStatement({schema:e})))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.values,(e=>e.toSchema()))})}toJSON(){return{values:Array.from(this.values,(e=>e.toJSON()))}}}var _a;QCStatements.CLASS_NAME="QCStatements";class ECNamedCurves{static register(e,t,a){this.namedCurves[e.toLowerCase()]=this.namedCurves[t]={name:e,id:t,size:a}}static find(e){return this.namedCurves[e.toLowerCase()]||null}}_a=ECNamedCurves,ECNamedCurves.namedCurves={},_a.register("P-256","1.2.840.10045.3.1.7",32),_a.register("P-384","1.3.132.0.34",48),_a.register("P-521","1.3.132.0.35",66),_a.register("brainpoolP256r1","1.3.36.3.3.2.8.1.1.7",32),_a.register("brainpoolP384r1","1.3.36.3.3.2.8.1.1.11",48),_a.register("brainpoolP512r1","1.3.36.3.3.2.8.1.1.13",64);const X="x",Y="y",NAMED_CURVE$1="namedCurve";class ECPublicKey extends PkiObject{constructor(e={}){super(),this.x=pvutils__namespace.getParametersValue(e,X,ECPublicKey.defaultValues(X)),this.y=pvutils__namespace.getParametersValue(e,Y,ECPublicKey.defaultValues(Y)),this.namedCurve=pvutils__namespace.getParametersValue(e,"namedCurve",ECPublicKey.defaultValues("namedCurve")),e.json&&this.fromJSON(e.json),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case X:case Y:return EMPTY_BUFFER;case"namedCurve":return"";default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case X:case Y:return t instanceof ArrayBuffer&&pvutils__namespace.isEqualBuffer(t,ECPublicKey.defaultValues(e));case"namedCurve":return"string"==typeof t&&t===ECPublicKey.defaultValues(e);default:return super.defaultValues(e)}}static schema(){return new asn1js__namespace.RawData}fromSchema(e){const t=pvtsutils.BufferSourceConverter.toUint8Array(e);if(4!==t[0])throw new Error("Object's schema was not verified against input data for ECPublicKey");const a=ECNamedCurves.find(this.namedCurve);if(!a)throw new Error(`Incorrect curve OID: ${this.namedCurve}`);const s=a.size;if(t.byteLength!==2*s+1)throw new Error("Object's schema was not verified against input data for ECPublicKey");this.namedCurve=a.name,this.x=t.slice(1,s+1).buffer,this.y=t.slice(1+s,2*s+1).buffer}toSchema(){return new asn1js__namespace.RawData({data:pvutils__namespace.utilConcatBuf(new Uint8Array([4]).buffer,this.x,this.y)})}toJSON(){const e=ECNamedCurves.find(this.namedCurve);return{crv:e?e.name:this.namedCurve,x:pvutils__namespace.toBase64(pvutils__namespace.arrayBufferToString(this.x),!0,!0,!1),y:pvutils__namespace.toBase64(pvutils__namespace.arrayBufferToString(this.y),!0,!0,!1)}}fromJSON(e){ParameterError.assert("json",e,"crv","x","y");let t=0;const a=ECNamedCurves.find(e.crv);a&&(this.namedCurve=a.id,t=a.size);const s=pvutils__namespace.stringToArrayBuffer(pvutils__namespace.fromBase64(e.x,!0));if(s.byteLength<t){this.x=new ArrayBuffer(t);const e=new Uint8Array(this.x),a=new Uint8Array(s);e.set(a,1)}else this.x=s.slice(0,t);const r=pvutils__namespace.stringToArrayBuffer(pvutils__namespace.fromBase64(e.y,!0));if(r.byteLength<t){this.y=new ArrayBuffer(t);const e=new Uint8Array(this.y),a=new Uint8Array(r);e.set(a,1)}else this.y=r.slice(0,t)}}ECPublicKey.CLASS_NAME="ECPublicKey";const MODULUS$1="modulus",PUBLIC_EXPONENT$1="publicExponent",CLEAR_PROPS$1b=["modulus","publicExponent"];class RSAPublicKey extends PkiObject{constructor(e={}){super(),this.modulus=pvutils__namespace.getParametersValue(e,"modulus",RSAPublicKey.defaultValues("modulus")),this.publicExponent=pvutils__namespace.getParametersValue(e,"publicExponent",RSAPublicKey.defaultValues("publicExponent")),e.json&&this.fromJSON(e.json),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"modulus":case"publicExponent":return new asn1js__namespace.Integer;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.modulus||""}),new asn1js__namespace.Integer({name:t.publicExponent||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1b);const t=asn1js__namespace.compareSchema(e,e,RSAPublicKey.schema({names:{modulus:"modulus",publicExponent:"publicExponent"}}));AsnError.assertSchema(t,this.className),this.modulus=t.result.modulus.convertFromDER(256),this.publicExponent=t.result.publicExponent}toSchema(){return new asn1js__namespace.Sequence({value:[this.modulus.convertToDER(),this.publicExponent]})}toJSON(){return{n:pvtsutils__namespace.Convert.ToBase64Url(this.modulus.valueBlock.valueHexView),e:pvtsutils__namespace.Convert.ToBase64Url(this.publicExponent.valueBlock.valueHexView)}}fromJSON(e){ParameterError.assert("json",e,"n","e");const t=pvutils__namespace.stringToArrayBuffer(pvutils__namespace.fromBase64(e.n,!0));this.modulus=new asn1js__namespace.Integer({valueHex:t.slice(0,Math.pow(2,pvutils__namespace.nearestPowerOf2(t.byteLength)))}),this.publicExponent=new asn1js__namespace.Integer({valueHex:pvutils__namespace.stringToArrayBuffer(pvutils__namespace.fromBase64(e.e,!0)).slice(0,3)})}}RSAPublicKey.CLASS_NAME="RSAPublicKey";const ALGORITHM$1="algorithm",SUBJECT_PUBLIC_KEY="subjectPublicKey",CLEAR_PROPS$1a=["algorithm","subjectPublicKey"];class PublicKeyInfo extends PkiObject{get parsedKey(){if(void 0===this._parsedKey){switch(this.algorithm.algorithmId){case"1.2.840.10045.2.1":if("algorithmParams"in this.algorithm&&this.algorithm.algorithmParams.constructor.blockName()===asn1js__namespace.ObjectIdentifier.blockName())try{this._parsedKey=new ECPublicKey({namedCurve:this.algorithm.algorithmParams.valueBlock.toString(),schema:this.subjectPublicKey.valueBlock.valueHexView})}catch(e){}break;case"1.2.840.113549.1.1.1":{const e=asn1js__namespace.fromBER(this.subjectPublicKey.valueBlock.valueHexView);if(-1!==e.offset)try{this._parsedKey=new RSAPublicKey({schema:e.result})}catch(e){}}}this._parsedKey||(this._parsedKey=null)}return this._parsedKey||void 0}set parsedKey(e){this._parsedKey=e}constructor(e={}){super(),this.algorithm=pvutils__namespace.getParametersValue(e,"algorithm",PublicKeyInfo.defaultValues("algorithm")),this.subjectPublicKey=pvutils__namespace.getParametersValue(e,"subjectPublicKey",PublicKeyInfo.defaultValues("subjectPublicKey"));const t=pvutils__namespace.getParametersValue(e,"parsedKey",null);t&&(this.parsedKey=t),e.json&&this.fromJSON(e.json),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"algorithm":return new AlgorithmIdentifier;case"subjectPublicKey":return new asn1js__namespace.BitString;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[AlgorithmIdentifier.schema(t.algorithm||{}),new asn1js__namespace.BitString({name:t.subjectPublicKey||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1a);const t=asn1js__namespace.compareSchema(e,e,PublicKeyInfo.schema({names:{algorithm:{names:{blockName:"algorithm"}},subjectPublicKey:"subjectPublicKey"}}));AsnError.assertSchema(t,this.className),this.algorithm=new AlgorithmIdentifier({schema:t.result.algorithm}),this.subjectPublicKey=t.result.subjectPublicKey}toSchema(){return new asn1js__namespace.Sequence({value:[this.algorithm.toSchema(),this.subjectPublicKey]})}toJSON(){if(!this.parsedKey)return{algorithm:this.algorithm.toJSON(),subjectPublicKey:this.subjectPublicKey.toJSON()};const e={};switch(this.algorithm.algorithmId){case"1.2.840.10045.2.1":e.kty="EC";break;case"1.2.840.113549.1.1.1":e.kty="RSA"}const t=this.parsedKey.toJSON();return Object.assign(e,t),e}fromJSON(e){if("kty"in e){switch(e.kty.toUpperCase()){case"EC":this.parsedKey=new ECPublicKey({json:e}),this.algorithm=new AlgorithmIdentifier({algorithmId:"1.2.840.10045.2.1",algorithmParams:new asn1js__namespace.ObjectIdentifier({value:this.parsedKey.namedCurve})});break;case"RSA":this.parsedKey=new RSAPublicKey({json:e}),this.algorithm=new AlgorithmIdentifier({algorithmId:"1.2.840.113549.1.1.1",algorithmParams:new asn1js__namespace.Null});break;default:throw new Error(`Invalid value for "kty" parameter: ${e.kty}`)}this.subjectPublicKey=new asn1js__namespace.BitString({valueHex:this.parsedKey.toSchema().toBER(!1)})}}async importKey(e,t=getCrypto(!0)){try{if(!e)throw new Error("Need to provide publicKey input parameter");const a=await t.exportKey("spki",e),s=asn1js__namespace.fromBER(a);try{this.fromSchema(s.result)}catch(e){throw new Error("Error during initializing object from schema")}}catch(e){const t=e instanceof Error?e.message:`${e}`;throw new Error(`Error during exporting public key: ${t}`)}}}PublicKeyInfo.CLASS_NAME="PublicKeyInfo";const VERSION$l="version",PRIVATE_KEY$1="privateKey",NAMED_CURVE="namedCurve",PUBLIC_KEY$1="publicKey",CLEAR_PROPS$19=["version","privateKey",NAMED_CURVE,"publicKey"];class ECPrivateKey extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",ECPrivateKey.defaultValues("version")),this.privateKey=pvutils__namespace.getParametersValue(e,"privateKey",ECPrivateKey.defaultValues("privateKey")),NAMED_CURVE in e&&(this.namedCurve=pvutils__namespace.getParametersValue(e,NAMED_CURVE,ECPrivateKey.defaultValues(NAMED_CURVE))),"publicKey"in e&&(this.publicKey=pvutils__namespace.getParametersValue(e,"publicKey",ECPrivateKey.defaultValues("publicKey"))),e.json&&this.fromJSON(e.json),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 1;case"privateKey":return new asn1js__namespace.OctetString;case NAMED_CURVE:return"";case"publicKey":return new ECPublicKey;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"version":return t===ECPrivateKey.defaultValues(e);case"privateKey":return t.isEqual(ECPrivateKey.defaultValues(e));case NAMED_CURVE:return""===t;case"publicKey":return ECPublicKey.compareWithDefault(NAMED_CURVE,t.namedCurve)&&ECPublicKey.compareWithDefault("x",t.x)&&ECPublicKey.compareWithDefault("y",t.y);default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||""}),new asn1js__namespace.OctetString({name:t.privateKey||""}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.ObjectIdentifier({name:t.namedCurve||""})]}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.BitString({name:t.publicKey||""})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$19);const t=asn1js__namespace.compareSchema(e,e,ECPrivateKey.schema({names:{version:"version",privateKey:"privateKey",namedCurve:NAMED_CURVE,publicKey:"publicKey"}}));if(AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,this.privateKey=t.result.privateKey,NAMED_CURVE in t.result&&(this.namedCurve=t.result.namedCurve.valueBlock.toString()),"publicKey"in t.result){const e={schema:t.result.publicKey.valueBlock.valueHex};NAMED_CURVE in this&&(e.namedCurve=this.namedCurve),this.publicKey=new ECPublicKey(e)}}toSchema(){const e=[new asn1js__namespace.Integer({value:this.version}),this.privateKey];return this.namedCurve&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.ObjectIdentifier({value:this.namedCurve})]})),this.publicKey&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.BitString({valueHex:this.publicKey.toSchema().toBER(!1)})]})),new asn1js__namespace.Sequence({value:e})}toJSON(){if(!this.namedCurve||ECPrivateKey.compareWithDefault(NAMED_CURVE,this.namedCurve))throw new Error('Not enough information for making JSON: absent "namedCurve" value');const e=ECNamedCurves.find(this.namedCurve),t={crv:e?e.name:this.namedCurve,d:pvtsutils__namespace.Convert.ToBase64Url(this.privateKey.valueBlock.valueHexView)};if(this.publicKey){const e=this.publicKey.toJSON();t.x=e.x,t.y=e.y}return t}fromJSON(e){ParameterError.assert("json",e,"crv","d");let t=0;const a=ECNamedCurves.find(e.crv);a&&(this.namedCurve=a.id,t=a.size);const s=pvtsutils__namespace.Convert.FromBase64Url(e.d);if(s.byteLength<t){const e=new ArrayBuffer(t),a=new Uint8Array(e),r=new Uint8Array(s);a.set(r,1),this.privateKey=new asn1js__namespace.OctetString({valueHex:e})}else this.privateKey=new asn1js__namespace.OctetString({valueHex:s.slice(0,t)});e.x&&e.y&&(this.publicKey=new ECPublicKey({json:e}))}}ECPrivateKey.CLASS_NAME="ECPrivateKey";const PRIME="prime",EXPONENT="exponent",COEFFICIENT$1="coefficient",CLEAR_PROPS$18=[PRIME,EXPONENT,"coefficient"];class OtherPrimeInfo extends PkiObject{constructor(e={}){super(),this.prime=pvutils__namespace.getParametersValue(e,PRIME,OtherPrimeInfo.defaultValues(PRIME)),this.exponent=pvutils__namespace.getParametersValue(e,EXPONENT,OtherPrimeInfo.defaultValues(EXPONENT)),this.coefficient=pvutils__namespace.getParametersValue(e,"coefficient",OtherPrimeInfo.defaultValues("coefficient")),e.json&&this.fromJSON(e.json),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case PRIME:case EXPONENT:case"coefficient":return new asn1js__namespace.Integer;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.prime||""}),new asn1js__namespace.Integer({name:t.exponent||""}),new asn1js__namespace.Integer({name:t.coefficient||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$18);const t=asn1js__namespace.compareSchema(e,e,OtherPrimeInfo.schema({names:{prime:PRIME,exponent:EXPONENT,coefficient:"coefficient"}}));AsnError.assertSchema(t,this.className),this.prime=t.result.prime.convertFromDER(),this.exponent=t.result.exponent.convertFromDER(),this.coefficient=t.result.coefficient.convertFromDER()}toSchema(){return new asn1js__namespace.Sequence({value:[this.prime.convertToDER(),this.exponent.convertToDER(),this.coefficient.convertToDER()]})}toJSON(){return{r:pvtsutils__namespace.Convert.ToBase64Url(this.prime.valueBlock.valueHexView),d:pvtsutils__namespace.Convert.ToBase64Url(this.exponent.valueBlock.valueHexView),t:pvtsutils__namespace.Convert.ToBase64Url(this.coefficient.valueBlock.valueHexView)}}fromJSON(e){ParameterError.assert("json",e,"r","d","r"),this.prime=new asn1js__namespace.Integer({valueHex:pvtsutils__namespace.Convert.FromBase64Url(e.r)}),this.exponent=new asn1js__namespace.Integer({valueHex:pvtsutils__namespace.Convert.FromBase64Url(e.d)}),this.coefficient=new asn1js__namespace.Integer({valueHex:pvtsutils__namespace.Convert.FromBase64Url(e.t)})}}OtherPrimeInfo.CLASS_NAME="OtherPrimeInfo";const VERSION$k="version",MODULUS="modulus",PUBLIC_EXPONENT="publicExponent",PRIVATE_EXPONENT="privateExponent",PRIME1="prime1",PRIME2="prime2",EXPONENT1="exponent1",EXPONENT2="exponent2",COEFFICIENT="coefficient",OTHER_PRIME_INFOS="otherPrimeInfos",CLEAR_PROPS$17=["version",MODULUS,PUBLIC_EXPONENT,PRIVATE_EXPONENT,PRIME1,PRIME2,EXPONENT1,EXPONENT2,COEFFICIENT,"otherPrimeInfos"];class RSAPrivateKey extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",RSAPrivateKey.defaultValues("version")),this.modulus=pvutils__namespace.getParametersValue(e,MODULUS,RSAPrivateKey.defaultValues(MODULUS)),this.publicExponent=pvutils__namespace.getParametersValue(e,PUBLIC_EXPONENT,RSAPrivateKey.defaultValues(PUBLIC_EXPONENT)),this.privateExponent=pvutils__namespace.getParametersValue(e,PRIVATE_EXPONENT,RSAPrivateKey.defaultValues(PRIVATE_EXPONENT)),this.prime1=pvutils__namespace.getParametersValue(e,PRIME1,RSAPrivateKey.defaultValues(PRIME1)),this.prime2=pvutils__namespace.getParametersValue(e,PRIME2,RSAPrivateKey.defaultValues(PRIME2)),this.exponent1=pvutils__namespace.getParametersValue(e,EXPONENT1,RSAPrivateKey.defaultValues(EXPONENT1)),this.exponent2=pvutils__namespace.getParametersValue(e,EXPONENT2,RSAPrivateKey.defaultValues(EXPONENT2)),this.coefficient=pvutils__namespace.getParametersValue(e,COEFFICIENT,RSAPrivateKey.defaultValues(COEFFICIENT)),"otherPrimeInfos"in e&&(this.otherPrimeInfos=pvutils__namespace.getParametersValue(e,"otherPrimeInfos",RSAPrivateKey.defaultValues("otherPrimeInfos"))),e.json&&this.fromJSON(e.json),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case MODULUS:case PUBLIC_EXPONENT:case PRIVATE_EXPONENT:case PRIME1:case PRIME2:case EXPONENT1:case EXPONENT2:case COEFFICIENT:return new asn1js__namespace.Integer;case"otherPrimeInfos":return[];default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||""}),new asn1js__namespace.Integer({name:t.modulus||""}),new asn1js__namespace.Integer({name:t.publicExponent||""}),new asn1js__namespace.Integer({name:t.privateExponent||""}),new asn1js__namespace.Integer({name:t.prime1||""}),new asn1js__namespace.Integer({name:t.prime2||""}),new asn1js__namespace.Integer({name:t.exponent1||""}),new asn1js__namespace.Integer({name:t.exponent2||""}),new asn1js__namespace.Integer({name:t.coefficient||""}),new asn1js__namespace.Sequence({optional:!0,value:[new asn1js__namespace.Repeated({name:t.otherPrimeInfosName||"",value:OtherPrimeInfo.schema(t.otherPrimeInfo||{})})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$17);const t=asn1js__namespace.compareSchema(e,e,RSAPrivateKey.schema({names:{version:"version",modulus:MODULUS,publicExponent:PUBLIC_EXPONENT,privateExponent:PRIVATE_EXPONENT,prime1:PRIME1,prime2:PRIME2,exponent1:EXPONENT1,exponent2:EXPONENT2,coefficient:COEFFICIENT,otherPrimeInfo:{names:{blockName:"otherPrimeInfos"}}}}));AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,this.modulus=t.result.modulus.convertFromDER(256),this.publicExponent=t.result.publicExponent,this.privateExponent=t.result.privateExponent.convertFromDER(256),this.prime1=t.result.prime1.convertFromDER(128),this.prime2=t.result.prime2.convertFromDER(128),this.exponent1=t.result.exponent1.convertFromDER(128),this.exponent2=t.result.exponent2.convertFromDER(128),this.coefficient=t.result.coefficient.convertFromDER(128),"otherPrimeInfos"in t.result&&(this.otherPrimeInfos=Array.from(t.result.otherPrimeInfos,(e=>new OtherPrimeInfo({schema:e}))))}toSchema(){const e=[];return e.push(new asn1js__namespace.Integer({value:this.version})),e.push(this.modulus.convertToDER()),e.push(this.publicExponent),e.push(this.privateExponent.convertToDER()),e.push(this.prime1.convertToDER()),e.push(this.prime2.convertToDER()),e.push(this.exponent1.convertToDER()),e.push(this.exponent2.convertToDER()),e.push(this.coefficient.convertToDER()),this.otherPrimeInfos&&e.push(new asn1js__namespace.Sequence({value:Array.from(this.otherPrimeInfos,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={n:pvtsutils__namespace.Convert.ToBase64Url(this.modulus.valueBlock.valueHexView),e:pvtsutils__namespace.Convert.ToBase64Url(this.publicExponent.valueBlock.valueHexView),d:pvtsutils__namespace.Convert.ToBase64Url(this.privateExponent.valueBlock.valueHexView),p:pvtsutils__namespace.Convert.ToBase64Url(this.prime1.valueBlock.valueHexView),q:pvtsutils__namespace.Convert.ToBase64Url(this.prime2.valueBlock.valueHexView),dp:pvtsutils__namespace.Convert.ToBase64Url(this.exponent1.valueBlock.valueHexView),dq:pvtsutils__namespace.Convert.ToBase64Url(this.exponent2.valueBlock.valueHexView),qi:pvtsutils__namespace.Convert.ToBase64Url(this.coefficient.valueBlock.valueHexView)};return this.otherPrimeInfos&&(e.oth=Array.from(this.otherPrimeInfos,(e=>e.toJSON()))),e}fromJSON(e){ParameterError.assert("json",e,"n","e","d","p","q","dp","dq","qi"),this.modulus=new asn1js__namespace.Integer({valueHex:pvtsutils__namespace.Convert.FromBase64Url(e.n)}),this.publicExponent=new asn1js__namespace.Integer({valueHex:pvtsutils__namespace.Convert.FromBase64Url(e.e)}),this.privateExponent=new asn1js__namespace.Integer({valueHex:pvtsutils__namespace.Convert.FromBase64Url(e.d)}),this.prime1=new asn1js__namespace.Integer({valueHex:pvtsutils__namespace.Convert.FromBase64Url(e.p)}),this.prime2=new asn1js__namespace.Integer({valueHex:pvtsutils__namespace.Convert.FromBase64Url(e.q)}),this.exponent1=new asn1js__namespace.Integer({valueHex:pvtsutils__namespace.Convert.FromBase64Url(e.dp)}),this.exponent2=new asn1js__namespace.Integer({valueHex:pvtsutils__namespace.Convert.FromBase64Url(e.dq)}),this.coefficient=new asn1js__namespace.Integer({valueHex:pvtsutils__namespace.Convert.FromBase64Url(e.qi)}),e.oth&&(this.otherPrimeInfos=Array.from(e.oth,(e=>new OtherPrimeInfo({json:e}))))}}RSAPrivateKey.CLASS_NAME="RSAPrivateKey";const VERSION$j="version",PRIVATE_KEY_ALGORITHM="privateKeyAlgorithm",PRIVATE_KEY="privateKey",ATTRIBUTES$5="attributes",PARSED_KEY="parsedKey",CLEAR_PROPS$16=["version","privateKeyAlgorithm",PRIVATE_KEY,"attributes"];class PrivateKeyInfo extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",PrivateKeyInfo.defaultValues("version")),this.privateKeyAlgorithm=pvutils__namespace.getParametersValue(e,"privateKeyAlgorithm",PrivateKeyInfo.defaultValues("privateKeyAlgorithm")),this.privateKey=pvutils__namespace.getParametersValue(e,PRIVATE_KEY,PrivateKeyInfo.defaultValues(PRIVATE_KEY)),"attributes"in e&&(this.attributes=pvutils__namespace.getParametersValue(e,"attributes",PrivateKeyInfo.defaultValues("attributes"))),PARSED_KEY in e&&(this.parsedKey=pvutils__namespace.getParametersValue(e,PARSED_KEY,PrivateKeyInfo.defaultValues(PARSED_KEY))),e.json&&this.fromJSON(e.json),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case"privateKeyAlgorithm":return new AlgorithmIdentifier;case PRIVATE_KEY:return new asn1js__namespace.OctetString;case"attributes":return[];case PARSED_KEY:return{};default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||""}),AlgorithmIdentifier.schema(t.privateKeyAlgorithm||{}),new asn1js__namespace.OctetString({name:t.privateKey||""}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Repeated({name:t.attributes||"",value:Attribute.schema()})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$16);const t=asn1js__namespace.compareSchema(e,e,PrivateKeyInfo.schema({names:{version:"version",privateKeyAlgorithm:{names:{blockName:"privateKeyAlgorithm"}},privateKey:PRIVATE_KEY,attributes:"attributes"}}));switch(AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,this.privateKeyAlgorithm=new AlgorithmIdentifier({schema:t.result.privateKeyAlgorithm}),this.privateKey=t.result.privateKey,"attributes"in t.result&&(this.attributes=Array.from(t.result.attributes,(e=>new Attribute({schema:e})))),this.privateKeyAlgorithm.algorithmId){case"1.2.840.113549.1.1.1":{const e=asn1js__namespace.fromBER(this.privateKey.valueBlock.valueHexView);-1!==e.offset&&(this.parsedKey=new RSAPrivateKey({schema:e.result}))}break;case"1.2.840.10045.2.1":if("algorithmParams"in this.privateKeyAlgorithm&&this.privateKeyAlgorithm.algorithmParams instanceof asn1js__namespace.ObjectIdentifier){const e=asn1js__namespace.fromBER(this.privateKey.valueBlock.valueHexView);-1!==e.offset&&(this.parsedKey=new ECPrivateKey({namedCurve:this.privateKeyAlgorithm.algorithmParams.valueBlock.toString(),schema:e.result}))}}}toSchema(){const e=[new asn1js__namespace.Integer({value:this.version}),this.privateKeyAlgorithm.toSchema(),this.privateKey];return this.attributes&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.attributes,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toJSON(){if(!this.parsedKey){const e={version:this.version,privateKeyAlgorithm:this.privateKeyAlgorithm.toJSON(),privateKey:this.privateKey.toJSON()};return this.attributes&&(e.attributes=Array.from(this.attributes,(e=>e.toJSON()))),e}const e={};switch(this.privateKeyAlgorithm.algorithmId){case"1.2.840.10045.2.1":e.kty="EC";break;case"1.2.840.113549.1.1.1":e.kty="RSA"}const t=this.parsedKey.toJSON();return Object.assign(e,t),e}fromJSON(e){if("kty"in e){switch(e.kty.toUpperCase()){case"EC":this.parsedKey=new ECPrivateKey({json:e}),this.privateKeyAlgorithm=new AlgorithmIdentifier({algorithmId:"1.2.840.10045.2.1",algorithmParams:new asn1js__namespace.ObjectIdentifier({value:this.parsedKey.namedCurve})});break;case"RSA":this.parsedKey=new RSAPrivateKey({json:e}),this.privateKeyAlgorithm=new AlgorithmIdentifier({algorithmId:"1.2.840.113549.1.1.1",algorithmParams:new asn1js__namespace.Null});break;default:throw new Error(`Invalid value for "kty" parameter: ${e.kty}`)}this.privateKey=new asn1js__namespace.OctetString({valueHex:this.parsedKey.toSchema().toBER(!1)})}}}PrivateKeyInfo.CLASS_NAME="PrivateKeyInfo";const CONTENT_TYPE$1="contentType",CONTENT_ENCRYPTION_ALGORITHM="contentEncryptionAlgorithm",ENCRYPTED_CONTENT="encryptedContent",CLEAR_PROPS$15=["contentType","contentEncryptionAlgorithm",ENCRYPTED_CONTENT],PIECE_SIZE=1024;class EncryptedContentInfo extends PkiObject{constructor(e={}){if(super(),this.contentType=pvutils__namespace.getParametersValue(e,"contentType",EncryptedContentInfo.defaultValues("contentType")),this.contentEncryptionAlgorithm=pvutils__namespace.getParametersValue(e,"contentEncryptionAlgorithm",EncryptedContentInfo.defaultValues("contentEncryptionAlgorithm")),ENCRYPTED_CONTENT in e&&e.encryptedContent&&(this.encryptedContent=e.encryptedContent,1===this.encryptedContent.idBlock.tagClass&&4===this.encryptedContent.idBlock.tagNumber&&!1===this.encryptedContent.idBlock.isConstructed&&!e.disableSplit)){const e=new asn1js__namespace.OctetString({idBlock:{isConstructed:!0},isConstructed:!0});let t=0;const a=this.encryptedContent.valueBlock.valueHexView.slice().buffer;let s=a.byteLength;for(;s>0;){const r=new Uint8Array(a,t,t+1024>a.byteLength?a.byteLength-t:1024),n=new ArrayBuffer(r.length),i=new Uint8Array(n);for(let e=0;e<i.length;e++)i[e]=r[e];e.valueBlock.value.push(new asn1js__namespace.OctetString({valueHex:n})),s-=r.length,t+=r.length}this.encryptedContent=e}e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"contentType":return"";case"contentEncryptionAlgorithm":return new AlgorithmIdentifier;case ENCRYPTED_CONTENT:return new asn1js__namespace.OctetString;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"contentType":return""===t;case"contentEncryptionAlgorithm":return""===t.algorithmId&&"algorithmParams"in t==!1;case ENCRYPTED_CONTENT:return t.isEqual(EncryptedContentInfo.defaultValues(ENCRYPTED_CONTENT));default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.contentType||""}),AlgorithmIdentifier.schema(t.contentEncryptionAlgorithm||{}),new asn1js__namespace.Choice({value:[new asn1js__namespace.Constructed({name:t.encryptedContent||"",idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Repeated({value:new asn1js__namespace.OctetString})]}),new asn1js__namespace.Primitive({name:t.encryptedContent||"",idBlock:{tagClass:3,tagNumber:0}})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$15);const t=asn1js__namespace.compareSchema(e,e,EncryptedContentInfo.schema({names:{contentType:"contentType",contentEncryptionAlgorithm:{names:{blockName:"contentEncryptionAlgorithm"}},encryptedContent:ENCRYPTED_CONTENT}}));AsnError.assertSchema(t,this.className),this.contentType=t.result.contentType.valueBlock.toString(),this.contentEncryptionAlgorithm=new AlgorithmIdentifier({schema:t.result.contentEncryptionAlgorithm}),ENCRYPTED_CONTENT in t.result&&(this.encryptedContent=t.result.encryptedContent,this.encryptedContent.idBlock.tagClass=1,this.encryptedContent.idBlock.tagNumber=4)}toSchema(){const e={isIndefiniteForm:!1},t=[];if(t.push(new asn1js__namespace.ObjectIdentifier({value:this.contentType})),t.push(this.contentEncryptionAlgorithm.toSchema()),this.encryptedContent){e.isIndefiniteForm=this.encryptedContent.idBlock.isConstructed;const a=this.encryptedContent;a.idBlock.tagClass=3,a.idBlock.tagNumber=0,a.lenBlock.isIndefiniteForm=this.encryptedContent.idBlock.isConstructed,t.push(a)}return new asn1js__namespace.Sequence({lenBlock:e,value:t})}toJSON(){const e={contentType:this.contentType,contentEncryptionAlgorithm:this.contentEncryptionAlgorithm.toJSON()};return this.encryptedContent&&(e.encryptedContent=this.encryptedContent.toJSON()),e}getEncryptedContent(){if(!this.encryptedContent)throw new Error("Parameter 'encryptedContent' is undefined");return asn1js__namespace.OctetString.prototype.getValue.call(this.encryptedContent)}}EncryptedContentInfo.CLASS_NAME="EncryptedContentInfo";const HASH_ALGORITHM$4="hashAlgorithm",MASK_GEN_ALGORITHM$1="maskGenAlgorithm",SALT_LENGTH="saltLength",TRAILER_FIELD="trailerField",CLEAR_PROPS$14=["hashAlgorithm","maskGenAlgorithm",SALT_LENGTH,TRAILER_FIELD];class RSASSAPSSParams extends PkiObject{constructor(e={}){super(),this.hashAlgorithm=pvutils__namespace.getParametersValue(e,"hashAlgorithm",RSASSAPSSParams.defaultValues("hashAlgorithm")),this.maskGenAlgorithm=pvutils__namespace.getParametersValue(e,"maskGenAlgorithm",RSASSAPSSParams.defaultValues("maskGenAlgorithm")),this.saltLength=pvutils__namespace.getParametersValue(e,SALT_LENGTH,RSASSAPSSParams.defaultValues(SALT_LENGTH)),this.trailerField=pvutils__namespace.getParametersValue(e,TRAILER_FIELD,RSASSAPSSParams.defaultValues(TRAILER_FIELD)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"hashAlgorithm":return new AlgorithmIdentifier({algorithmId:"1.3.14.3.2.26",algorithmParams:new asn1js__namespace.Null});case"maskGenAlgorithm":return new AlgorithmIdentifier({algorithmId:"1.2.840.113549.1.1.8",algorithmParams:new AlgorithmIdentifier({algorithmId:"1.3.14.3.2.26",algorithmParams:new asn1js__namespace.Null}).toSchema()});case SALT_LENGTH:return 20;case TRAILER_FIELD:return 1;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},optional:!0,value:[AlgorithmIdentifier.schema(t.hashAlgorithm||{})]}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},optional:!0,value:[AlgorithmIdentifier.schema(t.maskGenAlgorithm||{})]}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:2},optional:!0,value:[new asn1js__namespace.Integer({name:t.saltLength||""})]}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:3},optional:!0,value:[new asn1js__namespace.Integer({name:t.trailerField||""})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$14);const t=asn1js__namespace.compareSchema(e,e,RSASSAPSSParams.schema({names:{hashAlgorithm:{names:{blockName:"hashAlgorithm"}},maskGenAlgorithm:{names:{blockName:"maskGenAlgorithm"}},saltLength:SALT_LENGTH,trailerField:TRAILER_FIELD}}));AsnError.assertSchema(t,this.className),"hashAlgorithm"in t.result&&(this.hashAlgorithm=new AlgorithmIdentifier({schema:t.result.hashAlgorithm})),"maskGenAlgorithm"in t.result&&(this.maskGenAlgorithm=new AlgorithmIdentifier({schema:t.result.maskGenAlgorithm})),SALT_LENGTH in t.result&&(this.saltLength=t.result.saltLength.valueBlock.valueDec),TRAILER_FIELD in t.result&&(this.trailerField=t.result.trailerField.valueBlock.valueDec)}toSchema(){const e=[];return this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues("hashAlgorithm"))||e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[this.hashAlgorithm.toSchema()]})),this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues("maskGenAlgorithm"))||e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:[this.maskGenAlgorithm.toSchema()]})),this.saltLength!==RSASSAPSSParams.defaultValues(SALT_LENGTH)&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:2},value:[new asn1js__namespace.Integer({value:this.saltLength})]})),this.trailerField!==RSASSAPSSParams.defaultValues(TRAILER_FIELD)&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:3},value:[new asn1js__namespace.Integer({value:this.trailerField})]})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={};return this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues("hashAlgorithm"))||(e.hashAlgorithm=this.hashAlgorithm.toJSON()),this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues("maskGenAlgorithm"))||(e.maskGenAlgorithm=this.maskGenAlgorithm.toJSON()),this.saltLength!==RSASSAPSSParams.defaultValues(SALT_LENGTH)&&(e.saltLength=this.saltLength),this.trailerField!==RSASSAPSSParams.defaultValues(TRAILER_FIELD)&&(e.trailerField=this.trailerField),e}}RSASSAPSSParams.CLASS_NAME="RSASSAPSSParams";const SALT="salt",ITERATION_COUNT="iterationCount",KEY_LENGTH="keyLength",PRF="prf",CLEAR_PROPS$13=[SALT,ITERATION_COUNT,KEY_LENGTH,PRF];class PBKDF2Params extends PkiObject{constructor(e={}){super(),this.salt=pvutils__namespace.getParametersValue(e,SALT,PBKDF2Params.defaultValues(SALT)),this.iterationCount=pvutils__namespace.getParametersValue(e,ITERATION_COUNT,PBKDF2Params.defaultValues(ITERATION_COUNT)),KEY_LENGTH in e&&(this.keyLength=pvutils__namespace.getParametersValue(e,KEY_LENGTH,PBKDF2Params.defaultValues(KEY_LENGTH))),PRF in e&&(this.prf=pvutils__namespace.getParametersValue(e,PRF,PBKDF2Params.defaultValues(PRF))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case SALT:return{};case ITERATION_COUNT:return-1;case KEY_LENGTH:return 0;case PRF:return new AlgorithmIdentifier({algorithmId:"1.3.14.3.2.26",algorithmParams:new asn1js__namespace.Null});default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Choice({value:[new asn1js__namespace.OctetString({name:t.saltPrimitive||""}),AlgorithmIdentifier.schema(t.saltConstructed||{})]}),new asn1js__namespace.Integer({name:t.iterationCount||""}),new asn1js__namespace.Integer({name:t.keyLength||"",optional:!0}),AlgorithmIdentifier.schema(t.prf||{names:{optional:!0}})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$13);const t=asn1js__namespace.compareSchema(e,e,PBKDF2Params.schema({names:{saltPrimitive:SALT,saltConstructed:{names:{blockName:SALT}},iterationCount:ITERATION_COUNT,keyLength:KEY_LENGTH,prf:{names:{blockName:PRF,optional:!0}}}}));AsnError.assertSchema(t,this.className),this.salt=t.result.salt,this.iterationCount=t.result.iterationCount.valueBlock.valueDec,KEY_LENGTH in t.result&&(this.keyLength=t.result.keyLength.valueBlock.valueDec),PRF in t.result&&(this.prf=new AlgorithmIdentifier({schema:t.result.prf}))}toSchema(){const e=[];return e.push(this.salt),e.push(new asn1js__namespace.Integer({value:this.iterationCount})),KEY_LENGTH in this&&PBKDF2Params.defaultValues(KEY_LENGTH)!==this.keyLength&&e.push(new asn1js__namespace.Integer({value:this.keyLength})),this.prf&&!1===PBKDF2Params.defaultValues(PRF).isEqual(this.prf)&&e.push(this.prf.toSchema()),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={salt:this.salt.toJSON(),iterationCount:this.iterationCount};return KEY_LENGTH in this&&PBKDF2Params.defaultValues(KEY_LENGTH)!==this.keyLength&&(e.keyLength=this.keyLength),this.prf&&!1===PBKDF2Params.defaultValues(PRF).isEqual(this.prf)&&(e.prf=this.prf.toJSON()),e}}PBKDF2Params.CLASS_NAME="PBKDF2Params";const KEY_DERIVATION_FUNC="keyDerivationFunc",ENCRYPTION_SCHEME="encryptionScheme",CLEAR_PROPS$12=["keyDerivationFunc",ENCRYPTION_SCHEME];class PBES2Params extends PkiObject{constructor(e={}){super(),this.keyDerivationFunc=pvutils__namespace.getParametersValue(e,"keyDerivationFunc",PBES2Params.defaultValues("keyDerivationFunc")),this.encryptionScheme=pvutils__namespace.getParametersValue(e,ENCRYPTION_SCHEME,PBES2Params.defaultValues(ENCRYPTION_SCHEME)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"keyDerivationFunc":case ENCRYPTION_SCHEME:return new AlgorithmIdentifier;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[AlgorithmIdentifier.schema(t.keyDerivationFunc||{}),AlgorithmIdentifier.schema(t.encryptionScheme||{})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$12);const t=asn1js__namespace.compareSchema(e,e,PBES2Params.schema({names:{keyDerivationFunc:{names:{blockName:"keyDerivationFunc"}},encryptionScheme:{names:{blockName:ENCRYPTION_SCHEME}}}}));AsnError.assertSchema(t,this.className),this.keyDerivationFunc=new AlgorithmIdentifier({schema:t.result.keyDerivationFunc}),this.encryptionScheme=new AlgorithmIdentifier({schema:t.result.encryptionScheme})}toSchema(){return new asn1js__namespace.Sequence({value:[this.keyDerivationFunc.toSchema(),this.encryptionScheme.toSchema()]})}toJSON(){return{keyDerivationFunc:this.keyDerivationFunc.toJSON(),encryptionScheme:this.encryptionScheme.toJSON()}}}PBES2Params.CLASS_NAME="PBES2Params";class AbstractCryptoEngine{constructor(e){this.crypto=e.crypto,this.subtle="webkitSubtle"in e.crypto?e.crypto.webkitSubtle:e.crypto.subtle,this.name=pvutils__namespace.getParametersValue(e,"name","")}async encrypt(...e){return this.subtle.encrypt(...e)}async decrypt(...e){return this.subtle.decrypt(...e)}sign(...e){return this.subtle.sign(...e)}async verify(...e){return this.subtle.verify(...e)}async digest(...e){return this.subtle.digest(...e)}async generateKey(...e){return this.subtle.generateKey(...e)}async deriveKey(...e){return this.subtle.deriveKey(...e)}async deriveBits(...e){return this.subtle.deriveBits(...e)}async wrapKey(...e){return this.subtle.wrapKey(...e)}async unwrapKey(...e){return this.subtle.unwrapKey(...e)}exportKey(...e){return this.subtle.exportKey(...e)}importKey(...e){return this.subtle.importKey(...e)}getRandomValues(e){return this.crypto.getRandomValues(e)}}async function makePKCS12B2Key(e,t,a,s,r){let n,i,c;switch(e.toUpperCase()){case"SHA-1":n=20,i=64,c=sha1.sha1;break;case"SHA-256":n=32,i=64,c=sha256.sha256;break;case"SHA-384":n=48,i=128,c=sha512.sha384;break;case"SHA-512":n=64,i=128,c=sha512.sha512;break;default:throw new Error("Unsupported hashing algorithm")}const o=new Uint8Array(a);let u=(new TextDecoder).decode(a);(new TextEncoder).encode(u).some(((e,t)=>e!==o[t]))&&(u=String.fromCharCode(...o));const l=new Uint8Array(2*u.length+2),m=new DataView(l.buffer);for(let e=0;e<u.length;e++)m.setUint16(2*e,u.charCodeAt(e),!1);m.setUint16(2*u.length,0,!1);const h=new Uint8Array(i).fill(3),p=new Uint8Array(s),_=new Uint8Array(i*Math.ceil(p.length/i)).map(((e,t)=>p[t%p.length])),S=new Uint8Array(i*Math.ceil(l.length/i)).map(((e,t)=>l[t%l.length]));let g=new Uint8Array(_.length+S.length);g.set(_),g.set(S,_.length);const f=Math.ceil((t>>3)/n),d=[];for(let e=0;e<f;e++){let e=new Uint8Array(h.length+g.length);e.set(h),e.set(g,h.length);for(let t=0;t<r;t++)e=c(e);const t=new Uint8Array(i).map(((t,a)=>e[a%e.length])),a=Math.ceil(p.length/i)+Math.ceil(l.length/i),s=[];for(let e=0;e<a;e++){const a=Array.from(g.slice(e*i,(e+1)*i));let r=511;for(let e=t.length-1;e>=0;e--)r>>=8,r+=t[e]+(a[e]||0),a[e]=255&r;s.push(...a)}g=new Uint8Array(s),d.push(...e)}return new Uint8Array(d.slice(0,t>>3)).buffer}function prepareAlgorithm(e){const t="string"==typeof e?{name:e}:e;return"hash"in t?{...t,hash:prepareAlgorithm(t.hash)}:t}class CryptoEngine extends AbstractCryptoEngine{async importKey(e,t,a,s,r){var n,i,c,o,u,l;let m={};const h=prepareAlgorithm(a);switch(e.toLowerCase()){case"raw":return this.subtle.importKey("raw",t,a,s,r);case"spki":{const e=asn1js__namespace.fromBER(pvtsutils__namespace.BufferSourceConverter.toArrayBuffer(t));AsnError.assert(e,"keyData");const a=new PublicKeyInfo;try{a.fromSchema(e.result)}catch{throw new ArgumentError("Incorrect keyData")}switch(h.name.toUpperCase()){case"RSA-PSS":if(!h.hash)throw new ParameterError("hash","algorithm.hash","Incorrect hash algorithm: Hash algorithm is missed");switch(h.hash.name.toUpperCase()){case"SHA-1":m.alg="PS1";break;case"SHA-256":m.alg="PS256";break;case"SHA-384":m.alg="PS384";break;case"SHA-512":m.alg="PS512";break;default:throw new Error(`Incorrect hash algorithm: ${h.hash.name.toUpperCase()}`)}case"RSASSA-PKCS1-V1_5":{if(r=["verify"],m.kty="RSA",m.ext=s,m.key_ops=r,"1.2.840.113549.1.1.1"!==a.algorithm.algorithmId)throw new Error(`Incorrect public key algorithm: ${a.algorithm.algorithmId}`);if(!m.alg){if(!h.hash)throw new ParameterError("hash","algorithm.hash","Incorrect hash algorithm: Hash algorithm is missed");switch(h.hash.name.toUpperCase()){case"SHA-1":m.alg="RS1";break;case"SHA-256":m.alg="RS256";break;case"SHA-384":m.alg="RS384";break;case"SHA-512":m.alg="RS512";break;default:throw new Error(`Incorrect hash algorithm: ${h.hash.name.toUpperCase()}`)}}const e=a.toJSON();Object.assign(m,e)}break;case"ECDSA":r=["verify"];case"ECDH":{if(m={kty:"EC",ext:s,key_ops:r},"1.2.840.10045.2.1"!==a.algorithm.algorithmId)throw new Error(`Incorrect public key algorithm: ${a.algorithm.algorithmId}`);const e=a.toJSON();Object.assign(m,e)}break;case"RSA-OAEP":{if(m.kty="RSA",m.ext=s,m.key_ops=r,"safari"===this.name.toLowerCase())m.alg="RSA-OAEP";else{if(!h.hash)throw new ParameterError("hash","algorithm.hash","Incorrect hash algorithm: Hash algorithm is missed");switch(h.hash.name.toUpperCase()){case"SHA-1":m.alg="RSA-OAEP";break;case"SHA-256":m.alg="RSA-OAEP-256";break;case"SHA-384":m.alg="RSA-OAEP-384";break;case"SHA-512":m.alg="RSA-OAEP-512";break;default:throw new Error(`Incorrect hash algorithm: ${h.hash.name.toUpperCase()}`)}}const e=a.toJSON();Object.assign(m,e)}break;case"RSAES-PKCS1-V1_5":{m.kty="RSA",m.ext=s,m.key_ops=r,m.alg="PS1";const e=a.toJSON();Object.assign(m,e)}break;default:throw new Error(`Incorrect algorithm name: ${h.name.toUpperCase()}`)}}break;case"pkcs8":{const e=new PrivateKeyInfo,a=asn1js__namespace.fromBER(pvtsutils__namespace.BufferSourceConverter.toArrayBuffer(t));AsnError.assert(a,"keyData");try{e.fromSchema(a.result)}catch(e){throw new Error("Incorrect keyData")}if(!e.parsedKey)throw new Error("Incorrect keyData");switch(h.name.toUpperCase()){case"RSA-PSS":switch(null===(n=h.hash)||void 0===n?void 0:n.name.toUpperCase()){case"SHA-1":m.alg="PS1";break;case"SHA-256":m.alg="PS256";break;case"SHA-384":m.alg="PS384";break;case"SHA-512":m.alg="PS512";break;default:throw new Error(`Incorrect hash algorithm: ${null===(i=h.hash)||void 0===i?void 0:i.name.toUpperCase()}`)}case"RSASSA-PKCS1-V1_5":{if(r=["sign"],m.kty="RSA",m.ext=s,m.key_ops=r,"1.2.840.113549.1.1.1"!==e.privateKeyAlgorithm.algorithmId)throw new Error(`Incorrect private key algorithm: ${e.privateKeyAlgorithm.algorithmId}`);if("alg"in m==!1)switch(null===(c=h.hash)||void 0===c?void 0:c.name.toUpperCase()){case"SHA-1":m.alg="RS1";break;case"SHA-256":m.alg="RS256";break;case"SHA-384":m.alg="RS384";break;case"SHA-512":m.alg="RS512";break;default:throw new Error(`Incorrect hash algorithm: ${null===(o=h.hash)||void 0===o?void 0:o.name.toUpperCase()}`)}const t=e.toJSON();Object.assign(m,t)}break;case"ECDSA":r=["sign"];case"ECDH":{if(m={kty:"EC",ext:s,key_ops:r},"1.2.840.10045.2.1"!==e.privateKeyAlgorithm.algorithmId)throw new Error(`Incorrect algorithm: ${e.privateKeyAlgorithm.algorithmId}`);const t=e.toJSON();Object.assign(m,t)}break;case"RSA-OAEP":{if(m.kty="RSA",m.ext=s,m.key_ops=r,"safari"===this.name.toLowerCase())m.alg="RSA-OAEP";else switch(null===(u=h.hash)||void 0===u?void 0:u.name.toUpperCase()){case"SHA-1":m.alg="RSA-OAEP";break;case"SHA-256":m.alg="RSA-OAEP-256";break;case"SHA-384":m.alg="RSA-OAEP-384";break;case"SHA-512":m.alg="RSA-OAEP-512";break;default:throw new Error(`Incorrect hash algorithm: ${null===(l=h.hash)||void 0===l?void 0:l.name.toUpperCase()}`)}const t=e.toJSON();Object.assign(m,t)}break;case"RSAES-PKCS1-V1_5":{r=["decrypt"],m.kty="RSA",m.ext=s,m.key_ops=r,m.alg="PS1";const t=e.toJSON();Object.assign(m,t)}break;default:throw new Error(`Incorrect algorithm name: ${h.name.toUpperCase()}`)}}break;case"jwk":m=t;break;default:throw new Error(`Incorrect format: ${e}`)}if("safari"===this.name.toLowerCase())try{return this.subtle.importKey("jwk",pvutils__namespace.stringToArrayBuffer(JSON.stringify(m)),a,s,r)}catch{return this.subtle.importKey("jwk",m,a,s,r)}return this.subtle.importKey("jwk",m,a,s,r)}async exportKey(e,t){let a=await this.subtle.exportKey("jwk",t);switch("safari"===this.name.toLowerCase()&&a instanceof ArrayBuffer&&(a=JSON.parse(pvutils__namespace.arrayBufferToString(a))),e.toLowerCase()){case"raw":return this.subtle.exportKey("raw",t);case"spki":{const e=new PublicKeyInfo;try{e.fromJSON(a)}catch(e){throw new Error("Incorrect key data")}return e.toSchema().toBER(!1)}case"pkcs8":{const e=new PrivateKeyInfo;try{e.fromJSON(a)}catch(e){throw new Error("Incorrect key data")}return e.toSchema().toBER(!1)}case"jwk":return a;default:throw new Error(`Incorrect format: ${e}`)}}async convert(e,t,a,s,r,n){if(e.toLowerCase()===t.toLowerCase())return a;const i=await this.importKey(e,a,s,r,n);return this.exportKey(t,i)}getAlgorithmByOID(e,t=!1,a){switch(e){case"1.2.840.113549.1.1.1":return{name:"RSAES-PKCS1-v1_5"};case"1.2.840.113549.1.1.5":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-1"}};case"1.2.840.113549.1.1.11":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}};case"1.2.840.113549.1.1.12":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-384"}};case"1.2.840.113549.1.1.13":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-512"}};case"1.2.840.113549.1.1.10":return{name:"RSA-PSS"};case"1.2.840.113549.1.1.7":return{name:"RSA-OAEP"};case"1.2.840.10045.2.1":case"1.2.840.10045.4.1":return{name:"ECDSA",hash:{name:"SHA-1"}};case"1.2.840.10045.4.3.2":return{name:"ECDSA",hash:{name:"SHA-256"}};case"1.2.840.10045.4.3.3":return{name:"ECDSA",hash:{name:"SHA-384"}};case"1.2.840.10045.4.3.4":return{name:"ECDSA",hash:{name:"SHA-512"}};case"1.3.133.16.840.63.0.2":return{name:"ECDH",kdf:"SHA-1"};case"1.3.132.1.11.1":return{name:"ECDH",kdf:"SHA-256"};case"1.3.132.1.11.2":return{name:"ECDH",kdf:"SHA-384"};case"1.3.132.1.11.3":return{name:"ECDH",kdf:"SHA-512"};case"2.16.840.1.101.3.4.1.2":return{name:"AES-CBC",length:128};case"2.16.840.1.101.3.4.1.22":return{name:"AES-CBC",length:192};case"2.16.840.1.101.3.4.1.42":return{name:"AES-CBC",length:256};case"2.16.840.1.101.3.4.1.6":return{name:"AES-GCM",length:128};case"2.16.840.1.101.3.4.1.26":return{name:"AES-GCM",length:192};case"2.16.840.1.101.3.4.1.46":return{name:"AES-GCM",length:256};case"2.16.840.1.101.3.4.1.4":return{name:"AES-CFB",length:128};case"2.16.840.1.101.3.4.1.24":return{name:"AES-CFB",length:192};case"2.16.840.1.101.3.4.1.44":return{name:"AES-CFB",length:256};case"2.16.840.1.101.3.4.1.5":return{name:"AES-KW",length:128};case"2.16.840.1.101.3.4.1.25":return{name:"AES-KW",length:192};case"2.16.840.1.101.3.4.1.45":return{name:"AES-KW",length:256};case"1.2.840.113549.2.7":return{name:"HMAC",hash:{name:"SHA-1"}};case"1.2.840.113549.2.9":return{name:"HMAC",hash:{name:"SHA-256"}};case"1.2.840.113549.2.10":return{name:"HMAC",hash:{name:"SHA-384"}};case"1.2.840.113549.2.11":return{name:"HMAC",hash:{name:"SHA-512"}};case"1.2.840.113549.1.9.16.3.5":return{name:"DH"};case"1.3.14.3.2.26":return{name:"SHA-1"};case"2.16.840.1.101.3.4.2.1":return{name:"SHA-256"};case"2.16.840.1.101.3.4.2.2":return{name:"SHA-384"};case"2.16.840.1.101.3.4.2.3":return{name:"SHA-512"};case"1.2.840.113549.1.5.12":return{name:"PBKDF2"};case"1.2.840.10045.3.1.7":return{name:"P-256"};case"1.3.132.0.34":return{name:"P-384"};case"1.3.132.0.35":return{name:"P-521"}}if(t)throw new Error(`Unsupported algorithm identifier ${a?`for ${a} `:""}: ${e}`);return{}}getOIDByAlgorithm(e,t=!1,a){let s="";switch(e.name.toUpperCase()){case"RSAES-PKCS1-V1_5":s="1.2.840.113549.1.1.1";break;case"RSASSA-PKCS1-V1_5":switch(e.hash.name.toUpperCase()){case"SHA-1":s="1.2.840.113549.1.1.5";break;case"SHA-256":s="1.2.840.113549.1.1.11";break;case"SHA-384":s="1.2.840.113549.1.1.12";break;case"SHA-512":s="1.2.840.113549.1.1.13"}break;case"RSA-PSS":s="1.2.840.113549.1.1.10";break;case"RSA-OAEP":s="1.2.840.113549.1.1.7";break;case"ECDSA":switch(e.hash.name.toUpperCase()){case"SHA-1":s="1.2.840.10045.4.1";break;case"SHA-256":s="1.2.840.10045.4.3.2";break;case"SHA-384":s="1.2.840.10045.4.3.3";break;case"SHA-512":s="1.2.840.10045.4.3.4"}break;case"ECDH":switch(e.kdf.toUpperCase()){case"SHA-1":s="1.3.133.16.840.63.0.2";break;case"SHA-256":s="1.3.132.1.11.1";break;case"SHA-384":s="1.3.132.1.11.2";break;case"SHA-512":s="1.3.132.1.11.3"}break;case"AES-CTR":case"AES-CMAC":case"CONCAT":case"HKDF":break;case"AES-CBC":switch(e.length){case 128:s="2.16.840.1.101.3.4.1.2";break;case 192:s="2.16.840.1.101.3.4.1.22";break;case 256:s="2.16.840.1.101.3.4.1.42"}break;case"AES-GCM":switch(e.length){case 128:s="2.16.840.1.101.3.4.1.6";break;case 192:s="2.16.840.1.101.3.4.1.26";break;case 256:s="2.16.840.1.101.3.4.1.46"}break;case"AES-CFB":switch(e.length){case 128:s="2.16.840.1.101.3.4.1.4";break;case 192:s="2.16.840.1.101.3.4.1.24";break;case 256:s="2.16.840.1.101.3.4.1.44"}break;case"AES-KW":switch(e.length){case 128:s="2.16.840.1.101.3.4.1.5";break;case 192:s="2.16.840.1.101.3.4.1.25";break;case 256:s="2.16.840.1.101.3.4.1.45"}break;case"HMAC":switch(e.hash.name.toUpperCase()){case"SHA-1":s="1.2.840.113549.2.7";break;case"SHA-256":s="1.2.840.113549.2.9";break;case"SHA-384":s="1.2.840.113549.2.10";break;case"SHA-512":s="1.2.840.113549.2.11"}break;case"DH":s="1.2.840.113549.1.9.16.3.5";break;case"SHA-1":s="1.3.14.3.2.26";break;case"SHA-256":s="2.16.840.1.101.3.4.2.1";break;case"SHA-384":s="2.16.840.1.101.3.4.2.2";break;case"SHA-512":s="2.16.840.1.101.3.4.2.3";break;case"PBKDF2":s="1.2.840.113549.1.5.12";break;case"P-256":s="1.2.840.10045.3.1.7";break;case"P-384":s="1.3.132.0.34";break;case"P-521":s="1.3.132.0.35"}if(!s&&t)throw new Error(`Unsupported algorithm ${a?`for ${a} `:""}: ${e.name}`);return s}getAlgorithmParameters(e,t){let a={algorithm:{},usages:[]};switch(e.toUpperCase()){case"RSAES-PKCS1-V1_5":case"RSASSA-PKCS1-V1_5":switch(t.toLowerCase()){case"generatekey":a={algorithm:{name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},usages:["sign","verify"]};break;case"verify":case"sign":case"importkey":a={algorithm:{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},usages:["verify"]};break;default:return{algorithm:{name:"RSASSA-PKCS1-v1_5"},usages:[]}}break;case"RSA-PSS":switch(t.toLowerCase()){case"sign":case"verify":a={algorithm:{name:"RSA-PSS",hash:{name:"SHA-1"},saltLength:20},usages:["sign","verify"]};break;case"generatekey":a={algorithm:{name:"RSA-PSS",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-1"}},usages:["sign","verify"]};break;case"importkey":a={algorithm:{name:"RSA-PSS",hash:{name:"SHA-1"}},usages:["verify"]};break;default:return{algorithm:{name:"RSA-PSS"},usages:[]}}break;case"RSA-OAEP":switch(t.toLowerCase()){case"encrypt":case"decrypt":a={algorithm:{name:"RSA-OAEP"},usages:["encrypt","decrypt"]};break;case"generatekey":a={algorithm:{name:"RSA-OAEP",modulusLength:2048,publicExponent:new Uint8Array([1,0,1]),hash:{name:"SHA-256"}},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"importkey":a={algorithm:{name:"RSA-OAEP",hash:{name:"SHA-256"}},usages:["encrypt"]};break;default:return{algorithm:{name:"RSA-OAEP"},usages:[]}}break;case"ECDSA":switch(t.toLowerCase()){case"generatekey":a={algorithm:{name:"ECDSA",namedCurve:"P-256"},usages:["sign","verify"]};break;case"importkey":a={algorithm:{name:"ECDSA",namedCurve:"P-256"},usages:["verify"]};break;case"verify":case"sign":a={algorithm:{name:"ECDSA",hash:{name:"SHA-256"}},usages:["sign"]};break;default:return{algorithm:{name:"ECDSA"},usages:[]}}break;case"ECDH":switch(t.toLowerCase()){case"exportkey":case"importkey":case"generatekey":a={algorithm:{name:"ECDH",namedCurve:"P-256"},usages:["deriveKey","deriveBits"]};break;case"derivekey":case"derivebits":a={algorithm:{name:"ECDH",namedCurve:"P-256",public:[]},usages:["encrypt","decrypt"]};break;default:return{algorithm:{name:"ECDH"},usages:[]}}break;case"AES-CTR":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":a={algorithm:{name:"AES-CTR",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":a={algorithm:{name:"AES-CTR",counter:new Uint8Array(16),length:10},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-CTR"},usages:[]}}break;case"AES-CBC":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":a={algorithm:{name:"AES-CBC",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":a={algorithm:{name:"AES-CBC",iv:this.getRandomValues(new Uint8Array(16))},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-CBC"},usages:[]}}break;case"AES-GCM":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":a={algorithm:{name:"AES-GCM",length:256},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;case"decrypt":case"encrypt":a={algorithm:{name:"AES-GCM",iv:this.getRandomValues(new Uint8Array(16))},usages:["encrypt","decrypt","wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-GCM"},usages:[]}}break;case"AES-KW":switch(t.toLowerCase()){case"importkey":case"exportkey":case"generatekey":case"wrapkey":case"unwrapkey":a={algorithm:{name:"AES-KW",length:256},usages:["wrapKey","unwrapKey"]};break;default:return{algorithm:{name:"AES-KW"},usages:[]}}break;case"HMAC":switch(t.toLowerCase()){case"sign":case"verify":a={algorithm:{name:"HMAC"},usages:["sign","verify"]};break;case"importkey":case"exportkey":case"generatekey":a={algorithm:{name:"HMAC",length:32,hash:{name:"SHA-256"}},usages:["sign","verify"]};break;default:return{algorithm:{name:"HMAC"},usages:[]}}break;case"HKDF":if("derivekey"!==t.toLowerCase())return{algorithm:{name:"HKDF"},usages:[]};a={algorithm:{name:"HKDF",hash:"SHA-256",salt:new Uint8Array([]),info:new Uint8Array([])},usages:["encrypt","decrypt"]};break;case"PBKDF2":if("derivekey"!==t.toLowerCase())return{algorithm:{name:"PBKDF2"},usages:[]};a={algorithm:{name:"PBKDF2",hash:{name:"SHA-256"},salt:new Uint8Array([]),iterations:1e4},usages:["encrypt","decrypt"]}}return a}getHashAlgorithm(e){let t="";switch(e.algorithmId){case"1.2.840.10045.4.1":case"1.2.840.113549.1.1.5":t="SHA-1";break;case"1.2.840.10045.4.3.2":case"1.2.840.113549.1.1.11":t="SHA-256";break;case"1.2.840.10045.4.3.3":case"1.2.840.113549.1.1.12":t="SHA-384";break;case"1.2.840.10045.4.3.4":case"1.2.840.113549.1.1.13":t="SHA-512";break;case"1.2.840.113549.1.1.10":try{const a=new RSASSAPSSParams({schema:e.algorithmParams});if(a.hashAlgorithm){const e=this.getAlgorithmByOID(a.hashAlgorithm.algorithmId);if(!("name"in e))return"";t=e.name}else t="SHA-1"}catch{}}return t}async encryptEncryptedContentInfo(e){ParameterError.assert(e,"password","contentEncryptionAlgorithm","hmacHashAlgorithm","iterationCount","contentToEncrypt","contentToEncrypt","contentType");const t=this.getOIDByAlgorithm(e.contentEncryptionAlgorithm,!0,"contentEncryptionAlgorithm"),a=this.getOIDByAlgorithm({name:"PBKDF2"},!0,"PBKDF2"),s=this.getOIDByAlgorithm({name:"HMAC",hash:{name:e.hmacHashAlgorithm}},!0,"hmacHashAlgorithm"),r=new ArrayBuffer(16),n=new Uint8Array(r);this.getRandomValues(n);const i=new ArrayBuffer(64),c=new Uint8Array(i);this.getRandomValues(c);const o=new Uint8Array(e.contentToEncrypt),u=new PBKDF2Params({salt:new asn1js__namespace.OctetString({valueHex:i}),iterationCount:e.iterationCount,prf:new AlgorithmIdentifier({algorithmId:s,algorithmParams:new asn1js__namespace.Null})}),l=new Uint8Array(e.password),m=await this.importKey("raw",l,"PBKDF2",!1,["deriveKey"]),h=await this.deriveKey({name:"PBKDF2",hash:{name:e.hmacHashAlgorithm},salt:c,iterations:e.iterationCount},m,e.contentEncryptionAlgorithm,!1,["encrypt"]),p=await this.encrypt({name:e.contentEncryptionAlgorithm.name,iv:n},h,o),_=new PBES2Params({keyDerivationFunc:new AlgorithmIdentifier({algorithmId:a,algorithmParams:u.toSchema()}),encryptionScheme:new AlgorithmIdentifier({algorithmId:t,algorithmParams:new asn1js__namespace.OctetString({valueHex:r})})});return new EncryptedContentInfo({contentType:e.contentType,contentEncryptionAlgorithm:new AlgorithmIdentifier({algorithmId:"1.2.840.113549.1.5.13",algorithmParams:_.toSchema()}),encryptedContent:new asn1js__namespace.OctetString({valueHex:p})})}async decryptEncryptedContentInfo(e){if(ParameterError.assert(e,"password","encryptedContentInfo"),"1.2.840.113549.1.5.13"!==e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId)throw new Error(`Unknown "contentEncryptionAlgorithm": ${e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId}`);let t,a;try{t=new PBES2Params({schema:e.encryptedContentInfo.contentEncryptionAlgorithm.algorithmParams})}catch(e){throw new Error('Incorrectly encoded "pbes2Parameters"')}try{a=new PBKDF2Params({schema:t.keyDerivationFunc.algorithmParams})}catch(e){throw new Error('Incorrectly encoded "pbkdf2Params"')}const s=this.getAlgorithmByOID(t.encryptionScheme.algorithmId,!0),r=t.encryptionScheme.algorithmParams.valueBlock.valueHex,n=new Uint8Array(r),i=a.salt.valueBlock.valueHex,c=new Uint8Array(i),o=a.iterationCount;let u="SHA-1";if(a.prf){u=this.getAlgorithmByOID(a.prf.algorithmId,!0).hash.name}const l=await this.importKey("raw",e.password,"PBKDF2",!1,["deriveKey"]),m=await this.deriveKey({name:"PBKDF2",hash:{name:u},salt:c,iterations:o},l,s,!1,["decrypt"]),h=e.encryptedContentInfo.getEncryptedContent();return this.decrypt({name:s.name,iv:n},m,h)}async stampDataWithPassword(e){if(e instanceof Object==!1)throw new Error('Parameters must have type "Object"');let t;switch(ParameterError.assert(e,"password","hashAlgorithm","iterationCount","salt","contentToStamp"),e.hashAlgorithm.toLowerCase()){case"sha-1":t=160;break;case"sha-256":t=256;break;case"sha-384":t=384;break;case"sha-512":t=512;break;default:throw new Error(`Incorrect "parameters.hashAlgorithm" parameter: ${e.hashAlgorithm}`)}const a={name:"HMAC",length:t,hash:{name:e.hashAlgorithm}},s=await makePKCS12B2Key(e.hashAlgorithm,t,e.password,e.salt,e.iterationCount),r=await this.importKey("raw",new Uint8Array(s),a,!1,["sign"]);return this.sign(a,r,new Uint8Array(e.contentToStamp))}async verifyDataStampedWithPassword(e){ParameterError.assert(e,"password","hashAlgorithm","salt","iterationCount","contentToVerify","signatureToVerify");let t=0;switch(e.hashAlgorithm.toLowerCase()){case"sha-1":t=160;break;case"sha-256":t=256;break;case"sha-384":t=384;break;case"sha-512":t=512;break;default:throw new Error(`Incorrect "parameters.hashAlgorithm" parameter: ${e.hashAlgorithm}`)}const a={name:"HMAC",length:t,hash:{name:e.hashAlgorithm}},s=await makePKCS12B2Key(e.hashAlgorithm,t,e.password,e.salt,e.iterationCount),r=await this.importKey("raw",new Uint8Array(s),a,!1,["verify"]);return this.verify(a,r,new Uint8Array(e.signatureToVerify),new Uint8Array(e.contentToVerify))}async getSignatureParameters(e,t="SHA-1"){this.getOIDByAlgorithm({name:t},!0,"hashAlgorithm");const a=new AlgorithmIdentifier,s=this.getAlgorithmParameters(e.algorithm.name,"sign");if(!Object.keys(s.algorithm).length)throw new Error("Parameter 'algorithm' is empty");const r=s.algorithm;switch("hash"in e.algorithm&&e.algorithm.hash&&e.algorithm.hash.name?r.hash.name=e.algorithm.hash.name:r.hash.name=t,e.algorithm.name.toUpperCase()){case"RSASSA-PKCS1-V1_5":case"ECDSA":a.algorithmId=this.getOIDByAlgorithm(r,!0);break;case"RSA-PSS":{switch(r.hash.name.toUpperCase()){case"SHA-256":r.saltLength=32;break;case"SHA-384":r.saltLength=48;break;case"SHA-512":r.saltLength=64}const e={};if("SHA-1"!==r.hash.name.toUpperCase()){const t=this.getOIDByAlgorithm({name:r.hash.name},!0,"hashAlgorithm");e.hashAlgorithm=new AlgorithmIdentifier({algorithmId:t,algorithmParams:new asn1js__namespace.Null}),e.maskGenAlgorithm=new AlgorithmIdentifier({algorithmId:"1.2.840.113549.1.1.8",algorithmParams:e.hashAlgorithm.toSchema()})}20!==r.saltLength&&(e.saltLength=r.saltLength);const t=new RSASSAPSSParams(e);a.algorithmId="1.2.840.113549.1.1.10",a.algorithmParams=t.toSchema()}break;default:throw new Error(`Unsupported signature algorithm: ${e.algorithm.name}`)}return{signatureAlgorithm:a,parameters:s}}async signWithPrivateKey(e,t,a){const s=await this.sign(a.algorithm,t,e);return"ECDSA"===a.algorithm.name?createCMSECDSASignature(s):s}fillPublicKeyParameters(e,t){const a={},s=this.getHashAlgorithm(t);if(""===s)throw new Error(`Unsupported signature algorithm: ${t.algorithmId}`);let r;r="1.2.840.113549.1.1.10"===t.algorithmId?t.algorithmId:e.algorithm.algorithmId;const n=this.getAlgorithmByOID(r,!0);if(a.algorithm=this.getAlgorithmParameters(n.name,"importKey"),"hash"in a.algorithm.algorithm&&(a.algorithm.algorithm.hash.name=s),"ECDSA"===n.name){const t=e.algorithm;if(!t.algorithmParams)throw new Error("Algorithm parameters for ECDSA public key are missed");const s=t.algorithmParams;if("idBlock"in t.algorithmParams&&(1!==s.idBlock.tagClass||6!==s.idBlock.tagNumber))throw new Error("Incorrect type for ECDSA public key parameters");const r=this.getAlgorithmByOID(s.valueBlock.toString(),!0);a.algorithm.algorithm.namedCurve=r.name}return a}async getPublicKey(e,t,a){a||(a=this.fillPublicKeyParameters(e,t));const s=e.toSchema().toBER(!1);return this.importKey("spki",s,a.algorithm.algorithm,!0,a.algorithm.usages)}async verifyWithPublicKey(e,t,a,s,r){let n;if(r){const e={};let t;t="1.2.840.113549.1.1.10"===s.algorithmId?s.algorithmId:a.algorithm.algorithmId;const i=this.getAlgorithmByOID(t,!0);if(e.algorithm=this.getAlgorithmParameters(i.name,"importKey"),"hash"in e.algorithm.algorithm&&(e.algorithm.algorithm.hash.name=r),"ECDSA"===i.name){let t=!1;if("algorithmParams"in a.algorithm==!0&&"idBlock"in a.algorithm.algorithmParams&&1===a.algorithm.algorithmParams.idBlock.tagClass&&6===a.algorithm.algorithmParams.idBlock.tagNumber&&(t=!0),!1===t)throw new Error("Incorrect type for ECDSA public key parameters");const s=this.getAlgorithmByOID(a.algorithm.algorithmParams.valueBlock.toString(),!0);e.algorithm.algorithm.namedCurve=s.name}n=await this.getPublicKey(a,null,e)}else{if(!(r=this.getHashAlgorithm(s)))throw new Error(`Unsupported signature algorithm: ${s.algorithmId}`);n=await this.getPublicKey(a,s)}const i=this.getAlgorithmParameters(n.algorithm.name,"verify");"hash"in i.algorithm&&(i.algorithm.hash.name=r);let c=t.valueBlock.valueHexView;if("ECDSA"===n.algorithm.name){const e=ECNamedCurves.find(n.algorithm.namedCurve);if(!e)throw new Error("Unsupported named curve in use");const t=asn1js__namespace.fromBER(c);AsnError.assert(t,"Signature value"),c=createECDSASignatureFromCMS(t.result,e.size)}if("RSA-PSS"===n.algorithm.name){const e=new RSASSAPSSParams({schema:s.algorithmParams});i.algorithm.saltLength="saltLength"in e?e.saltLength:20;let t="SHA-1";if("hashAlgorithm"in e){t=this.getAlgorithmByOID(e.hashAlgorithm.algorithmId,!0).name}i.algorithm.hash.name=t}return this.verify(i.algorithm,n,c,e)}}function isCryptoEngine(e){return!(!e||"object"!=typeof e||!("crypto"in e))}function setEngine(e,...t){let a=null;if(t.length<2)a=t.length?t[0]:"undefined"!=typeof self&&self.crypto?new CryptoEngine({name:"browser",crypto:self.crypto}):null;else{const e=t[0],s=t[1];isCryptoEngine(s)?a=s:isCryptoEngine(e)?a=e:"subtle"in e&&"getRandomValues"in e&&(a=new CryptoEngine({crypto:e}))}if("undefined"!=typeof process&&"pid"in process&&"undefined"!=typeof global&&"undefined"==typeof window){if(void 0===global[process.pid])global[process.pid]={};else if("object"!=typeof global[process.pid])throw new Error(`Name global.${process.pid} already exists and it is not an object`);if(void 0===global[process.pid].pkijs)global[process.pid].pkijs={};else if("object"!=typeof global[process.pid].pkijs)throw new Error(`Name global.${process.pid}.pkijs already exists and it is not an object`);global[process.pid].pkijs.engine={name:e,crypto:a}}else exports.engine={name:e,crypto:a}}function getEngine(){if("undefined"!=typeof process&&"pid"in process&&"undefined"!=typeof global&&"undefined"==typeof window){let e;try{e=global[process.pid].pkijs.engine}catch(e){throw new Error("Please call 'setEngine' before call to 'getEngine'")}return e}return exports.engine}function getCrypto(e=!1){const t=getEngine();if(!t.crypto&&e)throw new Error("Unable to create WebCrypto object");return t.crypto}function getRandomValues(e){return getCrypto(!0).getRandomValues(e)}function getOIDByAlgorithm(e,t,a){return getCrypto(!0).getOIDByAlgorithm(e,t,a)}function getAlgorithmParameters(e,t){return getCrypto(!0).getAlgorithmParameters(e,t)}function createCMSECDSASignature(e){if(e.byteLength%2!=0)return EMPTY_BUFFER;const t=e.byteLength/2,a=new ArrayBuffer(t);new Uint8Array(a).set(new Uint8Array(e,0,t));const s=new asn1js__namespace.Integer({valueHex:a}),r=new ArrayBuffer(t);new Uint8Array(r).set(new Uint8Array(e,t,t));const n=new asn1js__namespace.Integer({valueHex:r});return new asn1js__namespace.Sequence({value:[s.convertToDER(),n.convertToDER()]}).toBER(!1)}function createECDSASignatureFromCMS(e,t){if(!(e instanceof asn1js__namespace.Sequence&&2===e.valueBlock.value.length&&e.valueBlock.value[0]instanceof asn1js__namespace.Integer&&e.valueBlock.value[1]instanceof asn1js__namespace.Integer))return EMPTY_BUFFER;const a=e.valueBlock.value[0].convertFromDER().valueBlock.valueHexView,s=e.valueBlock.value[1].convertFromDER().valueBlock.valueHexView,r=new Uint8Array(2*t);return r.set(a,t-a.byteLength),r.set(s,2*t-s.byteLength),r.buffer}function getAlgorithmByOID(e,t=!1,a){return getCrypto(!0).getAlgorithmByOID(e,t,a)}function getHashAlgorithm(e){return getCrypto(!0).getHashAlgorithm(e)}async function kdfWithCounter(e,t,a,s,r){switch(e.toUpperCase()){case"SHA-1":case"SHA-256":case"SHA-384":case"SHA-512":break;default:throw new ArgumentError(`Unknown hash function: ${e}`)}if(ArgumentError.assert(t,"zBuffer","ArrayBuffer"),0===t.byteLength)throw new ArgumentError("'zBuffer' has zero length, error");if(ArgumentError.assert(s,"SharedInfo","ArrayBuffer"),a>255)throw new ArgumentError("Please set 'Counter' argument to value less or equal to 255");const n=new ArrayBuffer(4),i=new Uint8Array(n);i[0]=0,i[1]=0,i[2]=0,i[3]=a;let c=EMPTY_BUFFER;c=pvutils__namespace.utilConcatBuf(c,t),c=pvutils__namespace.utilConcatBuf(c,n),c=pvutils__namespace.utilConcatBuf(c,s);return{counter:a,result:await r.digest({name:e},c)}}async function kdf(e,t,a,s,r=getCrypto(!0)){let n=0,i=1;switch(e.toUpperCase()){case"SHA-1":n=160;break;case"SHA-256":n=256;break;case"SHA-384":n=384;break;case"SHA-512":n=512;break;default:throw new ArgumentError(`Unknown hash function: ${e}`)}if(ArgumentError.assert(t,"Zbuffer","ArrayBuffer"),0===t.byteLength)throw new ArgumentError("'Zbuffer' has zero length, error");ArgumentError.assert(s,"SharedInfo","ArrayBuffer");const c=a/n;Math.floor(c)>0&&(i=Math.floor(c),c-i>0&&i++);const o=[];for(let a=1;a<=i;a++)o.push(await kdfWithCounter(e,t,a,s,r));let u=EMPTY_BUFFER,l=1,m=!0;for(;m;){m=!1;for(const e of o)if(e.counter===l){u=pvutils__namespace.utilConcatBuf(u,e.result),m=!0;break}l++}if(a>>=3,u.byteLength>a){const e=new ArrayBuffer(a),t=new Uint8Array(e),s=new Uint8Array(u);for(let e=0;e<a;e++)t[e]=s[e];return e}return u}exports.engine={name:"none",crypto:null};const VERSION$i="version",LOG_ID="logID",EXTENSIONS$6="extensions",TIMESTAMP="timestamp",HASH_ALGORITHM$3="hashAlgorithm",SIGNATURE_ALGORITHM$8="signatureAlgorithm",SIGNATURE$7="signature",NONE="none",MD5="md5",SHA1="sha1",SHA224="sha224",SHA256="sha256",SHA384="sha384",SHA512="sha512",ANONYMOUS="anonymous",RSA="rsa",DSA="dsa",ECDSA="ecdsa";class SignedCertificateTimestamp extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",SignedCertificateTimestamp.defaultValues("version")),this.logID=pvutils__namespace.getParametersValue(e,LOG_ID,SignedCertificateTimestamp.defaultValues(LOG_ID)),this.timestamp=pvutils__namespace.getParametersValue(e,TIMESTAMP,SignedCertificateTimestamp.defaultValues(TIMESTAMP)),this.extensions=pvutils__namespace.getParametersValue(e,"extensions",SignedCertificateTimestamp.defaultValues("extensions")),this.hashAlgorithm=pvutils__namespace.getParametersValue(e,"hashAlgorithm",SignedCertificateTimestamp.defaultValues("hashAlgorithm")),this.signatureAlgorithm=pvutils__namespace.getParametersValue(e,"signatureAlgorithm",SignedCertificateTimestamp.defaultValues("signatureAlgorithm")),this.signature=pvutils__namespace.getParametersValue(e,"signature",SignedCertificateTimestamp.defaultValues("signature")),"stream"in e&&e.stream&&this.fromStream(e.stream),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case LOG_ID:case"extensions":return EMPTY_BUFFER;case TIMESTAMP:return new Date(0);case"hashAlgorithm":case"signatureAlgorithm":return"";case"signature":return new asn1js__namespace.Any;default:return super.defaultValues(e)}}fromSchema(e){if(e instanceof asn1js__namespace.RawData==!1)throw new Error("Object's schema was not verified against input data for SignedCertificateTimestamp");const t=new bs__namespace.SeqStream({stream:new bs__namespace.ByteStream({buffer:e.data})});this.fromStream(t)}fromStream(e){const t=e.getUint16();if(this.version=e.getBlock(1)[0],0===this.version){this.logID=new Uint8Array(e.getBlock(32)).buffer.slice(0),this.timestamp=new Date(pvutils__namespace.utilFromBase(new Uint8Array(e.getBlock(8)),8));const a=e.getUint16();switch(this.extensions=new Uint8Array(e.getBlock(a)).buffer.slice(0),e.getBlock(1)[0]){case 0:this.hashAlgorithm=NONE;break;case 1:this.hashAlgorithm=MD5;break;case 2:this.hashAlgorithm=SHA1;break;case 3:this.hashAlgorithm=SHA224;break;case 4:this.hashAlgorithm=SHA256;break;case 5:this.hashAlgorithm=SHA384;break;case 6:this.hashAlgorithm=SHA512;break;default:throw new Error("Object's stream was not correct for SignedCertificateTimestamp")}switch(e.getBlock(1)[0]){case 0:this.signatureAlgorithm=ANONYMOUS;break;case 1:this.signatureAlgorithm=RSA;break;case 2:this.signatureAlgorithm=DSA;break;case 3:this.signatureAlgorithm=ECDSA;break;default:throw new Error("Object's stream was not correct for SignedCertificateTimestamp")}const s=e.getUint16(),r=new Uint8Array(e.getBlock(s)).buffer.slice(0),n=asn1js__namespace.fromBER(r);if(AsnError.assert(n,"SignedCertificateTimestamp"),this.signature=n.result,t!==47+a+s)throw new Error("Object's stream was not correct for SignedCertificateTimestamp")}}toSchema(){const e=this.toStream();return new asn1js__namespace.RawData({data:e.stream.buffer})}toStream(){const e=new bs__namespace.SeqStream;e.appendUint16(47+this.extensions.byteLength+this.signature.valueBeforeDecodeView.byteLength),e.appendChar(this.version),e.appendView(new Uint8Array(this.logID));const t=new ArrayBuffer(8),a=new Uint8Array(t),s=pvutils__namespace.utilToBase(this.timestamp.valueOf(),8);let r,n;switch(a.set(new Uint8Array(s),8-s.byteLength),e.appendView(a),e.appendUint16(this.extensions.byteLength),this.extensions.byteLength&&e.appendView(new Uint8Array(this.extensions)),this.hashAlgorithm.toLowerCase()){case NONE:r=0;break;case MD5:r=1;break;case SHA1:r=2;break;case SHA224:r=3;break;case SHA256:r=4;break;case SHA384:r=5;break;case SHA512:r=6;break;default:throw new Error(`Incorrect data for hashAlgorithm: ${this.hashAlgorithm}`)}switch(e.appendChar(r),this.signatureAlgorithm.toLowerCase()){case ANONYMOUS:n=0;break;case RSA:n=1;break;case DSA:n=2;break;case ECDSA:n=3;break;default:throw new Error(`Incorrect data for signatureAlgorithm: ${this.signatureAlgorithm}`)}e.appendChar(n);const i=this.signature.toBER(!1);return e.appendUint16(i.byteLength),e.appendView(new Uint8Array(i)),e}toJSON(){return{version:this.version,logID:pvutils__namespace.bufferToHexCodes(this.logID),timestamp:this.timestamp,extensions:pvutils__namespace.bufferToHexCodes(this.extensions),hashAlgorithm:this.hashAlgorithm,signatureAlgorithm:this.signatureAlgorithm,signature:this.signature.toJSON()}}async verify(e,t,a=0,s=getCrypto(!0)){const r=pvutils__namespace.toBase64(pvutils__namespace.arrayBufferToString(this.logID));let n=null;const i=new bs__namespace.SeqStream;for(const t of e)if(t.log_id===r){n=t.key;break}if(!n)throw new Error(`Public key not found for CT with logId: ${r}`);const c=pvutils__namespace.stringToArrayBuffer(pvutils__namespace.fromBase64(n)),o=PublicKeyInfo.fromBER(c);i.appendChar(0),i.appendChar(0);const u=new ArrayBuffer(8),l=new Uint8Array(u),m=pvutils__namespace.utilToBase(this.timestamp.valueOf(),8);return l.set(new Uint8Array(m),8-m.byteLength),i.appendView(l),i.appendUint16(a),0===a&&i.appendUint24(t.byteLength),i.appendView(new Uint8Array(t)),i.appendUint16(this.extensions.byteLength),0!==this.extensions.byteLength&&i.appendView(new Uint8Array(this.extensions)),s.verifyWithPublicKey(i.buffer.slice(0,i.length),new asn1js__namespace.OctetString({valueHex:this.signature.toBER(!1)}),o,{algorithmId:""},"SHA-256")}}async function verifySCTsForCertificate(e,t,a,s=-1,r=getCrypto(!0)){let n=null;const i=new bs__namespace.SeqStream;if(e.extensions)for(let t=e.extensions.length-1;t>=0;t--)if("1.3.6.1.4.1.11129.2.4.2"===e.extensions[t].extnID){if(n=e.extensions[t].parsedValue,!n||0===n.timestamps.length)throw new Error("Nothing to verify in the certificate");e.extensions.splice(t,1)}if(null===n)throw new Error("No SignedCertificateTimestampList extension in the specified certificate");const c=e.encodeTBS().toBER(),o=await r.digest({name:"SHA-256"},new Uint8Array(t.subjectPublicKeyInfo.toSchema().toBER(!1)));i.appendView(new Uint8Array(o)),i.appendUint24(c.byteLength),i.appendView(new Uint8Array(c));const u=i.stream.slice(0,i.length);if(-1===s){const e=[];for(const t of n.timestamps){const s=await t.verify(a,u.buffer,1,r);e.push(s)}return e}return s>=n.timestamps.length&&(s=n.timestamps.length-1),[await n.timestamps[s].verify(a,u.buffer,1,r)]}SignedCertificateTimestamp.CLASS_NAME="SignedCertificateTimestamp";const TIMESTAMPS="timestamps";class SignedCertificateTimestampList extends PkiObject{constructor(e={}){super(),this.timestamps=pvutils__namespace.getParametersValue(e,TIMESTAMPS,SignedCertificateTimestampList.defaultValues(TIMESTAMPS)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return e===TIMESTAMPS?[]:super.defaultValues(e)}static compareWithDefault(e,t){return e===TIMESTAMPS?0===t.length:super.defaultValues(e)}static schema(e={}){var t;const a=pvutils__namespace.getParametersValue(e,"names",{});return null!==(t=a.optional)&&void 0!==t||(a.optional=!1),new asn1js__namespace.OctetString({name:a.blockName||"SignedCertificateTimestampList",optional:a.optional})}fromSchema(e){if(e instanceof asn1js__namespace.OctetString==!1)throw new Error("Object's schema was not verified against input data for SignedCertificateTimestampList");const t=new bs__namespace.SeqStream({stream:new bs__namespace.ByteStream({buffer:e.valueBlock.valueHex})});if(t.getUint16()!==t.length)throw new Error("Object's schema was not verified against input data for SignedCertificateTimestampList");for(;t.length;)this.timestamps.push(new SignedCertificateTimestamp({stream:t}))}toSchema(){const e=new bs__namespace.SeqStream;let t=0;const a=[];for(const e of this.timestamps){const s=e.toStream();a.push(s),t+=s.stream.buffer.byteLength}e.appendUint16(t);for(const t of a)e.appendView(t.stream.view);return new asn1js__namespace.OctetString({valueHex:e.stream.buffer.slice(0)})}toJSON(){return{timestamps:Array.from(this.timestamps,(e=>e.toJSON()))}}}SignedCertificateTimestampList.CLASS_NAME="SignedCertificateTimestampList";const ATTRIBUTES$4="attributes",CLEAR_PROPS$11=["attributes"];class SubjectDirectoryAttributes extends PkiObject{constructor(e={}){super(),this.attributes=pvutils__namespace.getParametersValue(e,"attributes",SubjectDirectoryAttributes.defaultValues("attributes")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return"attributes"===e?[]:super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.attributes||"",value:Attribute.schema()})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$11);const t=asn1js__namespace.compareSchema(e,e,SubjectDirectoryAttributes.schema({names:{attributes:"attributes"}}));AsnError.assertSchema(t,this.className),this.attributes=Array.from(t.result.attributes,(e=>new Attribute({schema:e})))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.attributes,(e=>e.toSchema()))})}toJSON(){return{attributes:Array.from(this.attributes,(e=>e.toJSON()))}}}SubjectDirectoryAttributes.CLASS_NAME="SubjectDirectoryAttributes";class ExtensionValueFactory{static getItems(){return this.types||(this.types={},ExtensionValueFactory.register("2.5.29.17","SubjectAltName",AltName),ExtensionValueFactory.register("2.5.29.18","IssuerAltName",AltName),ExtensionValueFactory.register("2.5.29.35","AuthorityKeyIdentifier",AuthorityKeyIdentifier),ExtensionValueFactory.register("2.5.29.19","BasicConstraints",BasicConstraints),ExtensionValueFactory.register(id_MicrosoftCaVersion,"MicrosoftCaVersion",CAVersion),ExtensionValueFactory.register("2.5.29.32","CertificatePolicies",CertificatePolicies),ExtensionValueFactory.register("1.3.6.1.4.1.311.21.10","CertificatePoliciesMicrosoft",CertificatePolicies),ExtensionValueFactory.register("1.3.6.1.4.1.311.21.7","MicrosoftCertTemplateV2",CertificateTemplate),ExtensionValueFactory.register("2.5.29.31","CRLDistributionPoints",CRLDistributionPoints),ExtensionValueFactory.register("2.5.29.46","FreshestCRL",CRLDistributionPoints),ExtensionValueFactory.register("2.5.29.37","ExtKeyUsage",ExtKeyUsage),ExtensionValueFactory.register("2.5.29.29","CertificateIssuer",GeneralNames),ExtensionValueFactory.register("1.3.6.1.5.5.7.1.1","AuthorityInfoAccess",InfoAccess),ExtensionValueFactory.register("1.3.6.1.5.5.7.1.11","SubjectInfoAccess",InfoAccess),ExtensionValueFactory.register("2.5.29.28","IssuingDistributionPoint",IssuingDistributionPoint),ExtensionValueFactory.register("2.5.29.30","NameConstraints",NameConstraints),ExtensionValueFactory.register("2.5.29.36","PolicyConstraints",PolicyConstraints),ExtensionValueFactory.register("2.5.29.33","PolicyMappings",PolicyMappings),ExtensionValueFactory.register("2.5.29.16","PrivateKeyUsagePeriod",PrivateKeyUsagePeriod),ExtensionValueFactory.register(id_QCStatements,"QCStatements",QCStatements),ExtensionValueFactory.register("1.3.6.1.4.1.11129.2.4.2","SignedCertificateTimestampList",SignedCertificateTimestampList),ExtensionValueFactory.register("2.5.29.9","SubjectDirectoryAttributes",SubjectDirectoryAttributes)),this.types}static fromBER(e,t){const a=asn1js__namespace.fromBER(t);if(-1===a.offset)return null;const s=this.find(e);if(s)try{return new s.type({schema:a.result})}catch(t){const a=new s.type;return a.parsingError=`Incorrectly formatted value of extension ${s.name} (${e})`,a}return a.result}static find(e){return this.getItems()[e]||null}static register(e,t,a){this.getItems()[e]={name:t,type:a}}}const EXTN_ID="extnID",CRITICAL="critical",EXTN_VALUE="extnValue",PARSED_VALUE$5="parsedValue",CLEAR_PROPS$10=[EXTN_ID,CRITICAL,EXTN_VALUE];class Extension extends PkiObject{get parsedValue(){if(void 0===this._parsedValue){const e=ExtensionValueFactory.fromBER(this.extnID,this.extnValue.valueBlock.valueHexView);this._parsedValue=e}return this._parsedValue||void 0}set parsedValue(e){this._parsedValue=e}constructor(e={}){super(),this.extnID=pvutils__namespace.getParametersValue(e,EXTN_ID,Extension.defaultValues(EXTN_ID)),this.critical=pvutils__namespace.getParametersValue(e,CRITICAL,Extension.defaultValues(CRITICAL)),this.extnValue=EXTN_VALUE in e?new asn1js__namespace.OctetString({valueHex:e.extnValue}):Extension.defaultValues(EXTN_VALUE),"parsedValue"in e&&(this.parsedValue=pvutils__namespace.getParametersValue(e,"parsedValue",Extension.defaultValues("parsedValue"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case EXTN_ID:return"";case CRITICAL:return!1;case EXTN_VALUE:return new asn1js__namespace.OctetString;case"parsedValue":return{};default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.extnID||""}),new asn1js__namespace.Boolean({name:t.critical||"",optional:!0}),new asn1js__namespace.OctetString({name:t.extnValue||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$10);const t=asn1js__namespace.compareSchema(e,e,Extension.schema({names:{extnID:EXTN_ID,critical:CRITICAL,extnValue:EXTN_VALUE}}));AsnError.assertSchema(t,this.className),this.extnID=t.result.extnID.valueBlock.toString(),CRITICAL in t.result&&(this.critical=t.result.critical.valueBlock.value),this.extnValue=t.result.extnValue}toSchema(){const e=[];return e.push(new asn1js__namespace.ObjectIdentifier({value:this.extnID})),this.critical!==Extension.defaultValues(CRITICAL)&&e.push(new asn1js__namespace.Boolean({value:this.critical})),e.push(this.extnValue),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={extnID:this.extnID,extnValue:this.extnValue.toJSON()};return this.critical!==Extension.defaultValues(CRITICAL)&&(e.critical=this.critical),this.parsedValue&&this.parsedValue.toJSON&&(e.parsedValue=this.parsedValue.toJSON()),e}}Extension.CLASS_NAME="Extension";const EXTENSIONS$5="extensions",CLEAR_PROPS$$=["extensions"];class Extensions extends PkiObject{constructor(e={}){super(),this.extensions=pvutils__namespace.getParametersValue(e,"extensions",Extensions.defaultValues("extensions")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return"extensions"===e?[]:super.defaultValues(e)}static schema(e={},t=!1){const a=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({optional:t,name:a.blockName||"",value:[new asn1js__namespace.Repeated({name:a.extensions||"",value:Extension.schema(a.extension||{})})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$$);const t=asn1js__namespace.compareSchema(e,e,Extensions.schema({names:{extensions:"extensions"}}));AsnError.assertSchema(t,this.className),this.extensions=Array.from(t.result.extensions,(e=>new Extension({schema:e})))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.extensions,(e=>e.toSchema()))})}toJSON(){return{extensions:this.extensions.map((e=>e.toJSON()))}}}Extensions.CLASS_NAME="Extensions";const ISSUER$5="issuer",SERIAL_NUMBER$6="serialNumber",ISSUER_UID="issuerUID",CLEAR_PROPS$_=["issuer","serialNumber",ISSUER_UID];class IssuerSerial extends PkiObject{constructor(e={}){super(),this.issuer=pvutils__namespace.getParametersValue(e,"issuer",IssuerSerial.defaultValues("issuer")),this.serialNumber=pvutils__namespace.getParametersValue(e,"serialNumber",IssuerSerial.defaultValues("serialNumber")),ISSUER_UID in e&&(this.issuerUID=pvutils__namespace.getParametersValue(e,ISSUER_UID,IssuerSerial.defaultValues(ISSUER_UID))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"issuer":return new GeneralNames;case"serialNumber":return new asn1js__namespace.Integer;case ISSUER_UID:return new asn1js__namespace.BitString;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[GeneralNames.schema(t.issuer||{}),new asn1js__namespace.Integer({name:t.serialNumber||""}),new asn1js__namespace.BitString({optional:!0,name:t.issuerUID||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$_);const t=asn1js__namespace.compareSchema(e,e,IssuerSerial.schema({names:{issuer:{names:{blockName:"issuer"}},serialNumber:"serialNumber",issuerUID:ISSUER_UID}}));AsnError.assertSchema(t,this.className),this.issuer=new GeneralNames({schema:t.result.issuer}),this.serialNumber=t.result.serialNumber,ISSUER_UID in t.result&&(this.issuerUID=t.result.issuerUID)}toSchema(){const e=new asn1js__namespace.Sequence({value:[this.issuer.toSchema(),this.serialNumber]});return this.issuerUID&&e.valueBlock.value.push(this.issuerUID),e}toJSON(){const e={issuer:this.issuer.toJSON(),serialNumber:this.serialNumber.toJSON()};return this.issuerUID&&(e.issuerUID=this.issuerUID.toJSON()),e}}IssuerSerial.CLASS_NAME="IssuerSerial";const VERSION$h="version",BASE_CERTIFICATE_ID$2="baseCertificateID",SUBJECT_NAME="subjectName",ISSUER$4="issuer",SIGNATURE$6="signature",SERIAL_NUMBER$5="serialNumber",ATTR_CERT_VALIDITY_PERIOD$1="attrCertValidityPeriod",ATTRIBUTES$3="attributes",ISSUER_UNIQUE_ID$2="issuerUniqueID",EXTENSIONS$4="extensions",CLEAR_PROPS$Z=["version","baseCertificateID",SUBJECT_NAME,"issuer","signature","serialNumber","attrCertValidityPeriod","attributes","issuerUniqueID","extensions"];class AttributeCertificateInfoV1 extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",AttributeCertificateInfoV1.defaultValues("version")),"baseCertificateID"in e&&(this.baseCertificateID=pvutils__namespace.getParametersValue(e,"baseCertificateID",AttributeCertificateInfoV1.defaultValues("baseCertificateID"))),SUBJECT_NAME in e&&(this.subjectName=pvutils__namespace.getParametersValue(e,SUBJECT_NAME,AttributeCertificateInfoV1.defaultValues(SUBJECT_NAME))),this.issuer=pvutils__namespace.getParametersValue(e,"issuer",AttributeCertificateInfoV1.defaultValues("issuer")),this.signature=pvutils__namespace.getParametersValue(e,"signature",AttributeCertificateInfoV1.defaultValues("signature")),this.serialNumber=pvutils__namespace.getParametersValue(e,"serialNumber",AttributeCertificateInfoV1.defaultValues("serialNumber")),this.attrCertValidityPeriod=pvutils__namespace.getParametersValue(e,"attrCertValidityPeriod",AttributeCertificateInfoV1.defaultValues("attrCertValidityPeriod")),this.attributes=pvutils__namespace.getParametersValue(e,"attributes",AttributeCertificateInfoV1.defaultValues("attributes")),"issuerUniqueID"in e&&(this.issuerUniqueID=pvutils__namespace.getParametersValue(e,"issuerUniqueID",AttributeCertificateInfoV1.defaultValues("issuerUniqueID"))),"extensions"in e&&(this.extensions=pvutils__namespace.getParametersValue(e,"extensions",AttributeCertificateInfoV1.defaultValues("extensions"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case"baseCertificateID":return new IssuerSerial;case SUBJECT_NAME:case"issuer":return new GeneralNames;case"signature":return new AlgorithmIdentifier;case"serialNumber":return new asn1js__namespace.Integer;case"attrCertValidityPeriod":return new AttCertValidityPeriod;case"attributes":return[];case"issuerUniqueID":return new asn1js__namespace.BitString;case"extensions":return new Extensions;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||""}),new asn1js__namespace.Choice({value:[new asn1js__namespace.Constructed({name:t.baseCertificateID||"",idBlock:{tagClass:3,tagNumber:0},value:IssuerSerial.schema().valueBlock.value}),new asn1js__namespace.Constructed({name:t.subjectName||"",idBlock:{tagClass:3,tagNumber:1},value:GeneralNames.schema().valueBlock.value})]}),GeneralNames.schema({names:{blockName:t.issuer||""}}),AlgorithmIdentifier.schema(t.signature||{}),new asn1js__namespace.Integer({name:t.serialNumber||""}),AttCertValidityPeriod.schema(t.attrCertValidityPeriod||{}),new asn1js__namespace.Sequence({name:t.attributes||"",value:[new asn1js__namespace.Repeated({value:Attribute.schema()})]}),new asn1js__namespace.BitString({optional:!0,name:t.issuerUniqueID||""}),Extensions.schema(t.extensions||{},!0)]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$Z);const t=asn1js__namespace.compareSchema(e,e,AttributeCertificateInfoV1.schema({names:{version:"version",baseCertificateID:"baseCertificateID",subjectName:SUBJECT_NAME,issuer:"issuer",signature:{names:{blockName:"signature"}},serialNumber:"serialNumber",attrCertValidityPeriod:{names:{blockName:"attrCertValidityPeriod"}},attributes:"attributes",issuerUniqueID:"issuerUniqueID",extensions:{names:{blockName:"extensions"}}}}));AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,"baseCertificateID"in t.result&&(this.baseCertificateID=new IssuerSerial({schema:new asn1js__namespace.Sequence({value:t.result.baseCertificateID.valueBlock.value})})),SUBJECT_NAME in t.result&&(this.subjectName=new GeneralNames({schema:new asn1js__namespace.Sequence({value:t.result.subjectName.valueBlock.value})})),this.issuer=t.result.issuer,this.signature=new AlgorithmIdentifier({schema:t.result.signature}),this.serialNumber=t.result.serialNumber,this.attrCertValidityPeriod=new AttCertValidityPeriod({schema:t.result.attrCertValidityPeriod}),this.attributes=Array.from(t.result.attributes.valueBlock.value,(e=>new Attribute({schema:e}))),"issuerUniqueID"in t.result&&(this.issuerUniqueID=t.result.issuerUniqueID),"extensions"in t.result&&(this.extensions=new Extensions({schema:t.result.extensions}))}toSchema(){const e=new asn1js__namespace.Sequence({value:[new asn1js__namespace.Integer({value:this.version})]});return this.baseCertificateID&&e.valueBlock.value.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:this.baseCertificateID.toSchema().valueBlock.value})),this.subjectName&&e.valueBlock.value.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:this.subjectName.toSchema().valueBlock.value})),e.valueBlock.value.push(this.issuer.toSchema()),e.valueBlock.value.push(this.signature.toSchema()),e.valueBlock.value.push(this.serialNumber),e.valueBlock.value.push(this.attrCertValidityPeriod.toSchema()),e.valueBlock.value.push(new asn1js__namespace.Sequence({value:Array.from(this.attributes,(e=>e.toSchema()))})),this.issuerUniqueID&&e.valueBlock.value.push(this.issuerUniqueID),this.extensions&&e.valueBlock.value.push(this.extensions.toSchema()),e}toJSON(){const e={version:this.version};return this.baseCertificateID&&(e.baseCertificateID=this.baseCertificateID.toJSON()),this.subjectName&&(e.subjectName=this.subjectName.toJSON()),e.issuer=this.issuer.toJSON(),e.signature=this.signature.toJSON(),e.serialNumber=this.serialNumber.toJSON(),e.attrCertValidityPeriod=this.attrCertValidityPeriod.toJSON(),e.attributes=Array.from(this.attributes,(e=>e.toJSON())),this.issuerUniqueID&&(e.issuerUniqueID=this.issuerUniqueID.toJSON()),this.extensions&&(e.extensions=this.extensions.toJSON()),e}}AttributeCertificateInfoV1.CLASS_NAME="AttributeCertificateInfoV1";const ACINFO$1="acinfo",SIGNATURE_ALGORITHM$7="signatureAlgorithm",SIGNATURE_VALUE$4="signatureValue",CLEAR_PROPS$Y=["acinfo","signatureValue","signatureAlgorithm"];class AttributeCertificateV1 extends PkiObject{constructor(e={}){super(),this.acinfo=pvutils__namespace.getParametersValue(e,"acinfo",AttributeCertificateV1.defaultValues("acinfo")),this.signatureAlgorithm=pvutils__namespace.getParametersValue(e,"signatureAlgorithm",AttributeCertificateV1.defaultValues("signatureAlgorithm")),this.signatureValue=pvutils__namespace.getParametersValue(e,"signatureValue",AttributeCertificateV1.defaultValues("signatureValue")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"acinfo":return new AttributeCertificateInfoV1;case"signatureAlgorithm":return new AlgorithmIdentifier;case"signatureValue":return new asn1js__namespace.BitString;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[AttributeCertificateInfoV1.schema(t.acinfo||{}),AlgorithmIdentifier.schema(t.signatureAlgorithm||{}),new asn1js__namespace.BitString({name:t.signatureValue||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$Y);const t=asn1js__namespace.compareSchema(e,e,AttributeCertificateV1.schema({names:{acinfo:{names:{blockName:"acinfo"}},signatureAlgorithm:{names:{blockName:"signatureAlgorithm"}},signatureValue:"signatureValue"}}));AsnError.assertSchema(t,this.className),this.acinfo=new AttributeCertificateInfoV1({schema:t.result.acinfo}),this.signatureAlgorithm=new AlgorithmIdentifier({schema:t.result.signatureAlgorithm}),this.signatureValue=t.result.signatureValue}toSchema(){return new asn1js__namespace.Sequence({value:[this.acinfo.toSchema(),this.signatureAlgorithm.toSchema(),this.signatureValue]})}toJSON(){return{acinfo:this.acinfo.toJSON(),signatureAlgorithm:this.signatureAlgorithm.toJSON(),signatureValue:this.signatureValue.toJSON()}}}AttributeCertificateV1.CLASS_NAME="AttributeCertificateV1";const DIGESTED_OBJECT_TYPE="digestedObjectType",OTHER_OBJECT_TYPE_ID="otherObjectTypeID",DIGEST_ALGORITHM$2="digestAlgorithm",OBJECT_DIGEST="objectDigest",CLEAR_PROPS$X=["digestedObjectType","otherObjectTypeID","digestAlgorithm",OBJECT_DIGEST];class ObjectDigestInfo extends PkiObject{constructor(e={}){super(),this.digestedObjectType=pvutils__namespace.getParametersValue(e,"digestedObjectType",ObjectDigestInfo.defaultValues("digestedObjectType")),"otherObjectTypeID"in e&&(this.otherObjectTypeID=pvutils__namespace.getParametersValue(e,"otherObjectTypeID",ObjectDigestInfo.defaultValues("otherObjectTypeID"))),this.digestAlgorithm=pvutils__namespace.getParametersValue(e,"digestAlgorithm",ObjectDigestInfo.defaultValues("digestAlgorithm")),this.objectDigest=pvutils__namespace.getParametersValue(e,OBJECT_DIGEST,ObjectDigestInfo.defaultValues(OBJECT_DIGEST)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"digestedObjectType":return new asn1js__namespace.Enumerated;case"otherObjectTypeID":return new asn1js__namespace.ObjectIdentifier;case"digestAlgorithm":return new AlgorithmIdentifier;case OBJECT_DIGEST:return new asn1js__namespace.BitString;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Enumerated({name:t.digestedObjectType||""}),new asn1js__namespace.ObjectIdentifier({optional:!0,name:t.otherObjectTypeID||""}),AlgorithmIdentifier.schema(t.digestAlgorithm||{}),new asn1js__namespace.BitString({name:t.objectDigest||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$X);const t=asn1js__namespace.compareSchema(e,e,ObjectDigestInfo.schema({names:{digestedObjectType:"digestedObjectType",otherObjectTypeID:"otherObjectTypeID",digestAlgorithm:{names:{blockName:"digestAlgorithm"}},objectDigest:OBJECT_DIGEST}}));AsnError.assertSchema(t,this.className),this.digestedObjectType=t.result.digestedObjectType,"otherObjectTypeID"in t.result&&(this.otherObjectTypeID=t.result.otherObjectTypeID),this.digestAlgorithm=new AlgorithmIdentifier({schema:t.result.digestAlgorithm}),this.objectDigest=t.result.objectDigest}toSchema(){const e=new asn1js__namespace.Sequence({value:[this.digestedObjectType]});return this.otherObjectTypeID&&e.valueBlock.value.push(this.otherObjectTypeID),e.valueBlock.value.push(this.digestAlgorithm.toSchema()),e.valueBlock.value.push(this.objectDigest),e}toJSON(){const e={digestedObjectType:this.digestedObjectType.toJSON(),digestAlgorithm:this.digestAlgorithm.toJSON(),objectDigest:this.objectDigest.toJSON()};return this.otherObjectTypeID&&(e.otherObjectTypeID=this.otherObjectTypeID.toJSON()),e}}ObjectDigestInfo.CLASS_NAME="ObjectDigestInfo";const ISSUER_NAME="issuerName",BASE_CERTIFICATE_ID$1="baseCertificateID",OBJECT_DIGEST_INFO$1="objectDigestInfo",CLEAR_PROPS$W=[ISSUER_NAME,"baseCertificateID","objectDigestInfo"];class V2Form extends PkiObject{constructor(e={}){super(),ISSUER_NAME in e&&(this.issuerName=pvutils__namespace.getParametersValue(e,ISSUER_NAME,V2Form.defaultValues(ISSUER_NAME))),"baseCertificateID"in e&&(this.baseCertificateID=pvutils__namespace.getParametersValue(e,"baseCertificateID",V2Form.defaultValues("baseCertificateID"))),"objectDigestInfo"in e&&(this.objectDigestInfo=pvutils__namespace.getParametersValue(e,"objectDigestInfo",V2Form.defaultValues("objectDigestInfo"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case ISSUER_NAME:return new GeneralNames;case"baseCertificateID":return new IssuerSerial;case"objectDigestInfo":return new ObjectDigestInfo;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[GeneralNames.schema({names:{blockName:t.issuerName}},!0),new asn1js__namespace.Constructed({optional:!0,name:t.baseCertificateID||"",idBlock:{tagClass:3,tagNumber:0},value:IssuerSerial.schema().valueBlock.value}),new asn1js__namespace.Constructed({optional:!0,name:t.objectDigestInfo||"",idBlock:{tagClass:3,tagNumber:1},value:ObjectDigestInfo.schema().valueBlock.value})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$W);const t=asn1js__namespace.compareSchema(e,e,V2Form.schema({names:{issuerName:ISSUER_NAME,baseCertificateID:"baseCertificateID",objectDigestInfo:"objectDigestInfo"}}));AsnError.assertSchema(t,this.className),ISSUER_NAME in t.result&&(this.issuerName=new GeneralNames({schema:t.result.issuerName})),"baseCertificateID"in t.result&&(this.baseCertificateID=new IssuerSerial({schema:new asn1js__namespace.Sequence({value:t.result.baseCertificateID.valueBlock.value})})),"objectDigestInfo"in t.result&&(this.objectDigestInfo=new ObjectDigestInfo({schema:new asn1js__namespace.Sequence({value:t.result.objectDigestInfo.valueBlock.value})}))}toSchema(){const e=new asn1js__namespace.Sequence;return this.issuerName&&e.valueBlock.value.push(this.issuerName.toSchema()),this.baseCertificateID&&e.valueBlock.value.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:this.baseCertificateID.toSchema().valueBlock.value})),this.objectDigestInfo&&e.valueBlock.value.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:this.objectDigestInfo.toSchema().valueBlock.value})),e}toJSON(){const e={};return this.issuerName&&(e.issuerName=this.issuerName.toJSON()),this.baseCertificateID&&(e.baseCertificateID=this.baseCertificateID.toJSON()),this.objectDigestInfo&&(e.objectDigestInfo=this.objectDigestInfo.toJSON()),e}}V2Form.CLASS_NAME="V2Form";const BASE_CERTIFICATE_ID="baseCertificateID",ENTITY_NAME="entityName",OBJECT_DIGEST_INFO="objectDigestInfo",CLEAR_PROPS$V=["baseCertificateID",ENTITY_NAME,"objectDigestInfo"];class Holder extends PkiObject{constructor(e={}){super(),"baseCertificateID"in e&&(this.baseCertificateID=pvutils__namespace.getParametersValue(e,"baseCertificateID",Holder.defaultValues("baseCertificateID"))),ENTITY_NAME in e&&(this.entityName=pvutils__namespace.getParametersValue(e,ENTITY_NAME,Holder.defaultValues(ENTITY_NAME))),"objectDigestInfo"in e&&(this.objectDigestInfo=pvutils__namespace.getParametersValue(e,"objectDigestInfo",Holder.defaultValues("objectDigestInfo"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"baseCertificateID":return new IssuerSerial;case ENTITY_NAME:return new GeneralNames;case"objectDigestInfo":return new ObjectDigestInfo;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Constructed({optional:!0,name:t.baseCertificateID||"",idBlock:{tagClass:3,tagNumber:0},value:IssuerSerial.schema().valueBlock.value}),new asn1js__namespace.Constructed({optional:!0,name:t.entityName||"",idBlock:{tagClass:3,tagNumber:1},value:GeneralNames.schema().valueBlock.value}),new asn1js__namespace.Constructed({optional:!0,name:t.objectDigestInfo||"",idBlock:{tagClass:3,tagNumber:2},value:ObjectDigestInfo.schema().valueBlock.value})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$V);const t=asn1js__namespace.compareSchema(e,e,Holder.schema({names:{baseCertificateID:"baseCertificateID",entityName:ENTITY_NAME,objectDigestInfo:"objectDigestInfo"}}));AsnError.assertSchema(t,this.className),"baseCertificateID"in t.result&&(this.baseCertificateID=new IssuerSerial({schema:new asn1js__namespace.Sequence({value:t.result.baseCertificateID.valueBlock.value})})),ENTITY_NAME in t.result&&(this.entityName=new GeneralNames({schema:new asn1js__namespace.Sequence({value:t.result.entityName.valueBlock.value})})),"objectDigestInfo"in t.result&&(this.objectDigestInfo=new ObjectDigestInfo({schema:new asn1js__namespace.Sequence({value:t.result.objectDigestInfo.valueBlock.value})}))}toSchema(){const e=new asn1js__namespace.Sequence;return this.baseCertificateID&&e.valueBlock.value.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:this.baseCertificateID.toSchema().valueBlock.value})),this.entityName&&e.valueBlock.value.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:this.entityName.toSchema().valueBlock.value})),this.objectDigestInfo&&e.valueBlock.value.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:2},value:this.objectDigestInfo.toSchema().valueBlock.value})),e}toJSON(){const e={};return this.baseCertificateID&&(e.baseCertificateID=this.baseCertificateID.toJSON()),this.entityName&&(e.entityName=this.entityName.toJSON()),this.objectDigestInfo&&(e.objectDigestInfo=this.objectDigestInfo.toJSON()),e}}Holder.CLASS_NAME="Holder";const VERSION$g="version",HOLDER="holder",ISSUER$3="issuer",SIGNATURE$5="signature",SERIAL_NUMBER$4="serialNumber",ATTR_CERT_VALIDITY_PERIOD="attrCertValidityPeriod",ATTRIBUTES$2="attributes",ISSUER_UNIQUE_ID$1="issuerUniqueID",EXTENSIONS$3="extensions",CLEAR_PROPS$U=["version",HOLDER,"issuer","signature","serialNumber","attrCertValidityPeriod","attributes","issuerUniqueID","extensions"];class AttributeCertificateInfoV2 extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",AttributeCertificateInfoV2.defaultValues("version")),this.holder=pvutils__namespace.getParametersValue(e,HOLDER,AttributeCertificateInfoV2.defaultValues(HOLDER)),this.issuer=pvutils__namespace.getParametersValue(e,"issuer",AttributeCertificateInfoV2.defaultValues("issuer")),this.signature=pvutils__namespace.getParametersValue(e,"signature",AttributeCertificateInfoV2.defaultValues("signature")),this.serialNumber=pvutils__namespace.getParametersValue(e,"serialNumber",AttributeCertificateInfoV2.defaultValues("serialNumber")),this.attrCertValidityPeriod=pvutils__namespace.getParametersValue(e,"attrCertValidityPeriod",AttributeCertificateInfoV2.defaultValues("attrCertValidityPeriod")),this.attributes=pvutils__namespace.getParametersValue(e,"attributes",AttributeCertificateInfoV2.defaultValues("attributes")),"issuerUniqueID"in e&&(this.issuerUniqueID=pvutils__namespace.getParametersValue(e,"issuerUniqueID",AttributeCertificateInfoV2.defaultValues("issuerUniqueID"))),"extensions"in e&&(this.extensions=pvutils__namespace.getParametersValue(e,"extensions",AttributeCertificateInfoV2.defaultValues("extensions"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 1;case HOLDER:return new Holder;case"issuer":return{};case"signature":return new AlgorithmIdentifier;case"serialNumber":return new asn1js__namespace.Integer;case"attrCertValidityPeriod":return new AttCertValidityPeriod;case"attributes":return[];case"issuerUniqueID":return new asn1js__namespace.BitString;case"extensions":return new Extensions;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||""}),Holder.schema(t.holder||{}),new asn1js__namespace.Choice({value:[GeneralNames.schema({names:{blockName:t.issuer||""}}),new asn1js__namespace.Constructed({name:t.issuer||"",idBlock:{tagClass:3,tagNumber:0},value:V2Form.schema().valueBlock.value})]}),AlgorithmIdentifier.schema(t.signature||{}),new asn1js__namespace.Integer({name:t.serialNumber||""}),AttCertValidityPeriod.schema(t.attrCertValidityPeriod||{}),new asn1js__namespace.Sequence({name:t.attributes||"",value:[new asn1js__namespace.Repeated({value:Attribute.schema()})]}),new asn1js__namespace.BitString({optional:!0,name:t.issuerUniqueID||""}),Extensions.schema(t.extensions||{},!0)]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$U);const t=asn1js__namespace.compareSchema(e,e,AttributeCertificateInfoV2.schema({names:{version:"version",holder:{names:{blockName:HOLDER}},issuer:"issuer",signature:{names:{blockName:"signature"}},serialNumber:"serialNumber",attrCertValidityPeriod:{names:{blockName:"attrCertValidityPeriod"}},attributes:"attributes",issuerUniqueID:"issuerUniqueID",extensions:{names:{blockName:"extensions"}}}}));if(AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,this.holder=new Holder({schema:t.result.holder}),3!==t.result.issuer.idBlock.tagClass)throw new Error("Incorrect value for 'issuer' in AttributeCertificateInfoV2");this.issuer=new V2Form({schema:new asn1js__namespace.Sequence({value:t.result.issuer.valueBlock.value})}),this.signature=new AlgorithmIdentifier({schema:t.result.signature}),this.serialNumber=t.result.serialNumber,this.attrCertValidityPeriod=new AttCertValidityPeriod({schema:t.result.attrCertValidityPeriod}),this.attributes=Array.from(t.result.attributes.valueBlock.value,(e=>new Attribute({schema:e}))),"issuerUniqueID"in t.result&&(this.issuerUniqueID=t.result.issuerUniqueID),"extensions"in t.result&&(this.extensions=new Extensions({schema:t.result.extensions}))}toSchema(){const e=new asn1js__namespace.Sequence({value:[new asn1js__namespace.Integer({value:this.version}),this.holder.toSchema(),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:this.issuer.toSchema().valueBlock.value}),this.signature.toSchema(),this.serialNumber,this.attrCertValidityPeriod.toSchema(),new asn1js__namespace.Sequence({value:Array.from(this.attributes,(e=>e.toSchema()))})]});return this.issuerUniqueID&&e.valueBlock.value.push(this.issuerUniqueID),this.extensions&&e.valueBlock.value.push(this.extensions.toSchema()),e}toJSON(){const e={version:this.version,holder:this.holder.toJSON(),issuer:this.issuer.toJSON(),signature:this.signature.toJSON(),serialNumber:this.serialNumber.toJSON(),attrCertValidityPeriod:this.attrCertValidityPeriod.toJSON(),attributes:Array.from(this.attributes,(e=>e.toJSON()))};return this.issuerUniqueID&&(e.issuerUniqueID=this.issuerUniqueID.toJSON()),this.extensions&&(e.extensions=this.extensions.toJSON()),e}}AttributeCertificateInfoV2.CLASS_NAME="AttributeCertificateInfoV2";const ACINFO="acinfo",SIGNATURE_ALGORITHM$6="signatureAlgorithm",SIGNATURE_VALUE$3="signatureValue",CLEAR_PROPS$T=[ACINFO,"signatureAlgorithm","signatureValue"];class AttributeCertificateV2 extends PkiObject{constructor(e={}){super(),this.acinfo=pvutils__namespace.getParametersValue(e,ACINFO,AttributeCertificateV2.defaultValues(ACINFO)),this.signatureAlgorithm=pvutils__namespace.getParametersValue(e,"signatureAlgorithm",AttributeCertificateV2.defaultValues("signatureAlgorithm")),this.signatureValue=pvutils__namespace.getParametersValue(e,"signatureValue",AttributeCertificateV2.defaultValues("signatureValue")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case ACINFO:return new AttributeCertificateInfoV2;case"signatureAlgorithm":return new AlgorithmIdentifier;case"signatureValue":return new asn1js__namespace.BitString;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[AttributeCertificateInfoV2.schema(t.acinfo||{}),AlgorithmIdentifier.schema(t.signatureAlgorithm||{}),new asn1js__namespace.BitString({name:t.signatureValue||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$T);const t=asn1js__namespace.compareSchema(e,e,AttributeCertificateV2.schema({names:{acinfo:{names:{blockName:ACINFO}},signatureAlgorithm:{names:{blockName:"signatureAlgorithm"}},signatureValue:"signatureValue"}}));AsnError.assertSchema(t,this.className),this.acinfo=new AttributeCertificateInfoV2({schema:t.result.acinfo}),this.signatureAlgorithm=new AlgorithmIdentifier({schema:t.result.signatureAlgorithm}),this.signatureValue=t.result.signatureValue}toSchema(){return new asn1js__namespace.Sequence({value:[this.acinfo.toSchema(),this.signatureAlgorithm.toSchema(),this.signatureValue]})}toJSON(){return{acinfo:this.acinfo.toJSON(),signatureAlgorithm:this.signatureAlgorithm.toJSON(),signatureValue:this.signatureValue.toJSON()}}}AttributeCertificateV2.CLASS_NAME="AttributeCertificateV2";const CONTENT_TYPE="contentType",CONTENT="content",CLEAR_PROPS$S=[CONTENT_TYPE,CONTENT];class ContentInfo extends PkiObject{constructor(e={}){super(),this.contentType=pvutils__namespace.getParametersValue(e,CONTENT_TYPE,ContentInfo.defaultValues(CONTENT_TYPE)),this.content=pvutils__namespace.getParametersValue(e,CONTENT,ContentInfo.defaultValues(CONTENT)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case CONTENT_TYPE:return"";case CONTENT:return new asn1js__namespace.Any;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case CONTENT_TYPE:return"string"==typeof t&&t===this.defaultValues(CONTENT_TYPE);case CONTENT:return t instanceof asn1js__namespace.Any;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return"optional"in t==!1&&(t.optional=!1),new asn1js__namespace.Sequence({name:t.blockName||"ContentInfo",optional:t.optional,value:[new asn1js__namespace.ObjectIdentifier({name:t.contentType||CONTENT_TYPE}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Any({name:t.content||CONTENT})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$S);const t=asn1js__namespace.compareSchema(e,e,ContentInfo.schema());AsnError.assertSchema(t,this.className),this.contentType=t.result.contentType.valueBlock.toString(),this.content=t.result.content}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.contentType}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[this.content]})]})}toJSON(){const e={contentType:this.contentType};return this.content instanceof asn1js__namespace.Any||(e.content=this.content.toJSON()),e}}ContentInfo.CLASS_NAME="ContentInfo",ContentInfo.DATA=id_ContentType_Data,ContentInfo.SIGNED_DATA="1.2.840.113549.1.7.2",ContentInfo.ENVELOPED_DATA="1.2.840.113549.1.7.3",ContentInfo.ENCRYPTED_DATA="1.2.840.113549.1.7.6";const TYPE$1="type",VALUE$4="value",UTC_TIME_NAME="utcTimeName",GENERAL_TIME_NAME="generalTimeName",CLEAR_PROPS$R=["utcTimeName","generalTimeName"];exports.TimeType=void 0,function(e){e[e.UTCTime=0]="UTCTime",e[e.GeneralizedTime=1]="GeneralizedTime",e[e.empty=2]="empty"}(exports.TimeType||(exports.TimeType={}));class Time extends PkiObject{constructor(e={}){super(),this.type=pvutils__namespace.getParametersValue(e,"type",Time.defaultValues("type")),this.value=pvutils__namespace.getParametersValue(e,"value",Time.defaultValues("value")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"type":return 0;case"value":return new Date(0,0,0);default:return super.defaultValues(e)}}static schema(e={},t=!1){const a=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Choice({optional:t,value:[new asn1js__namespace.UTCTime({name:a.utcTimeName||""}),new asn1js__namespace.GeneralizedTime({name:a.generalTimeName||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$R);const t=asn1js__namespace.compareSchema(e,e,Time.schema({names:{utcTimeName:"utcTimeName",generalTimeName:"generalTimeName"}}));AsnError.assertSchema(t,this.className),"utcTimeName"in t.result&&(this.type=0,this.value=t.result.utcTimeName.toDate()),"generalTimeName"in t.result&&(this.type=1,this.value=t.result.generalTimeName.toDate())}toSchema(){return 0===this.type?new asn1js__namespace.UTCTime({valueDate:this.value}):1===this.type?new asn1js__namespace.GeneralizedTime({valueDate:this.value}):{}}toJSON(){return{type:this.type,value:this.value}}}Time.CLASS_NAME="Time";const TBS$4="tbs",VERSION$f="version",SERIAL_NUMBER$3="serialNumber",SIGNATURE$4="signature",ISSUER$2="issuer",NOT_BEFORE="notBefore",NOT_AFTER="notAfter",SUBJECT$1="subject",SUBJECT_PUBLIC_KEY_INFO="subjectPublicKeyInfo",ISSUER_UNIQUE_ID="issuerUniqueID",SUBJECT_UNIQUE_ID="subjectUniqueID",EXTENSIONS$2="extensions",SIGNATURE_ALGORITHM$5="signatureAlgorithm",SIGNATURE_VALUE$2="signatureValue",TBS_CERTIFICATE="tbsCertificate",TBS_CERTIFICATE_VERSION=`${TBS_CERTIFICATE}.version`,TBS_CERTIFICATE_SERIAL_NUMBER=`${TBS_CERTIFICATE}.serialNumber`,TBS_CERTIFICATE_SIGNATURE=`${TBS_CERTIFICATE}.signature`,TBS_CERTIFICATE_ISSUER=`${TBS_CERTIFICATE}.issuer`,TBS_CERTIFICATE_NOT_BEFORE=`${TBS_CERTIFICATE}.${NOT_BEFORE}`,TBS_CERTIFICATE_NOT_AFTER=`${TBS_CERTIFICATE}.${NOT_AFTER}`,TBS_CERTIFICATE_SUBJECT=`${TBS_CERTIFICATE}.subject`,TBS_CERTIFICATE_SUBJECT_PUBLIC_KEY=`${TBS_CERTIFICATE}.subjectPublicKeyInfo`,TBS_CERTIFICATE_ISSUER_UNIQUE_ID=`${TBS_CERTIFICATE}.issuerUniqueID`,TBS_CERTIFICATE_SUBJECT_UNIQUE_ID=`${TBS_CERTIFICATE}.subjectUniqueID`,TBS_CERTIFICATE_EXTENSIONS=`${TBS_CERTIFICATE}.extensions`,CLEAR_PROPS$Q=[TBS_CERTIFICATE,TBS_CERTIFICATE_VERSION,TBS_CERTIFICATE_SERIAL_NUMBER,TBS_CERTIFICATE_SIGNATURE,TBS_CERTIFICATE_ISSUER,TBS_CERTIFICATE_NOT_BEFORE,TBS_CERTIFICATE_NOT_AFTER,TBS_CERTIFICATE_SUBJECT,TBS_CERTIFICATE_SUBJECT_PUBLIC_KEY,TBS_CERTIFICATE_ISSUER_UNIQUE_ID,TBS_CERTIFICATE_SUBJECT_UNIQUE_ID,TBS_CERTIFICATE_EXTENSIONS,"signatureAlgorithm","signatureValue"];function tbsCertificate(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||TBS_CERTIFICATE,value:[new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Integer({name:t.tbsCertificateVersion||TBS_CERTIFICATE_VERSION})]}),new asn1js__namespace.Integer({name:t.tbsCertificateSerialNumber||TBS_CERTIFICATE_SERIAL_NUMBER}),AlgorithmIdentifier.schema(t.signature||{names:{blockName:TBS_CERTIFICATE_SIGNATURE}}),RelativeDistinguishedNames.schema(t.issuer||{names:{blockName:TBS_CERTIFICATE_ISSUER}}),new asn1js__namespace.Sequence({name:t.tbsCertificateValidity||"tbsCertificate.validity",value:[Time.schema(t.notBefore||{names:{utcTimeName:TBS_CERTIFICATE_NOT_BEFORE,generalTimeName:TBS_CERTIFICATE_NOT_BEFORE}}),Time.schema(t.notAfter||{names:{utcTimeName:TBS_CERTIFICATE_NOT_AFTER,generalTimeName:TBS_CERTIFICATE_NOT_AFTER}})]}),RelativeDistinguishedNames.schema(t.subject||{names:{blockName:TBS_CERTIFICATE_SUBJECT}}),PublicKeyInfo.schema(t.subjectPublicKeyInfo||{names:{blockName:TBS_CERTIFICATE_SUBJECT_PUBLIC_KEY}}),new asn1js__namespace.Primitive({name:t.tbsCertificateIssuerUniqueID||TBS_CERTIFICATE_ISSUER_UNIQUE_ID,optional:!0,idBlock:{tagClass:3,tagNumber:1}}),new asn1js__namespace.Primitive({name:t.tbsCertificateSubjectUniqueID||TBS_CERTIFICATE_SUBJECT_UNIQUE_ID,optional:!0,idBlock:{tagClass:3,tagNumber:2}}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:3},value:[Extensions.schema(t.extensions||{names:{blockName:TBS_CERTIFICATE_EXTENSIONS}})]})]})}class Certificate extends PkiObject{get tbs(){return pvtsutils__namespace.BufferSourceConverter.toArrayBuffer(this.tbsView)}set tbs(e){this.tbsView=new Uint8Array(e)}constructor(e={}){super(),this.tbsView=new Uint8Array(pvutils__namespace.getParametersValue(e,"tbs",Certificate.defaultValues("tbs"))),this.version=pvutils__namespace.getParametersValue(e,"version",Certificate.defaultValues("version")),this.serialNumber=pvutils__namespace.getParametersValue(e,"serialNumber",Certificate.defaultValues("serialNumber")),this.signature=pvutils__namespace.getParametersValue(e,"signature",Certificate.defaultValues("signature")),this.issuer=pvutils__namespace.getParametersValue(e,"issuer",Certificate.defaultValues("issuer")),this.notBefore=pvutils__namespace.getParametersValue(e,NOT_BEFORE,Certificate.defaultValues(NOT_BEFORE)),this.notAfter=pvutils__namespace.getParametersValue(e,NOT_AFTER,Certificate.defaultValues(NOT_AFTER)),this.subject=pvutils__namespace.getParametersValue(e,"subject",Certificate.defaultValues("subject")),this.subjectPublicKeyInfo=pvutils__namespace.getParametersValue(e,"subjectPublicKeyInfo",Certificate.defaultValues("subjectPublicKeyInfo")),"issuerUniqueID"in e&&(this.issuerUniqueID=pvutils__namespace.getParametersValue(e,"issuerUniqueID",Certificate.defaultValues("issuerUniqueID"))),"subjectUniqueID"in e&&(this.subjectUniqueID=pvutils__namespace.getParametersValue(e,"subjectUniqueID",Certificate.defaultValues("subjectUniqueID"))),"extensions"in e&&(this.extensions=pvutils__namespace.getParametersValue(e,"extensions",Certificate.defaultValues("extensions"))),this.signatureAlgorithm=pvutils__namespace.getParametersValue(e,"signatureAlgorithm",Certificate.defaultValues("signatureAlgorithm")),this.signatureValue=pvutils__namespace.getParametersValue(e,"signatureValue",Certificate.defaultValues("signatureValue")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"tbs":return EMPTY_BUFFER;case"version":return 0;case"serialNumber":return new asn1js__namespace.Integer;case"signature":return new AlgorithmIdentifier;case"issuer":return new RelativeDistinguishedNames;case NOT_BEFORE:case NOT_AFTER:return new Time;case"subject":return new RelativeDistinguishedNames;case"subjectPublicKeyInfo":return new PublicKeyInfo;case"issuerUniqueID":case"subjectUniqueID":return EMPTY_BUFFER;case"extensions":return[];case"signatureAlgorithm":return new AlgorithmIdentifier;case"signatureValue":return new asn1js__namespace.BitString;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[tbsCertificate(t.tbsCertificate),AlgorithmIdentifier.schema(t.signatureAlgorithm||{names:{blockName:"signatureAlgorithm"}}),new asn1js__namespace.BitString({name:t.signatureValue||"signatureValue"})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$Q);const t=asn1js__namespace.compareSchema(e,e,Certificate.schema({names:{tbsCertificate:{names:{extensions:{names:{extensions:TBS_CERTIFICATE_EXTENSIONS}}}}}}));AsnError.assertSchema(t,this.className),this.tbsView=t.result.tbsCertificate.valueBeforeDecodeView,TBS_CERTIFICATE_VERSION in t.result&&(this.version=t.result[TBS_CERTIFICATE_VERSION].valueBlock.valueDec),this.serialNumber=t.result[TBS_CERTIFICATE_SERIAL_NUMBER],this.signature=new AlgorithmIdentifier({schema:t.result[TBS_CERTIFICATE_SIGNATURE]}),this.issuer=new RelativeDistinguishedNames({schema:t.result[TBS_CERTIFICATE_ISSUER]}),this.notBefore=new Time({schema:t.result[TBS_CERTIFICATE_NOT_BEFORE]}),this.notAfter=new Time({schema:t.result[TBS_CERTIFICATE_NOT_AFTER]}),this.subject=new RelativeDistinguishedNames({schema:t.result[TBS_CERTIFICATE_SUBJECT]}),this.subjectPublicKeyInfo=new PublicKeyInfo({schema:t.result[TBS_CERTIFICATE_SUBJECT_PUBLIC_KEY]}),TBS_CERTIFICATE_ISSUER_UNIQUE_ID in t.result&&(this.issuerUniqueID=t.result[TBS_CERTIFICATE_ISSUER_UNIQUE_ID].valueBlock.valueHex),TBS_CERTIFICATE_SUBJECT_UNIQUE_ID in t.result&&(this.subjectUniqueID=t.result[TBS_CERTIFICATE_SUBJECT_UNIQUE_ID].valueBlock.valueHex),TBS_CERTIFICATE_EXTENSIONS in t.result&&(this.extensions=Array.from(t.result[TBS_CERTIFICATE_EXTENSIONS],(e=>new Extension({schema:e})))),this.signatureAlgorithm=new AlgorithmIdentifier({schema:t.result.signatureAlgorithm}),this.signatureValue=t.result.signatureValue}encodeTBS(){const e=[];return"version"in this&&this.version!==Certificate.defaultValues("version")&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Integer({value:this.version})]})),e.push(this.serialNumber),e.push(this.signature.toSchema()),e.push(this.issuer.toSchema()),e.push(new asn1js__namespace.Sequence({value:[this.notBefore.toSchema(),this.notAfter.toSchema()]})),e.push(this.subject.toSchema()),e.push(this.subjectPublicKeyInfo.toSchema()),this.issuerUniqueID&&e.push(new asn1js__namespace.Primitive({optional:!0,idBlock:{tagClass:3,tagNumber:1},valueHex:this.issuerUniqueID})),this.subjectUniqueID&&e.push(new asn1js__namespace.Primitive({optional:!0,idBlock:{tagClass:3,tagNumber:2},valueHex:this.subjectUniqueID})),this.extensions&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:3},value:[new asn1js__namespace.Sequence({value:Array.from(this.extensions,(e=>e.toSchema()))})]})),new asn1js__namespace.Sequence({value:e})}toSchema(e=!1){let t;if(!1===e){if(!this.tbsView.byteLength)return Certificate.schema().value[0];const e=asn1js__namespace.fromBER(this.tbsView);AsnError.assert(e,"TBS Certificate"),t=e.result}else t=this.encodeTBS();return new asn1js__namespace.Sequence({value:[t,this.signatureAlgorithm.toSchema(),this.signatureValue]})}toJSON(){const e={tbs:pvtsutils__namespace.Convert.ToHex(this.tbsView),version:this.version,serialNumber:this.serialNumber.toJSON(),signature:this.signature.toJSON(),issuer:this.issuer.toJSON(),notBefore:this.notBefore.toJSON(),notAfter:this.notAfter.toJSON(),subject:this.subject.toJSON(),subjectPublicKeyInfo:this.subjectPublicKeyInfo.toJSON(),signatureAlgorithm:this.signatureAlgorithm.toJSON(),signatureValue:this.signatureValue.toJSON()};return"version"in this&&this.version!==Certificate.defaultValues("version")&&(e.version=this.version),this.issuerUniqueID&&(e.issuerUniqueID=pvtsutils__namespace.Convert.ToHex(this.issuerUniqueID)),this.subjectUniqueID&&(e.subjectUniqueID=pvtsutils__namespace.Convert.ToHex(this.subjectUniqueID)),this.extensions&&(e.extensions=Array.from(this.extensions,(e=>e.toJSON()))),e}async getPublicKey(e,t=getCrypto(!0)){return t.getPublicKey(this.subjectPublicKeyInfo,this.signatureAlgorithm,e)}async getKeyHash(e="SHA-1",t=getCrypto(!0)){return t.digest({name:e},this.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHexView)}async sign(e,t="SHA-1",a=getCrypto(!0)){if(!e)throw new Error("Need to provide a private key for signing");const s=await a.getSignatureParameters(e,t),r=s.parameters;this.signature=s.signatureAlgorithm,this.signatureAlgorithm=s.signatureAlgorithm,this.tbsView=new Uint8Array(this.encodeTBS().toBER());const n=await a.signWithPrivateKey(this.tbsView,e,r);this.signatureValue=new asn1js__namespace.BitString({valueHex:n})}async verify(e,t=getCrypto(!0)){let a;if(e?a=e.subjectPublicKeyInfo:this.issuer.isEqual(this.subject)&&(a=this.subjectPublicKeyInfo),!(a instanceof PublicKeyInfo))throw new Error("Please provide issuer certificate as a parameter");return t.verifyWithPublicKey(this.tbsView,this.signatureValue,a,this.signatureAlgorithm)}}function checkCA(e,t=null){if(t&&e.issuer.isEqual(t.issuer)&&e.serialNumber.isEqual(t.serialNumber))return null;let a=!1;if(e.extensions)for(const t of e.extensions)if("2.5.29.19"===t.extnID&&t.parsedValue instanceof BasicConstraints&&t.parsedValue.cA){a=!0;break}return a?e:null}Certificate.CLASS_NAME="Certificate";const CERT_ID$1="certId",CERT_VALUE="certValue",PARSED_VALUE$4="parsedValue",CLEAR_PROPS$P=["certId",CERT_VALUE];class CertBag extends PkiObject{constructor(e={}){super(),this.certId=pvutils__namespace.getParametersValue(e,"certId",CertBag.defaultValues("certId")),this.certValue=pvutils__namespace.getParametersValue(e,CERT_VALUE,CertBag.defaultValues(CERT_VALUE)),"parsedValue"in e&&(this.parsedValue=pvutils__namespace.getParametersValue(e,"parsedValue",CertBag.defaultValues("parsedValue"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"certId":return"";case CERT_VALUE:return new asn1js__namespace.Any;case"parsedValue":return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"certId":return""===t;case CERT_VALUE:return t instanceof asn1js__namespace.Any;case"parsedValue":return t instanceof Object&&0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.id||"id"}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Any({name:t.value||"value"})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$P);const t=asn1js__namespace.compareSchema(e,e,CertBag.schema({names:{id:"certId",value:CERT_VALUE}}));AsnError.assertSchema(t,this.className),this.certId=t.result.certId.valueBlock.toString(),this.certValue=t.result.certValue;const a=this.certValue.valueBlock.valueHexView;switch(this.certId){case"1.2.840.113549.1.9.22.1":try{this.parsedValue=Certificate.fromBER(a)}catch(e){AttributeCertificateV2.fromBER(a)}break;case"1.2.840.113549.1.9.22.3":this.parsedValue=AttributeCertificateV2.fromBER(a);break;default:throw new Error(`Incorrect CERT_ID value in CertBag: ${this.certId}`)}}toSchema(){return"parsedValue"in this&&("acinfo"in this.parsedValue?this.certId="1.2.840.113549.1.9.22.3":this.certId="1.2.840.113549.1.9.22.1",this.certValue=new asn1js__namespace.OctetString({valueHex:this.parsedValue.toSchema().toBER(!1)})),new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.certId}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:["toSchema"in this.certValue?this.certValue.toSchema():this.certValue]})]})}toJSON(){return{certId:this.certId,certValue:this.certValue.toJSON()}}}CertBag.CLASS_NAME="CertBag";const USER_CERTIFICATE="userCertificate",REVOCATION_DATE="revocationDate",CRL_ENTRY_EXTENSIONS="crlEntryExtensions",CLEAR_PROPS$O=[USER_CERTIFICATE,REVOCATION_DATE,"crlEntryExtensions"];class RevokedCertificate extends PkiObject{constructor(e={}){super(),this.userCertificate=pvutils__namespace.getParametersValue(e,USER_CERTIFICATE,RevokedCertificate.defaultValues(USER_CERTIFICATE)),this.revocationDate=pvutils__namespace.getParametersValue(e,REVOCATION_DATE,RevokedCertificate.defaultValues(REVOCATION_DATE)),"crlEntryExtensions"in e&&(this.crlEntryExtensions=pvutils__namespace.getParametersValue(e,"crlEntryExtensions",RevokedCertificate.defaultValues("crlEntryExtensions"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case USER_CERTIFICATE:return new asn1js__namespace.Integer;case REVOCATION_DATE:return new Time;case"crlEntryExtensions":return new Extensions;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.userCertificate||USER_CERTIFICATE}),Time.schema({names:{utcTimeName:t.revocationDate||REVOCATION_DATE,generalTimeName:t.revocationDate||REVOCATION_DATE}}),Extensions.schema({names:{blockName:t.crlEntryExtensions||"crlEntryExtensions"}},!0)]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$O);const t=asn1js__namespace.compareSchema(e,e,RevokedCertificate.schema());AsnError.assertSchema(t,this.className),this.userCertificate=t.result.userCertificate,this.revocationDate=new Time({schema:t.result.revocationDate}),"crlEntryExtensions"in t.result&&(this.crlEntryExtensions=new Extensions({schema:t.result.crlEntryExtensions}))}toSchema(){const e=[this.userCertificate,this.revocationDate.toSchema()];return this.crlEntryExtensions&&e.push(this.crlEntryExtensions.toSchema()),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={userCertificate:this.userCertificate.toJSON(),revocationDate:this.revocationDate.toJSON()};return this.crlEntryExtensions&&(e.crlEntryExtensions=this.crlEntryExtensions.toJSON()),e}}RevokedCertificate.CLASS_NAME="RevokedCertificate";const TBS$3="tbs",VERSION$e="version",SIGNATURE$3="signature",ISSUER$1="issuer",THIS_UPDATE$1="thisUpdate",NEXT_UPDATE$1="nextUpdate",REVOKED_CERTIFICATES="revokedCertificates",CRL_EXTENSIONS="crlExtensions",SIGNATURE_ALGORITHM$4="signatureAlgorithm",SIGNATURE_VALUE$1="signatureValue",TBS_CERT_LIST="tbsCertList",TBS_CERT_LIST_VERSION="tbsCertList.version",TBS_CERT_LIST_SIGNATURE="tbsCertList.signature",TBS_CERT_LIST_ISSUER="tbsCertList.issuer",TBS_CERT_LIST_THIS_UPDATE="tbsCertList.thisUpdate",TBS_CERT_LIST_NEXT_UPDATE="tbsCertList.nextUpdate",TBS_CERT_LIST_REVOKED_CERTIFICATES="tbsCertList.revokedCertificates",TBS_CERT_LIST_EXTENSIONS="tbsCertList.extensions",CLEAR_PROPS$N=["tbsCertList","tbsCertList.version","tbsCertList.signature","tbsCertList.issuer","tbsCertList.thisUpdate","tbsCertList.nextUpdate","tbsCertList.revokedCertificates","tbsCertList.extensions","signatureAlgorithm","signatureValue"];function tbsCertList(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"tbsCertList",value:[new asn1js__namespace.Integer({optional:!0,name:t.tbsCertListVersion||"tbsCertList.version",value:2}),AlgorithmIdentifier.schema(t.signature||{names:{blockName:"tbsCertList.signature"}}),RelativeDistinguishedNames.schema(t.issuer||{names:{blockName:"tbsCertList.issuer"}}),Time.schema(t.tbsCertListThisUpdate||{names:{utcTimeName:"tbsCertList.thisUpdate",generalTimeName:"tbsCertList.thisUpdate"}}),Time.schema(t.tbsCertListNextUpdate||{names:{utcTimeName:"tbsCertList.nextUpdate",generalTimeName:"tbsCertList.nextUpdate"}},!0),new asn1js__namespace.Sequence({optional:!0,value:[new asn1js__namespace.Repeated({name:t.tbsCertListRevokedCertificates||"tbsCertList.revokedCertificates",value:new asn1js__namespace.Sequence({value:[new asn1js__namespace.Integer,Time.schema(),Extensions.schema({},!0)]})})]}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[Extensions.schema(t.crlExtensions||{names:{blockName:"tbsCertList.extensions"}})]})]})}const WELL_KNOWN_EXTENSIONS=["2.5.29.35","2.5.29.18","2.5.29.20","2.5.29.27","2.5.29.28","2.5.29.46","1.3.6.1.5.5.7.1.1","2.5.29.21","2.5.29.24","2.5.29.29"];class CertificateRevocationList extends PkiObject{get tbs(){return pvtsutils__namespace.BufferSourceConverter.toArrayBuffer(this.tbsView)}set tbs(e){this.tbsView=new Uint8Array(e)}constructor(e={}){super(),this.tbsView=new Uint8Array(pvutils__namespace.getParametersValue(e,"tbs",CertificateRevocationList.defaultValues("tbs"))),this.version=pvutils__namespace.getParametersValue(e,"version",CertificateRevocationList.defaultValues("version")),this.signature=pvutils__namespace.getParametersValue(e,"signature",CertificateRevocationList.defaultValues("signature")),this.issuer=pvutils__namespace.getParametersValue(e,"issuer",CertificateRevocationList.defaultValues("issuer")),this.thisUpdate=pvutils__namespace.getParametersValue(e,"thisUpdate",CertificateRevocationList.defaultValues("thisUpdate")),"nextUpdate"in e&&(this.nextUpdate=pvutils__namespace.getParametersValue(e,"nextUpdate",CertificateRevocationList.defaultValues("nextUpdate"))),REVOKED_CERTIFICATES in e&&(this.revokedCertificates=pvutils__namespace.getParametersValue(e,REVOKED_CERTIFICATES,CertificateRevocationList.defaultValues(REVOKED_CERTIFICATES))),CRL_EXTENSIONS in e&&(this.crlExtensions=pvutils__namespace.getParametersValue(e,CRL_EXTENSIONS,CertificateRevocationList.defaultValues(CRL_EXTENSIONS))),this.signatureAlgorithm=pvutils__namespace.getParametersValue(e,"signatureAlgorithm",CertificateRevocationList.defaultValues("signatureAlgorithm")),this.signatureValue=pvutils__namespace.getParametersValue(e,"signatureValue",CertificateRevocationList.defaultValues("signatureValue")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"tbs":return EMPTY_BUFFER;case"version":return 0;case"signature":return new AlgorithmIdentifier;case"issuer":return new RelativeDistinguishedNames;case"thisUpdate":case"nextUpdate":return new Time;case REVOKED_CERTIFICATES:return[];case CRL_EXTENSIONS:return new Extensions;case"signatureAlgorithm":return new AlgorithmIdentifier;case"signatureValue":return new asn1js__namespace.BitString;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"CertificateList",value:[tbsCertList(e),AlgorithmIdentifier.schema(t.signatureAlgorithm||{names:{blockName:"signatureAlgorithm"}}),new asn1js__namespace.BitString({name:t.signatureValue||"signatureValue"})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$N);const t=asn1js__namespace.compareSchema(e,e,CertificateRevocationList.schema());AsnError.assertSchema(t,this.className),this.tbsView=t.result.tbsCertList.valueBeforeDecodeView,"tbsCertList.version"in t.result&&(this.version=t.result["tbsCertList.version"].valueBlock.valueDec),this.signature=new AlgorithmIdentifier({schema:t.result["tbsCertList.signature"]}),this.issuer=new RelativeDistinguishedNames({schema:t.result["tbsCertList.issuer"]}),this.thisUpdate=new Time({schema:t.result["tbsCertList.thisUpdate"]}),"tbsCertList.nextUpdate"in t.result&&(this.nextUpdate=new Time({schema:t.result["tbsCertList.nextUpdate"]})),"tbsCertList.revokedCertificates"in t.result&&(this.revokedCertificates=Array.from(t.result["tbsCertList.revokedCertificates"],(e=>new RevokedCertificate({schema:e})))),"tbsCertList.extensions"in t.result&&(this.crlExtensions=new Extensions({schema:t.result["tbsCertList.extensions"]})),this.signatureAlgorithm=new AlgorithmIdentifier({schema:t.result.signatureAlgorithm}),this.signatureValue=t.result.signatureValue}encodeTBS(){const e=[];return this.version!==CertificateRevocationList.defaultValues("version")&&e.push(new asn1js__namespace.Integer({value:this.version})),e.push(this.signature.toSchema()),e.push(this.issuer.toSchema()),e.push(this.thisUpdate.toSchema()),this.nextUpdate&&e.push(this.nextUpdate.toSchema()),this.revokedCertificates&&e.push(new asn1js__namespace.Sequence({value:Array.from(this.revokedCertificates,(e=>e.toSchema()))})),this.crlExtensions&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[this.crlExtensions.toSchema()]})),new asn1js__namespace.Sequence({value:e})}toSchema(e=!1){let t;if(e)t=this.encodeTBS();else{if(!this.tbsView.byteLength)return CertificateRevocationList.schema();const e=asn1js__namespace.fromBER(this.tbsView);AsnError.assert(e,"TBS Certificate Revocation List"),t=e.result}return new asn1js__namespace.Sequence({value:[t,this.signatureAlgorithm.toSchema(),this.signatureValue]})}toJSON(){const e={tbs:pvtsutils__namespace.Convert.ToHex(this.tbsView),version:this.version,signature:this.signature.toJSON(),issuer:this.issuer.toJSON(),thisUpdate:this.thisUpdate.toJSON(),signatureAlgorithm:this.signatureAlgorithm.toJSON(),signatureValue:this.signatureValue.toJSON()};return this.version!==CertificateRevocationList.defaultValues("version")&&(e.version=this.version),this.nextUpdate&&(e.nextUpdate=this.nextUpdate.toJSON()),this.revokedCertificates&&(e.revokedCertificates=Array.from(this.revokedCertificates,(e=>e.toJSON()))),this.crlExtensions&&(e.crlExtensions=this.crlExtensions.toJSON()),e}isCertificateRevoked(e){if(!this.issuer.isEqual(e.issuer))return!1;if(!this.revokedCertificates)return!1;for(const t of this.revokedCertificates)if(t.userCertificate.isEqual(e.serialNumber))return!0;return!1}async sign(e,t="SHA-1",a=getCrypto(!0)){if(!e)throw new Error("Need to provide a private key for signing");const s=await a.getSignatureParameters(e,t),{parameters:r}=s;this.signature=s.signatureAlgorithm,this.signatureAlgorithm=s.signatureAlgorithm,this.tbsView=new Uint8Array(this.encodeTBS().toBER());const n=await a.signWithPrivateKey(this.tbsView,e,r);this.signatureValue=new asn1js__namespace.BitString({valueHex:n})}async verify(e={},t=getCrypto(!0)){let a;if(e.issuerCertificate&&(a=e.issuerCertificate.subjectPublicKeyInfo,!this.issuer.isEqual(e.issuerCertificate.subject)))return!1;if(e.publicKeyInfo&&(a=e.publicKeyInfo),!a)throw new Error("Issuer's certificate must be provided as an input parameter");if(this.crlExtensions)for(const e of this.crlExtensions.extensions)if(e.critical&&!WELL_KNOWN_EXTENSIONS.includes(e.extnID))return!1;return t.verifyWithPublicKey(this.tbsView,this.signatureValue,a,this.signatureAlgorithm)}}CertificateRevocationList.CLASS_NAME="CertificateRevocationList";const CRL_ID="crlId",CRL_VALUE="crlValue",PARSED_VALUE$3="parsedValue",CLEAR_PROPS$M=[CRL_ID,CRL_VALUE];class CRLBag extends PkiObject{constructor(e={}){super(),this.crlId=pvutils__namespace.getParametersValue(e,CRL_ID,CRLBag.defaultValues(CRL_ID)),this.crlValue=pvutils__namespace.getParametersValue(e,CRL_VALUE,CRLBag.defaultValues(CRL_VALUE)),"parsedValue"in e&&(this.parsedValue=pvutils__namespace.getParametersValue(e,"parsedValue",CRLBag.defaultValues("parsedValue"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case CRL_ID:return"";case CRL_VALUE:return new asn1js__namespace.Any;case"parsedValue":return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case CRL_ID:return""===t;case CRL_VALUE:return t instanceof asn1js__namespace.Any;case"parsedValue":return t instanceof Object&&0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.id||"id"}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Any({name:t.value||"value"})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$M);const t=asn1js__namespace.compareSchema(e,e,CRLBag.schema({names:{id:CRL_ID,value:CRL_VALUE}}));if(AsnError.assertSchema(t,this.className),this.crlId=t.result.crlId.valueBlock.toString(),this.crlValue=t.result.crlValue,this.crlId!==id_CRLBag_X509CRL)throw new Error(`Incorrect CRL_ID value in CRLBag: ${this.crlId}`);this.parsedValue=CertificateRevocationList.fromBER(this.certValue.valueBlock.valueHex)}toSchema(){return this.parsedValue&&(this.crlId=id_CRLBag_X509CRL,this.crlValue=new asn1js__namespace.OctetString({valueHex:this.parsedValue.toSchema().toBER(!1)})),new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.crlId}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[this.crlValue.toSchema()]})]})}toJSON(){return{crlId:this.crlId,crlValue:this.crlValue.toJSON()}}}CRLBag.CLASS_NAME="CRLBag";const VERSION$d="version",ENCRYPTED_CONTENT_INFO$1="encryptedContentInfo",UNPROTECTED_ATTRS$1="unprotectedAttrs",CLEAR_PROPS$L=["version","encryptedContentInfo","unprotectedAttrs"];class EncryptedData extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",EncryptedData.defaultValues("version")),this.encryptedContentInfo=pvutils__namespace.getParametersValue(e,"encryptedContentInfo",EncryptedData.defaultValues("encryptedContentInfo")),"unprotectedAttrs"in e&&(this.unprotectedAttrs=pvutils__namespace.getParametersValue(e,"unprotectedAttrs",EncryptedData.defaultValues("unprotectedAttrs"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case"encryptedContentInfo":return new EncryptedContentInfo;case"unprotectedAttrs":return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"version":return 0===t;case"encryptedContentInfo":return EncryptedContentInfo.compareWithDefault("contentType",t.contentType)&&EncryptedContentInfo.compareWithDefault("contentEncryptionAlgorithm",t.contentEncryptionAlgorithm)&&EncryptedContentInfo.compareWithDefault("encryptedContent",t.encryptedContent);case"unprotectedAttrs":return 0===t.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||""}),EncryptedContentInfo.schema(t.encryptedContentInfo||{}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.Repeated({name:t.unprotectedAttrs||"",value:Attribute.schema()})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$L);const t=asn1js__namespace.compareSchema(e,e,EncryptedData.schema({names:{version:"version",encryptedContentInfo:{names:{blockName:"encryptedContentInfo"}},unprotectedAttrs:"unprotectedAttrs"}}));AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,this.encryptedContentInfo=new EncryptedContentInfo({schema:t.result.encryptedContentInfo}),"unprotectedAttrs"in t.result&&(this.unprotectedAttrs=Array.from(t.result.unprotectedAttrs,(e=>new Attribute({schema:e}))))}toSchema(){const e=[];return e.push(new asn1js__namespace.Integer({value:this.version})),e.push(this.encryptedContentInfo.toSchema()),this.unprotectedAttrs&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:Array.from(this.unprotectedAttrs,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={version:this.version,encryptedContentInfo:this.encryptedContentInfo.toJSON()};return this.unprotectedAttrs&&(e.unprotectedAttrs=Array.from(this.unprotectedAttrs,(e=>e.toJSON()))),e}async encrypt(e,t=getCrypto(!0)){ArgumentError.assert(e,"parameters","object");const a={...e,contentType:"1.2.840.113549.1.7.1"};this.encryptedContentInfo=await t.encryptEncryptedContentInfo(a)}async decrypt(e,t=getCrypto(!0)){ArgumentError.assert(e,"parameters","object");const a={...e,encryptedContentInfo:this.encryptedContentInfo};return t.decryptEncryptedContentInfo(a)}}EncryptedData.CLASS_NAME="EncryptedData";const ENCRYPTION_ALGORITHM="encryptionAlgorithm",ENCRYPTED_DATA="encryptedData",PARSED_VALUE$2="parsedValue",CLEAR_PROPS$K=[ENCRYPTION_ALGORITHM,ENCRYPTED_DATA];class PKCS8ShroudedKeyBag extends PkiObject{constructor(e={}){super(),this.encryptionAlgorithm=pvutils__namespace.getParametersValue(e,ENCRYPTION_ALGORITHM,PKCS8ShroudedKeyBag.defaultValues(ENCRYPTION_ALGORITHM)),this.encryptedData=pvutils__namespace.getParametersValue(e,ENCRYPTED_DATA,PKCS8ShroudedKeyBag.defaultValues(ENCRYPTED_DATA)),"parsedValue"in e&&(this.parsedValue=pvutils__namespace.getParametersValue(e,"parsedValue",PKCS8ShroudedKeyBag.defaultValues("parsedValue"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case ENCRYPTION_ALGORITHM:return new AlgorithmIdentifier;case ENCRYPTED_DATA:return new asn1js__namespace.OctetString;case"parsedValue":return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case ENCRYPTION_ALGORITHM:return AlgorithmIdentifier.compareWithDefault("algorithmId",t.algorithmId)&&"algorithmParams"in t==!1;case ENCRYPTED_DATA:return t.isEqual(PKCS8ShroudedKeyBag.defaultValues(e));case"parsedValue":return t instanceof Object&&0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[AlgorithmIdentifier.schema(t.encryptionAlgorithm||{names:{blockName:ENCRYPTION_ALGORITHM}}),new asn1js__namespace.Choice({value:[new asn1js__namespace.OctetString({name:t.encryptedData||ENCRYPTED_DATA}),new asn1js__namespace.OctetString({idBlock:{isConstructed:!0},name:t.encryptedData||ENCRYPTED_DATA})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$K);const t=asn1js__namespace.compareSchema(e,e,PKCS8ShroudedKeyBag.schema({names:{encryptionAlgorithm:{names:{blockName:ENCRYPTION_ALGORITHM}},encryptedData:ENCRYPTED_DATA}}));AsnError.assertSchema(t,this.className),this.encryptionAlgorithm=new AlgorithmIdentifier({schema:t.result.encryptionAlgorithm}),this.encryptedData=t.result.encryptedData}toSchema(){return new asn1js__namespace.Sequence({value:[this.encryptionAlgorithm.toSchema(),this.encryptedData]})}toJSON(){return{encryptionAlgorithm:this.encryptionAlgorithm.toJSON(),encryptedData:this.encryptedData.toJSON()}}async parseInternalValues(e,t=getCrypto(!0)){const a=new EncryptedData({encryptedContentInfo:new EncryptedContentInfo({contentEncryptionAlgorithm:this.encryptionAlgorithm,encryptedContent:this.encryptedData})}),s=await a.decrypt(e,t);this.parsedValue=PrivateKeyInfo.fromBER(s)}async makeInternalValues(e,t=getCrypto(!0)){if(!this.parsedValue)throw new Error('Please initialize "parsedValue" first');const a=new EncryptedData,s={...e,contentToEncrypt:this.parsedValue.toSchema().toBER(!1)};if(await a.encrypt(s,t),!a.encryptedContentInfo.encryptedContent)throw new Error("The filed `encryptedContent` in EncryptedContentInfo is empty");this.encryptionAlgorithm=a.encryptedContentInfo.contentEncryptionAlgorithm,this.encryptedData=a.encryptedContentInfo.encryptedContent}}PKCS8ShroudedKeyBag.CLASS_NAME="PKCS8ShroudedKeyBag";const SECRET_TYPE_ID="secretTypeId",SECRET_VALUE="secretValue",CLEAR_PROPS$J=["secretTypeId",SECRET_VALUE];class SecretBag extends PkiObject{constructor(e={}){super(),this.secretTypeId=pvutils__namespace.getParametersValue(e,"secretTypeId",SecretBag.defaultValues("secretTypeId")),this.secretValue=pvutils__namespace.getParametersValue(e,SECRET_VALUE,SecretBag.defaultValues(SECRET_VALUE)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"secretTypeId":return"";case SECRET_VALUE:return new asn1js__namespace.Any;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"secretTypeId":return""===t;case SECRET_VALUE:return t instanceof asn1js__namespace.Any;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.id||"id"}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Any({name:t.value||"value"})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$J);const t=asn1js__namespace.compareSchema(e,e,SecretBag.schema({names:{id:"secretTypeId",value:SECRET_VALUE}}));AsnError.assertSchema(t,this.className),this.secretTypeId=t.result.secretTypeId.valueBlock.toString(),this.secretValue=t.result.secretValue}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.secretTypeId}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[this.secretValue.toSchema()]})]})}toJSON(){return{secretTypeId:this.secretTypeId,secretValue:this.secretValue.toJSON()}}}SecretBag.CLASS_NAME="SecretBag";class SafeBagValueFactory{static getItems(){return this.items||(this.items={},SafeBagValueFactory.register("1.2.840.113549.1.12.10.1.1",PrivateKeyInfo),SafeBagValueFactory.register("1.2.840.113549.1.12.10.1.2",PKCS8ShroudedKeyBag),SafeBagValueFactory.register("1.2.840.113549.1.12.10.1.3",CertBag),SafeBagValueFactory.register("1.2.840.113549.1.12.10.1.4",CRLBag),SafeBagValueFactory.register("1.2.840.113549.1.12.10.1.5",SecretBag),SafeBagValueFactory.register("1.2.840.113549.1.12.10.1.6",SafeContents)),this.items}static register(e,t){this.getItems()[e]=t}static find(e){return this.getItems()[e]||null}}const BAG_ID="bagId",BAG_VALUE="bagValue",BAG_ATTRIBUTES="bagAttributes",CLEAR_PROPS$I=[BAG_ID,BAG_VALUE,BAG_ATTRIBUTES];class SafeBag extends PkiObject{constructor(e={}){super(),this.bagId=pvutils__namespace.getParametersValue(e,BAG_ID,SafeBag.defaultValues(BAG_ID)),this.bagValue=pvutils__namespace.getParametersValue(e,BAG_VALUE,SafeBag.defaultValues(BAG_VALUE)),BAG_ATTRIBUTES in e&&(this.bagAttributes=pvutils__namespace.getParametersValue(e,BAG_ATTRIBUTES,SafeBag.defaultValues(BAG_ATTRIBUTES))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case BAG_ID:return"";case BAG_VALUE:return new asn1js__namespace.Any;case BAG_ATTRIBUTES:return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case BAG_ID:return""===t;case BAG_VALUE:return t instanceof asn1js__namespace.Any;case BAG_ATTRIBUTES:return 0===t.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.bagId||BAG_ID}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Any({name:t.bagValue||BAG_VALUE})]}),new asn1js__namespace.Set({optional:!0,value:[new asn1js__namespace.Repeated({name:t.bagAttributes||BAG_ATTRIBUTES,value:Attribute.schema()})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$I);const t=asn1js__namespace.compareSchema(e,e,SafeBag.schema({names:{bagId:BAG_ID,bagValue:BAG_VALUE,bagAttributes:BAG_ATTRIBUTES}}));AsnError.assertSchema(t,this.className),this.bagId=t.result.bagId.valueBlock.toString();const a=SafeBagValueFactory.find(this.bagId);if(!a)throw new Error(`Invalid BAG_ID for SafeBag: ${this.bagId}`);this.bagValue=new a({schema:t.result.bagValue}),BAG_ATTRIBUTES in t.result&&(this.bagAttributes=Array.from(t.result.bagAttributes,(e=>new Attribute({schema:e}))))}toSchema(){const e=[new asn1js__namespace.ObjectIdentifier({value:this.bagId}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[this.bagValue.toSchema()]})];return this.bagAttributes&&e.push(new asn1js__namespace.Set({value:Array.from(this.bagAttributes,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={bagId:this.bagId,bagValue:this.bagValue.toJSON()};return this.bagAttributes&&(e.bagAttributes=Array.from(this.bagAttributes,(e=>e.toJSON()))),e}}SafeBag.CLASS_NAME="SafeBag";const SAFE_BUGS="safeBags";class SafeContents extends PkiObject{constructor(e={}){super(),this.safeBags=pvutils__namespace.getParametersValue(e,SAFE_BUGS,SafeContents.defaultValues(SAFE_BUGS)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return e===SAFE_BUGS?[]:super.defaultValues(e)}static compareWithDefault(e,t){return e===SAFE_BUGS?0===t.length:super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.safeBags||"",value:SafeBag.schema()})]})}fromSchema(e){pvutils__namespace.clearProps(e,[SAFE_BUGS]);const t=asn1js__namespace.compareSchema(e,e,SafeContents.schema({names:{safeBags:SAFE_BUGS}}));AsnError.assertSchema(t,this.className),this.safeBags=Array.from(t.result.safeBags,(e=>new SafeBag({schema:e})))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.safeBags,(e=>e.toSchema()))})}toJSON(){return{safeBags:Array.from(this.safeBags,(e=>e.toJSON()))}}}SafeContents.CLASS_NAME="SafeContents";const OTHER_CERT_FORMAT="otherCertFormat",OTHER_CERT="otherCert",CLEAR_PROPS$H=["otherCertFormat",OTHER_CERT];class OtherCertificateFormat extends PkiObject{constructor(e={}){super(),this.otherCertFormat=pvutils__namespace.getParametersValue(e,"otherCertFormat",OtherCertificateFormat.defaultValues("otherCertFormat")),this.otherCert=pvutils__namespace.getParametersValue(e,OTHER_CERT,OtherCertificateFormat.defaultValues(OTHER_CERT)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"otherCertFormat":return"";case OTHER_CERT:return new asn1js__namespace.Any;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.otherCertFormat||"otherCertFormat"}),new asn1js__namespace.Any({name:t.otherCert||OTHER_CERT})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$H);const t=asn1js__namespace.compareSchema(e,e,OtherCertificateFormat.schema());AsnError.assertSchema(t,this.className),this.otherCertFormat=t.result.otherCertFormat.valueBlock.toString(),this.otherCert=t.result.otherCert}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.otherCertFormat}),this.otherCert]})}toJSON(){const e={otherCertFormat:this.otherCertFormat};return this.otherCert instanceof asn1js__namespace.Any||(e.otherCert=this.otherCert.toJSON()),e}}const CERTIFICATES$1="certificates",CLEAR_PROPS$G=["certificates"];class CertificateSet extends PkiObject{constructor(e={}){super(),this.certificates=pvutils__namespace.getParametersValue(e,"certificates",CertificateSet.defaultValues("certificates")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return"certificates"===e?[]:super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Set({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.certificates||"certificates",value:new asn1js__namespace.Choice({value:[Certificate.schema(),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Any]}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.Sequence]}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:2},value:AttributeCertificateV2.schema().valueBlock.value}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:3},value:OtherCertificateFormat.schema().valueBlock.value})]})})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$G);const t=asn1js__namespace.compareSchema(e,e,CertificateSet.schema());AsnError.assertSchema(t,this.className),this.certificates=Array.from(t.result.certificates||[],(e=>{const t=e.idBlock.tagNumber;if(1===e.idBlock.tagClass)return new Certificate({schema:e});const a=new asn1js__namespace.Sequence({value:e.valueBlock.value});switch(t){case 1:return 1===a.valueBlock.value[0].valueBlock.value[0].valueBlock.valueDec?new AttributeCertificateV2({schema:a}):new AttributeCertificateV1({schema:a});case 2:return new AttributeCertificateV2({schema:a});case 3:return new OtherCertificateFormat({schema:a})}return e}))}toSchema(){return new asn1js__namespace.Set({value:Array.from(this.certificates,(e=>{switch(!0){case e instanceof Certificate:return e.toSchema();case e instanceof AttributeCertificateV1:return new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:e.toSchema().valueBlock.value});case e instanceof AttributeCertificateV2:return new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:2},value:e.toSchema().valueBlock.value});case e instanceof OtherCertificateFormat:return new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:3},value:e.toSchema().valueBlock.value})}return e.toSchema()}))})}toJSON(){return{certificates:Array.from(this.certificates,(e=>e.toJSON()))}}}CertificateSet.CLASS_NAME="CertificateSet";const OTHER_REV_INFO_FORMAT="otherRevInfoFormat",OTHER_REV_INFO="otherRevInfo",CLEAR_PROPS$F=["otherRevInfoFormat","otherRevInfo"];class OtherRevocationInfoFormat extends PkiObject{constructor(e={}){super(),this.otherRevInfoFormat=pvutils__namespace.getParametersValue(e,"otherRevInfoFormat",OtherRevocationInfoFormat.defaultValues("otherRevInfoFormat")),this.otherRevInfo=pvutils__namespace.getParametersValue(e,"otherRevInfo",OtherRevocationInfoFormat.defaultValues("otherRevInfo")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"otherRevInfoFormat":return"";case"otherRevInfo":return new asn1js__namespace.Any;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.otherRevInfoFormat||"otherRevInfoFormat"}),new asn1js__namespace.Any({name:t.otherRevInfo||"otherRevInfo"})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$F);const t=asn1js__namespace.compareSchema(e,e,OtherRevocationInfoFormat.schema());AsnError.assertSchema(t,this.className),this.otherRevInfoFormat=t.result.otherRevInfoFormat.valueBlock.toString(),this.otherRevInfo=t.result.otherRevInfo}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.otherRevInfoFormat}),this.otherRevInfo]})}toJSON(){const e={otherRevInfoFormat:this.otherRevInfoFormat};return this.otherRevInfo instanceof asn1js__namespace.Any||(e.otherRevInfo=this.otherRevInfo.toJSON()),e}}OtherRevocationInfoFormat.CLASS_NAME="OtherRevocationInfoFormat";const CRLS$3="crls",OTHER_REVOCATION_INFOS="otherRevocationInfos",CLEAR_PROPS$E=["crls"];class RevocationInfoChoices extends PkiObject{constructor(e={}){super(),this.crls=pvutils__namespace.getParametersValue(e,"crls",RevocationInfoChoices.defaultValues("crls")),this.otherRevocationInfos=pvutils__namespace.getParametersValue(e,"otherRevocationInfos",RevocationInfoChoices.defaultValues("otherRevocationInfos")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"crls":case"otherRevocationInfos":return[];default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Set({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.crls||"",value:new asn1js__namespace.Choice({value:[CertificateRevocationList.schema(),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.ObjectIdentifier,new asn1js__namespace.Any]})]})})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$E);const t=asn1js__namespace.compareSchema(e,e,RevocationInfoChoices.schema({names:{crls:"crls"}}));if(AsnError.assertSchema(t,this.className),t.result.crls)for(const e of t.result.crls)1===e.idBlock.tagClass?this.crls.push(new CertificateRevocationList({schema:e})):this.otherRevocationInfos.push(new OtherRevocationInfoFormat({schema:e}))}toSchema(){const e=[];return e.push(...Array.from(this.crls,(e=>e.toSchema()))),e.push(...Array.from(this.otherRevocationInfos,(e=>{const t=e.toSchema();return t.idBlock.tagClass=3,t.idBlock.tagNumber=1,t}))),new asn1js__namespace.Set({value:e})}toJSON(){return{crls:Array.from(this.crls,(e=>e.toJSON())),otherRevocationInfos:Array.from(this.otherRevocationInfos,(e=>e.toJSON()))}}}RevocationInfoChoices.CLASS_NAME="RevocationInfoChoices";const CERTS$3="certs",CRLS$2="crls",CLEAR_PROPS$D=["certs","crls"];class OriginatorInfo extends PkiObject{constructor(e={}){super(),this.crls=pvutils__namespace.getParametersValue(e,"crls",OriginatorInfo.defaultValues("crls")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"certs":return new CertificateSet;case"crls":return new RevocationInfoChoices;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"certs":return 0===t.certificates.length;case"crls":return 0===t.crls.length&&0===t.otherRevocationInfos.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Constructed({name:t.certs||"",optional:!0,idBlock:{tagClass:3,tagNumber:0},value:CertificateSet.schema().valueBlock.value}),new asn1js__namespace.Constructed({name:t.crls||"",optional:!0,idBlock:{tagClass:3,tagNumber:1},value:RevocationInfoChoices.schema().valueBlock.value})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$D);const t=asn1js__namespace.compareSchema(e,e,OriginatorInfo.schema({names:{certs:"certs",crls:"crls"}}));AsnError.assertSchema(t,this.className),"certs"in t.result&&(this.certs=new CertificateSet({schema:new asn1js__namespace.Set({value:t.result.certs.valueBlock.value})})),"crls"in t.result&&(this.crls=new RevocationInfoChoices({schema:new asn1js__namespace.Set({value:t.result.crls.valueBlock.value})}))}toSchema(){const e=[];return this.certs&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:this.certs.toSchema().valueBlock.value})),this.crls&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:this.crls.toSchema().valueBlock.value})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={};return this.certs&&(e.certs=this.certs.toJSON()),this.crls&&(e.crls=this.crls.toJSON()),e}}OriginatorInfo.CLASS_NAME="OriginatorInfo";const ISSUER="issuer",SERIAL_NUMBER$2="serialNumber",CLEAR_PROPS$C=[ISSUER,"serialNumber"];class IssuerAndSerialNumber extends PkiObject{constructor(e={}){super(),this.issuer=pvutils__namespace.getParametersValue(e,ISSUER,IssuerAndSerialNumber.defaultValues(ISSUER)),this.serialNumber=pvutils__namespace.getParametersValue(e,"serialNumber",IssuerAndSerialNumber.defaultValues("serialNumber")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case ISSUER:return new RelativeDistinguishedNames;case"serialNumber":return new asn1js__namespace.Integer;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[RelativeDistinguishedNames.schema(t.issuer||{}),new asn1js__namespace.Integer({name:t.serialNumber||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$C);const t=asn1js__namespace.compareSchema(e,e,IssuerAndSerialNumber.schema({names:{issuer:{names:{blockName:ISSUER}},serialNumber:"serialNumber"}}));AsnError.assertSchema(t,this.className),this.issuer=new RelativeDistinguishedNames({schema:t.result.issuer}),this.serialNumber=t.result.serialNumber}toSchema(){return new asn1js__namespace.Sequence({value:[this.issuer.toSchema(),this.serialNumber]})}toJSON(){return{issuer:this.issuer.toJSON(),serialNumber:this.serialNumber.toJSON()}}}IssuerAndSerialNumber.CLASS_NAME="IssuerAndSerialNumber";const VARIANT$3="variant",VALUE$3="value",CLEAR_PROPS$B=["blockName"];class RecipientIdentifier extends PkiObject{constructor(e={}){super(),this.variant=pvutils__namespace.getParametersValue(e,"variant",RecipientIdentifier.defaultValues("variant")),"value"in e&&(this.value=pvutils__namespace.getParametersValue(e,"value",RecipientIdentifier.defaultValues("value"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"variant":return-1;case"value":return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"variant":return-1===t;case"value":return 0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Choice({value:[IssuerAndSerialNumber.schema({names:{blockName:t.blockName||""}}),new asn1js__namespace.Primitive({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:0}})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$B);const t=asn1js__namespace.compareSchema(e,e,RecipientIdentifier.schema({names:{blockName:"blockName"}}));AsnError.assertSchema(t,this.className),1===t.result.blockName.idBlock.tagClass?(this.variant=1,this.value=new IssuerAndSerialNumber({schema:t.result.blockName})):(this.variant=2,this.value=new asn1js__namespace.OctetString({valueHex:t.result.blockName.valueBlock.valueHex}))}toSchema(){switch(this.variant){case 1:if(!(this.value instanceof IssuerAndSerialNumber))throw new Error("Incorrect type of RecipientIdentifier.value. It should be IssuerAndSerialNumber.");return this.value.toSchema();case 2:if(!(this.value instanceof asn1js__namespace.OctetString))throw new Error("Incorrect type of RecipientIdentifier.value. It should be ASN.1 OctetString.");return new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:0},valueHex:this.value.valueBlock.valueHexView});default:return new asn1js__namespace.Any}}toJSON(){const e={variant:this.variant};return 1!==this.variant&&2!==this.variant||!this.value||(e.value=this.value.toJSON()),e}}RecipientIdentifier.CLASS_NAME="RecipientIdentifier";const VERSION$c="version",RID$1="rid",KEY_ENCRYPTION_ALGORITHM$3="keyEncryptionAlgorithm",ENCRYPTED_KEY$3="encryptedKey",RECIPIENT_CERTIFICATE$1="recipientCertificate",CLEAR_PROPS$A=["version","rid","keyEncryptionAlgorithm","encryptedKey"];class KeyTransRecipientInfo extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",KeyTransRecipientInfo.defaultValues("version")),this.rid=pvutils__namespace.getParametersValue(e,"rid",KeyTransRecipientInfo.defaultValues("rid")),this.keyEncryptionAlgorithm=pvutils__namespace.getParametersValue(e,"keyEncryptionAlgorithm",KeyTransRecipientInfo.defaultValues("keyEncryptionAlgorithm")),this.encryptedKey=pvutils__namespace.getParametersValue(e,"encryptedKey",KeyTransRecipientInfo.defaultValues("encryptedKey")),this.recipientCertificate=pvutils__namespace.getParametersValue(e,"recipientCertificate",KeyTransRecipientInfo.defaultValues("recipientCertificate")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return-1;case"rid":return{};case"keyEncryptionAlgorithm":return new AlgorithmIdentifier;case"encryptedKey":return new asn1js__namespace.OctetString;case"recipientCertificate":return new Certificate;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"version":return t===KeyTransRecipientInfo.defaultValues("version");case"rid":return 0===Object.keys(t).length;case"keyEncryptionAlgorithm":case"encryptedKey":return t.isEqual(KeyTransRecipientInfo.defaultValues(e));case"recipientCertificate":return!1;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||""}),RecipientIdentifier.schema(t.rid||{}),AlgorithmIdentifier.schema(t.keyEncryptionAlgorithm||{}),new asn1js__namespace.OctetString({name:t.encryptedKey||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$A);const t=asn1js__namespace.compareSchema(e,e,KeyTransRecipientInfo.schema({names:{version:"version",rid:{names:{blockName:"rid"}},keyEncryptionAlgorithm:{names:{blockName:"keyEncryptionAlgorithm"}},encryptedKey:"encryptedKey"}}));AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,3===t.result.rid.idBlock.tagClass?this.rid=new asn1js__namespace.OctetString({valueHex:t.result.rid.valueBlock.valueHex}):this.rid=new IssuerAndSerialNumber({schema:t.result.rid}),this.keyEncryptionAlgorithm=new AlgorithmIdentifier({schema:t.result.keyEncryptionAlgorithm}),this.encryptedKey=t.result.encryptedKey}toSchema(){const e=[];return this.rid instanceof IssuerAndSerialNumber?(this.version=0,e.push(new asn1js__namespace.Integer({value:this.version})),e.push(this.rid.toSchema())):(this.version=2,e.push(new asn1js__namespace.Integer({value:this.version})),e.push(new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:0},valueHex:this.rid.valueBlock.valueHexView}))),e.push(this.keyEncryptionAlgorithm.toSchema()),e.push(this.encryptedKey),new asn1js__namespace.Sequence({value:e})}toJSON(){return{version:this.version,rid:this.rid.toJSON(),keyEncryptionAlgorithm:this.keyEncryptionAlgorithm.toJSON(),encryptedKey:this.encryptedKey.toJSON()}}}KeyTransRecipientInfo.CLASS_NAME="KeyTransRecipientInfo";const ALGORITHM="algorithm",PUBLIC_KEY="publicKey",CLEAR_PROPS$z=[ALGORITHM,PUBLIC_KEY];class OriginatorPublicKey extends PkiObject{constructor(e={}){super(),this.algorithm=pvutils__namespace.getParametersValue(e,ALGORITHM,OriginatorPublicKey.defaultValues(ALGORITHM)),this.publicKey=pvutils__namespace.getParametersValue(e,PUBLIC_KEY,OriginatorPublicKey.defaultValues(PUBLIC_KEY)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case ALGORITHM:return new AlgorithmIdentifier;case PUBLIC_KEY:return new asn1js__namespace.BitString;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case ALGORITHM:case PUBLIC_KEY:return t.isEqual(OriginatorPublicKey.defaultValues(e));default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[AlgorithmIdentifier.schema(t.algorithm||{}),new asn1js__namespace.BitString({name:t.publicKey||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$z);const t=asn1js__namespace.compareSchema(e,e,OriginatorPublicKey.schema({names:{algorithm:{names:{blockName:ALGORITHM}},publicKey:PUBLIC_KEY}}));AsnError.assertSchema(t,this.className),this.algorithm=new AlgorithmIdentifier({schema:t.result.algorithm}),this.publicKey=t.result.publicKey}toSchema(){return new asn1js__namespace.Sequence({value:[this.algorithm.toSchema(),this.publicKey]})}toJSON(){return{algorithm:this.algorithm.toJSON(),publicKey:this.publicKey.toJSON()}}}OriginatorPublicKey.CLASS_NAME="OriginatorPublicKey";const VARIANT$2="variant",VALUE$2="value",CLEAR_PROPS$y=["blockName"];class OriginatorIdentifierOrKey extends PkiObject{constructor(e={}){super(),this.variant=pvutils__namespace.getParametersValue(e,"variant",OriginatorIdentifierOrKey.defaultValues("variant")),"value"in e&&(this.value=pvutils__namespace.getParametersValue(e,"value",OriginatorIdentifierOrKey.defaultValues("value"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"variant":return-1;case"value":return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"variant":return-1===t;case"value":return 0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Choice({value:[IssuerAndSerialNumber.schema({names:{blockName:t.blockName||""}}),new asn1js__namespace.Primitive({idBlock:{tagClass:3,tagNumber:0},name:t.blockName||""}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},name:t.blockName||"",value:OriginatorPublicKey.schema().valueBlock.value})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$y);const t=asn1js__namespace.compareSchema(e,e,OriginatorIdentifierOrKey.schema({names:{blockName:"blockName"}}));AsnError.assertSchema(t,this.className),1===t.result.blockName.idBlock.tagClass?(this.variant=1,this.value=new IssuerAndSerialNumber({schema:t.result.blockName})):0===t.result.blockName.idBlock.tagNumber?(t.result.blockName.idBlock.tagClass=1,t.result.blockName.idBlock.tagNumber=4,this.variant=2,this.value=t.result.blockName):(this.variant=3,this.value=new OriginatorPublicKey({schema:new asn1js__namespace.Sequence({value:t.result.blockName.valueBlock.value})}))}toSchema(){switch(this.variant){case 1:return this.value.toSchema();case 2:return this.value.idBlock.tagClass=3,this.value.idBlock.tagNumber=0,this.value;case 3:{const e=this.value.toSchema();return e.idBlock.tagClass=3,e.idBlock.tagNumber=1,e}default:return new asn1js__namespace.Any}}toJSON(){const e={variant:this.variant};return 1!==this.variant&&2!==this.variant&&3!==this.variant||(e.value=this.value.toJSON()),e}}OriginatorIdentifierOrKey.CLASS_NAME="OriginatorIdentifierOrKey";const KEY_ATTR_ID="keyAttrId",KEY_ATTR="keyAttr",CLEAR_PROPS$x=["keyAttrId",KEY_ATTR];class OtherKeyAttribute extends PkiObject{constructor(e={}){super(),this.keyAttrId=pvutils__namespace.getParametersValue(e,"keyAttrId",OtherKeyAttribute.defaultValues("keyAttrId")),KEY_ATTR in e&&(this.keyAttr=pvutils__namespace.getParametersValue(e,KEY_ATTR,OtherKeyAttribute.defaultValues(KEY_ATTR))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"keyAttrId":return"";case KEY_ATTR:return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"keyAttrId":return"string"==typeof t&&""===t;case KEY_ATTR:return 0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({optional:t.optional||!0,name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.keyAttrId||""}),new asn1js__namespace.Any({optional:!0,name:t.keyAttr||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$x);const t=asn1js__namespace.compareSchema(e,e,OtherKeyAttribute.schema({names:{keyAttrId:"keyAttrId",keyAttr:KEY_ATTR}}));AsnError.assertSchema(t,this.className),this.keyAttrId=t.result.keyAttrId.valueBlock.toString(),KEY_ATTR in t.result&&(this.keyAttr=t.result.keyAttr)}toSchema(){const e=[];return e.push(new asn1js__namespace.ObjectIdentifier({value:this.keyAttrId})),KEY_ATTR in this&&e.push(this.keyAttr),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={keyAttrId:this.keyAttrId};return KEY_ATTR in this&&(e.keyAttr=this.keyAttr.toJSON()),e}}OtherKeyAttribute.CLASS_NAME="OtherKeyAttribute";const SUBJECT_KEY_IDENTIFIER="subjectKeyIdentifier",DATE$1="date",OTHER$1="other",CLEAR_PROPS$w=["subjectKeyIdentifier","date","other"];class RecipientKeyIdentifier extends PkiObject{constructor(e={}){super(),this.subjectKeyIdentifier=pvutils__namespace.getParametersValue(e,"subjectKeyIdentifier",RecipientKeyIdentifier.defaultValues("subjectKeyIdentifier")),"date"in e&&(this.date=pvutils__namespace.getParametersValue(e,"date",RecipientKeyIdentifier.defaultValues("date"))),"other"in e&&(this.other=pvutils__namespace.getParametersValue(e,"other",RecipientKeyIdentifier.defaultValues("other"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"subjectKeyIdentifier":return new asn1js__namespace.OctetString;case"date":return new asn1js__namespace.GeneralizedTime;case"other":return new OtherKeyAttribute;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"subjectKeyIdentifier":return t.isEqual(RecipientKeyIdentifier.defaultValues("subjectKeyIdentifier"));case"date":return 0===t.year&&0===t.month&&0===t.day&&0===t.hour&&0===t.minute&&0===t.second&&0===t.millisecond;case"other":return""===t.keyAttrId&&"keyAttr"in t==!1;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.OctetString({name:t.subjectKeyIdentifier||""}),new asn1js__namespace.GeneralizedTime({optional:!0,name:t.date||""}),OtherKeyAttribute.schema(t.other||{})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$w);const t=asn1js__namespace.compareSchema(e,e,RecipientKeyIdentifier.schema({names:{subjectKeyIdentifier:"subjectKeyIdentifier",date:"date",other:{names:{blockName:"other"}}}}));AsnError.assertSchema(t,this.className),this.subjectKeyIdentifier=t.result.subjectKeyIdentifier,"date"in t.result&&(this.date=t.result.date),"other"in t.result&&(this.other=new OtherKeyAttribute({schema:t.result.other}))}toSchema(){const e=[];return e.push(this.subjectKeyIdentifier),this.date&&e.push(this.date),this.other&&e.push(this.other.toSchema()),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={subjectKeyIdentifier:this.subjectKeyIdentifier.toJSON()};return this.date&&(e.date=this.date.toJSON()),this.other&&(e.other=this.other.toJSON()),e}}RecipientKeyIdentifier.CLASS_NAME="RecipientKeyIdentifier";const VARIANT$1="variant",VALUE$1="value",CLEAR_PROPS$v=["blockName"];class KeyAgreeRecipientIdentifier extends PkiObject{constructor(e={}){super(),this.variant=pvutils__namespace.getParametersValue(e,"variant",KeyAgreeRecipientIdentifier.defaultValues("variant")),this.value=pvutils__namespace.getParametersValue(e,"value",KeyAgreeRecipientIdentifier.defaultValues("value")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"variant":return-1;case"value":return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"variant":return-1===t;case"value":return 0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Choice({value:[IssuerAndSerialNumber.schema(t.issuerAndSerialNumber||{names:{blockName:t.blockName||""}}),new asn1js__namespace.Constructed({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:0},value:RecipientKeyIdentifier.schema(t.rKeyId||{names:{blockName:t.blockName||""}}).valueBlock.value})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$v);const t=asn1js__namespace.compareSchema(e,e,KeyAgreeRecipientIdentifier.schema({names:{blockName:"blockName"}}));AsnError.assertSchema(t,this.className),1===t.result.blockName.idBlock.tagClass?(this.variant=1,this.value=new IssuerAndSerialNumber({schema:t.result.blockName})):(this.variant=2,this.value=new RecipientKeyIdentifier({schema:new asn1js__namespace.Sequence({value:t.result.blockName.valueBlock.value})}))}toSchema(){switch(this.variant){case 1:return this.value.toSchema();case 2:return new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:this.value.toSchema().valueBlock.value});default:return new asn1js__namespace.Any}}toJSON(){const e={variant:this.variant};return 1!==this.variant&&2!==this.variant||(e.value=this.value.toJSON()),e}}KeyAgreeRecipientIdentifier.CLASS_NAME="KeyAgreeRecipientIdentifier";const RID="rid",ENCRYPTED_KEY$2="encryptedKey",CLEAR_PROPS$u=[RID,"encryptedKey"];class RecipientEncryptedKey extends PkiObject{constructor(e={}){super(),this.rid=pvutils__namespace.getParametersValue(e,RID,RecipientEncryptedKey.defaultValues(RID)),this.encryptedKey=pvutils__namespace.getParametersValue(e,"encryptedKey",RecipientEncryptedKey.defaultValues("encryptedKey")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case RID:return new KeyAgreeRecipientIdentifier;case"encryptedKey":return new asn1js__namespace.OctetString;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case RID:return-1===t.variant&&"value"in t==!1;case"encryptedKey":return t.isEqual(RecipientEncryptedKey.defaultValues("encryptedKey"));default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[KeyAgreeRecipientIdentifier.schema(t.rid||{}),new asn1js__namespace.OctetString({name:t.encryptedKey||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$u);const t=asn1js__namespace.compareSchema(e,e,RecipientEncryptedKey.schema({names:{rid:{names:{blockName:RID}},encryptedKey:"encryptedKey"}}));AsnError.assertSchema(t,this.className),this.rid=new KeyAgreeRecipientIdentifier({schema:t.result.rid}),this.encryptedKey=t.result.encryptedKey}toSchema(){return new asn1js__namespace.Sequence({value:[this.rid.toSchema(),this.encryptedKey]})}toJSON(){return{rid:this.rid.toJSON(),encryptedKey:this.encryptedKey.toJSON()}}}RecipientEncryptedKey.CLASS_NAME="RecipientEncryptedKey";const ENCRYPTED_KEYS="encryptedKeys",RECIPIENT_ENCRYPTED_KEYS="RecipientEncryptedKeys",CLEAR_PROPS$t=["RecipientEncryptedKeys"];class RecipientEncryptedKeys extends PkiObject{constructor(e={}){super(),this.encryptedKeys=pvutils__namespace.getParametersValue(e,ENCRYPTED_KEYS,RecipientEncryptedKeys.defaultValues(ENCRYPTED_KEYS)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){return e===ENCRYPTED_KEYS?[]:super.defaultValues(e)}static compareWithDefault(e,t){return e===ENCRYPTED_KEYS?0===t.length:super.defaultValues(e)}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.RecipientEncryptedKeys||"",value:RecipientEncryptedKey.schema()})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$t);const t=asn1js__namespace.compareSchema(e,e,RecipientEncryptedKeys.schema({names:{RecipientEncryptedKeys:"RecipientEncryptedKeys"}}));AsnError.assertSchema(t,this.className),this.encryptedKeys=Array.from(t.result.RecipientEncryptedKeys,(e=>new RecipientEncryptedKey({schema:e})))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.encryptedKeys,(e=>e.toSchema()))})}toJSON(){return{encryptedKeys:Array.from(this.encryptedKeys,(e=>e.toJSON()))}}}RecipientEncryptedKeys.CLASS_NAME="RecipientEncryptedKeys";const VERSION$b="version",ORIGINATOR="originator",UKM="ukm",KEY_ENCRYPTION_ALGORITHM$2="keyEncryptionAlgorithm",RECIPIENT_ENCRYPTED_KEY="recipientEncryptedKeys",RECIPIENT_CERTIFICATE="recipientCertificate",RECIPIENT_PUBLIC_KEY="recipientPublicKey",CLEAR_PROPS$s=["version",ORIGINATOR,UKM,"keyEncryptionAlgorithm",RECIPIENT_ENCRYPTED_KEY];class KeyAgreeRecipientInfo extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",KeyAgreeRecipientInfo.defaultValues("version")),this.originator=pvutils__namespace.getParametersValue(e,ORIGINATOR,KeyAgreeRecipientInfo.defaultValues(ORIGINATOR)),UKM in e&&(this.ukm=pvutils__namespace.getParametersValue(e,UKM,KeyAgreeRecipientInfo.defaultValues(UKM))),this.keyEncryptionAlgorithm=pvutils__namespace.getParametersValue(e,"keyEncryptionAlgorithm",KeyAgreeRecipientInfo.defaultValues("keyEncryptionAlgorithm")),this.recipientEncryptedKeys=pvutils__namespace.getParametersValue(e,RECIPIENT_ENCRYPTED_KEY,KeyAgreeRecipientInfo.defaultValues(RECIPIENT_ENCRYPTED_KEY)),this.recipientCertificate=pvutils__namespace.getParametersValue(e,RECIPIENT_CERTIFICATE,KeyAgreeRecipientInfo.defaultValues(RECIPIENT_CERTIFICATE)),this.recipientPublicKey=pvutils__namespace.getParametersValue(e,"recipientPublicKey",KeyAgreeRecipientInfo.defaultValues("recipientPublicKey")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case ORIGINATOR:return new OriginatorIdentifierOrKey;case UKM:return new asn1js__namespace.OctetString;case"keyEncryptionAlgorithm":return new AlgorithmIdentifier;case RECIPIENT_ENCRYPTED_KEY:return new RecipientEncryptedKeys;case RECIPIENT_CERTIFICATE:return new Certificate;case"recipientPublicKey":return null;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"version":return 0===t;case ORIGINATOR:return-1===t.variant&&"value"in t==!1;case UKM:return t.isEqual(KeyAgreeRecipientInfo.defaultValues(UKM));case"keyEncryptionAlgorithm":return""===t.algorithmId&&"algorithmParams"in t==!1;case RECIPIENT_ENCRYPTED_KEY:return 0===t.encryptedKeys.length;case RECIPIENT_CERTIFICATE:case"recipientPublicKey":return!1;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||""}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[OriginatorIdentifierOrKey.schema(t.originator||{})]}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.OctetString({name:t.ukm||""})]}),AlgorithmIdentifier.schema(t.keyEncryptionAlgorithm||{}),RecipientEncryptedKeys.schema(t.recipientEncryptedKeys||{})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$s);const t=asn1js__namespace.compareSchema(e,e,KeyAgreeRecipientInfo.schema({names:{version:"version",originator:{names:{blockName:ORIGINATOR}},ukm:UKM,keyEncryptionAlgorithm:{names:{blockName:"keyEncryptionAlgorithm"}},recipientEncryptedKeys:{names:{blockName:RECIPIENT_ENCRYPTED_KEY}}}}));AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,this.originator=new OriginatorIdentifierOrKey({schema:t.result.originator}),UKM in t.result&&(this.ukm=t.result.ukm),this.keyEncryptionAlgorithm=new AlgorithmIdentifier({schema:t.result.keyEncryptionAlgorithm}),this.recipientEncryptedKeys=new RecipientEncryptedKeys({schema:t.result.recipientEncryptedKeys})}toSchema(){const e=[];return e.push(new asn1js__namespace.Integer({value:this.version})),e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[this.originator.toSchema()]})),this.ukm&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[this.ukm]})),e.push(this.keyEncryptionAlgorithm.toSchema()),e.push(this.recipientEncryptedKeys.toSchema()),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={version:this.version,originator:this.originator.toJSON(),keyEncryptionAlgorithm:this.keyEncryptionAlgorithm.toJSON(),recipientEncryptedKeys:this.recipientEncryptedKeys.toJSON()};return this.ukm&&(e.ukm=this.ukm.toJSON()),e}}KeyAgreeRecipientInfo.CLASS_NAME="KeyAgreeRecipientInfo";const KEY_IDENTIFIER="keyIdentifier",DATE="date",OTHER="other",CLEAR_PROPS$r=[KEY_IDENTIFIER,DATE,OTHER];class KEKIdentifier extends PkiObject{constructor(e={}){super(),this.keyIdentifier=pvutils__namespace.getParametersValue(e,KEY_IDENTIFIER,KEKIdentifier.defaultValues(KEY_IDENTIFIER)),DATE in e&&(this.date=pvutils__namespace.getParametersValue(e,DATE,KEKIdentifier.defaultValues(DATE))),OTHER in e&&(this.other=pvutils__namespace.getParametersValue(e,OTHER,KEKIdentifier.defaultValues(OTHER))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case KEY_IDENTIFIER:return new asn1js__namespace.OctetString;case DATE:return new asn1js__namespace.GeneralizedTime;case OTHER:return new OtherKeyAttribute;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case KEY_IDENTIFIER:return t.isEqual(KEKIdentifier.defaultValues(KEY_IDENTIFIER));case DATE:return 0===t.year&&0===t.month&&0===t.day&&0===t.hour&&0===t.minute&&0===t.second&&0===t.millisecond;case OTHER:return t.compareWithDefault("keyAttrId",t.keyAttrId)&&"keyAttr"in t==!1;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.OctetString({name:t.keyIdentifier||""}),new asn1js__namespace.GeneralizedTime({optional:!0,name:t.date||""}),OtherKeyAttribute.schema(t.other||{})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$r);const t=asn1js__namespace.compareSchema(e,e,KEKIdentifier.schema({names:{keyIdentifier:KEY_IDENTIFIER,date:DATE,other:{names:{blockName:OTHER}}}}));AsnError.assertSchema(t,this.className),this.keyIdentifier=t.result.keyIdentifier,DATE in t.result&&(this.date=t.result.date),OTHER in t.result&&(this.other=new OtherKeyAttribute({schema:t.result.other}))}toSchema(){const e=[];return e.push(this.keyIdentifier),this.date&&e.push(this.date),this.other&&e.push(this.other.toSchema()),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={keyIdentifier:this.keyIdentifier.toJSON()};return this.date&&(e.date=this.date),this.other&&(e.other=this.other.toJSON()),e}}KEKIdentifier.CLASS_NAME="KEKIdentifier";const VERSION$a="version",KEK_ID="kekid",KEY_ENCRYPTION_ALGORITHM$1="keyEncryptionAlgorithm",ENCRYPTED_KEY$1="encryptedKey",PER_DEFINED_KEK="preDefinedKEK",CLEAR_PROPS$q=["version",KEK_ID,"keyEncryptionAlgorithm","encryptedKey"];class KEKRecipientInfo extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",KEKRecipientInfo.defaultValues("version")),this.kekid=pvutils__namespace.getParametersValue(e,KEK_ID,KEKRecipientInfo.defaultValues(KEK_ID)),this.keyEncryptionAlgorithm=pvutils__namespace.getParametersValue(e,"keyEncryptionAlgorithm",KEKRecipientInfo.defaultValues("keyEncryptionAlgorithm")),this.encryptedKey=pvutils__namespace.getParametersValue(e,"encryptedKey",KEKRecipientInfo.defaultValues("encryptedKey")),this.preDefinedKEK=pvutils__namespace.getParametersValue(e,"preDefinedKEK",KEKRecipientInfo.defaultValues("preDefinedKEK")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case KEK_ID:return new KEKIdentifier;case"keyEncryptionAlgorithm":return new AlgorithmIdentifier;case"encryptedKey":return new asn1js__namespace.OctetString;case"preDefinedKEK":return EMPTY_BUFFER;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"KEKRecipientInfo":return t===KEKRecipientInfo.defaultValues("version");case KEK_ID:return t.compareWithDefault("keyIdentifier",t.keyIdentifier)&&"date"in t==!1&&"other"in t==!1;case"keyEncryptionAlgorithm":return""===t.algorithmId&&"algorithmParams"in t==!1;case"encryptedKey":return t.isEqual(KEKRecipientInfo.defaultValues("encryptedKey"));case"preDefinedKEK":return 0===t.byteLength;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||""}),KEKIdentifier.schema(t.kekid||{}),AlgorithmIdentifier.schema(t.keyEncryptionAlgorithm||{}),new asn1js__namespace.OctetString({name:t.encryptedKey||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$q);const t=asn1js__namespace.compareSchema(e,e,KEKRecipientInfo.schema({names:{version:"version",kekid:{names:{blockName:KEK_ID}},keyEncryptionAlgorithm:{names:{blockName:"keyEncryptionAlgorithm"}},encryptedKey:"encryptedKey"}}));AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,this.kekid=new KEKIdentifier({schema:t.result.kekid}),this.keyEncryptionAlgorithm=new AlgorithmIdentifier({schema:t.result.keyEncryptionAlgorithm}),this.encryptedKey=t.result.encryptedKey}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.Integer({value:this.version}),this.kekid.toSchema(),this.keyEncryptionAlgorithm.toSchema(),this.encryptedKey]})}toJSON(){return{version:this.version,kekid:this.kekid.toJSON(),keyEncryptionAlgorithm:this.keyEncryptionAlgorithm.toJSON(),encryptedKey:this.encryptedKey.toJSON()}}}KEKRecipientInfo.CLASS_NAME="KEKRecipientInfo";const VERSION$9="version",KEY_DERIVATION_ALGORITHM="keyDerivationAlgorithm",KEY_ENCRYPTION_ALGORITHM="keyEncryptionAlgorithm",ENCRYPTED_KEY="encryptedKey",PASSWORD="password",CLEAR_PROPS$p=["version","keyDerivationAlgorithm","keyEncryptionAlgorithm",ENCRYPTED_KEY];class PasswordRecipientinfo extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",PasswordRecipientinfo.defaultValues("version")),"keyDerivationAlgorithm"in e&&(this.keyDerivationAlgorithm=pvutils__namespace.getParametersValue(e,"keyDerivationAlgorithm",PasswordRecipientinfo.defaultValues("keyDerivationAlgorithm"))),this.keyEncryptionAlgorithm=pvutils__namespace.getParametersValue(e,"keyEncryptionAlgorithm",PasswordRecipientinfo.defaultValues("keyEncryptionAlgorithm")),this.encryptedKey=pvutils__namespace.getParametersValue(e,ENCRYPTED_KEY,PasswordRecipientinfo.defaultValues(ENCRYPTED_KEY)),this.password=pvutils__namespace.getParametersValue(e,PASSWORD,PasswordRecipientinfo.defaultValues(PASSWORD)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return-1;case"keyDerivationAlgorithm":case"keyEncryptionAlgorithm":return new AlgorithmIdentifier;case ENCRYPTED_KEY:return new asn1js__namespace.OctetString;case PASSWORD:return EMPTY_BUFFER;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"version":return-1===t;case"keyDerivationAlgorithm":case"keyEncryptionAlgorithm":return""===t.algorithmId&&"algorithmParams"in t==!1;case ENCRYPTED_KEY:return t.isEqual(PasswordRecipientinfo.defaultValues(ENCRYPTED_KEY));case PASSWORD:return 0===t.byteLength;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||""}),new asn1js__namespace.Constructed({name:t.keyDerivationAlgorithm||"",optional:!0,idBlock:{tagClass:3,tagNumber:0},value:AlgorithmIdentifier.schema().valueBlock.value}),AlgorithmIdentifier.schema(t.keyEncryptionAlgorithm||{}),new asn1js__namespace.OctetString({name:t.encryptedKey||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$p);const t=asn1js__namespace.compareSchema(e,e,PasswordRecipientinfo.schema({names:{version:"version",keyDerivationAlgorithm:"keyDerivationAlgorithm",keyEncryptionAlgorithm:{names:{blockName:"keyEncryptionAlgorithm"}},encryptedKey:ENCRYPTED_KEY}}));AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,"keyDerivationAlgorithm"in t.result&&(this.keyDerivationAlgorithm=new AlgorithmIdentifier({schema:new asn1js__namespace.Sequence({value:t.result.keyDerivationAlgorithm.valueBlock.value})})),this.keyEncryptionAlgorithm=new AlgorithmIdentifier({schema:t.result.keyEncryptionAlgorithm}),this.encryptedKey=t.result.encryptedKey}toSchema(){const e=[];return e.push(new asn1js__namespace.Integer({value:this.version})),this.keyDerivationAlgorithm&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:this.keyDerivationAlgorithm.toSchema().valueBlock.value})),e.push(this.keyEncryptionAlgorithm.toSchema()),e.push(this.encryptedKey),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={version:this.version,keyEncryptionAlgorithm:this.keyEncryptionAlgorithm.toJSON(),encryptedKey:this.encryptedKey.toJSON()};return this.keyDerivationAlgorithm&&(e.keyDerivationAlgorithm=this.keyDerivationAlgorithm.toJSON()),e}}PasswordRecipientinfo.CLASS_NAME="PasswordRecipientInfo";const ORI_TYPE="oriType",ORI_VALUE="oriValue",CLEAR_PROPS$o=[ORI_TYPE,ORI_VALUE];class OtherRecipientInfo extends PkiObject{constructor(e={}){super(),this.oriType=pvutils__namespace.getParametersValue(e,ORI_TYPE,OtherRecipientInfo.defaultValues(ORI_TYPE)),this.oriValue=pvutils__namespace.getParametersValue(e,ORI_VALUE,OtherRecipientInfo.defaultValues(ORI_VALUE)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case ORI_TYPE:return"";case ORI_VALUE:return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case ORI_TYPE:return""===t;case ORI_VALUE:return 0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.oriType||""}),new asn1js__namespace.Any({name:t.oriValue||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$o);const t=asn1js__namespace.compareSchema(e,e,OtherRecipientInfo.schema({names:{oriType:ORI_TYPE,oriValue:ORI_VALUE}}));AsnError.assertSchema(t,this.className),this.oriType=t.result.oriType.valueBlock.toString(),this.oriValue=t.result.oriValue}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.oriType}),this.oriValue]})}toJSON(){const e={oriType:this.oriType};return OtherRecipientInfo.compareWithDefault(ORI_VALUE,this.oriValue)||(e.oriValue=this.oriValue.toJSON()),e}}OtherRecipientInfo.CLASS_NAME="OtherRecipientInfo";const VARIANT="variant",VALUE="value",CLEAR_PROPS$n=["blockName"];class RecipientInfo extends PkiObject{constructor(e={}){super(),this.variant=pvutils__namespace.getParametersValue(e,VARIANT,RecipientInfo.defaultValues(VARIANT)),VALUE in e&&(this.value=pvutils__namespace.getParametersValue(e,VALUE,RecipientInfo.defaultValues(VALUE))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case VARIANT:return-1;case VALUE:return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case VARIANT:return t===RecipientInfo.defaultValues(e);case VALUE:return 0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Choice({value:[KeyTransRecipientInfo.schema({names:{blockName:t.blockName||""}}),new asn1js__namespace.Constructed({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:1},value:KeyAgreeRecipientInfo.schema().valueBlock.value}),new asn1js__namespace.Constructed({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:2},value:KEKRecipientInfo.schema().valueBlock.value}),new asn1js__namespace.Constructed({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:3},value:PasswordRecipientinfo.schema().valueBlock.value}),new asn1js__namespace.Constructed({name:t.blockName||"",idBlock:{tagClass:3,tagNumber:4},value:OtherRecipientInfo.schema().valueBlock.value})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$n);const t=asn1js__namespace.compareSchema(e,e,RecipientInfo.schema({names:{blockName:"blockName"}}));if(AsnError.assertSchema(t,this.className),1===t.result.blockName.idBlock.tagClass)this.variant=1,this.value=new KeyTransRecipientInfo({schema:t.result.blockName});else{const e=new asn1js__namespace.Sequence({value:t.result.blockName.valueBlock.value});switch(t.result.blockName.idBlock.tagNumber){case 1:this.variant=2,this.value=new KeyAgreeRecipientInfo({schema:e});break;case 2:this.variant=3,this.value=new KEKRecipientInfo({schema:e});break;case 3:this.variant=4,this.value=new PasswordRecipientinfo({schema:e});break;case 4:this.variant=5,this.value=new OtherRecipientInfo({schema:e});break;default:throw new Error("Incorrect structure of RecipientInfo block")}}}toSchema(){ParameterError.assertEmpty(this.value,"value","RecipientInfo");const e=this.value.toSchema();switch(this.variant){case 1:return e;case 2:case 3:case 4:return e.idBlock.tagClass=3,e.idBlock.tagNumber=this.variant-1,e;default:return new asn1js__namespace.Any}}toJSON(){const e={variant:this.variant};return this.value&&this.variant>=1&&this.variant<=4&&(e.value=this.value.toJSON()),e}}RecipientInfo.CLASS_NAME="RecipientInfo";const HASH_ALGORITHM$2="hashAlgorithm",MASK_GEN_ALGORITHM="maskGenAlgorithm",P_SOURCE_ALGORITHM="pSourceAlgorithm",CLEAR_PROPS$m=["hashAlgorithm","maskGenAlgorithm","pSourceAlgorithm"];class RSAESOAEPParams extends PkiObject{constructor(e={}){super(),this.hashAlgorithm=pvutils__namespace.getParametersValue(e,"hashAlgorithm",RSAESOAEPParams.defaultValues("hashAlgorithm")),this.maskGenAlgorithm=pvutils__namespace.getParametersValue(e,"maskGenAlgorithm",RSAESOAEPParams.defaultValues("maskGenAlgorithm")),this.pSourceAlgorithm=pvutils__namespace.getParametersValue(e,"pSourceAlgorithm",RSAESOAEPParams.defaultValues("pSourceAlgorithm")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"hashAlgorithm":return new AlgorithmIdentifier({algorithmId:"1.3.14.3.2.26",algorithmParams:new asn1js__namespace.Null});case"maskGenAlgorithm":return new AlgorithmIdentifier({algorithmId:"1.2.840.113549.1.1.8",algorithmParams:new AlgorithmIdentifier({algorithmId:"1.3.14.3.2.26",algorithmParams:new asn1js__namespace.Null}).toSchema()});case"pSourceAlgorithm":return new AlgorithmIdentifier({algorithmId:"1.2.840.113549.1.1.9",algorithmParams:new asn1js__namespace.OctetString({valueHex:new Uint8Array([218,57,163,238,94,107,75,13,50,85,191,239,149,96,24,144,175,216,7,9]).buffer})});default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},optional:!0,value:[AlgorithmIdentifier.schema(t.hashAlgorithm||{})]}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},optional:!0,value:[AlgorithmIdentifier.schema(t.maskGenAlgorithm||{})]}),new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:2},optional:!0,value:[AlgorithmIdentifier.schema(t.pSourceAlgorithm||{})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$m);const t=asn1js__namespace.compareSchema(e,e,RSAESOAEPParams.schema({names:{hashAlgorithm:{names:{blockName:"hashAlgorithm"}},maskGenAlgorithm:{names:{blockName:"maskGenAlgorithm"}},pSourceAlgorithm:{names:{blockName:"pSourceAlgorithm"}}}}));AsnError.assertSchema(t,this.className),"hashAlgorithm"in t.result&&(this.hashAlgorithm=new AlgorithmIdentifier({schema:t.result.hashAlgorithm})),"maskGenAlgorithm"in t.result&&(this.maskGenAlgorithm=new AlgorithmIdentifier({schema:t.result.maskGenAlgorithm})),"pSourceAlgorithm"in t.result&&(this.pSourceAlgorithm=new AlgorithmIdentifier({schema:t.result.pSourceAlgorithm}))}toSchema(){const e=[];return this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues("hashAlgorithm"))||e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[this.hashAlgorithm.toSchema()]})),this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues("maskGenAlgorithm"))||e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:[this.maskGenAlgorithm.toSchema()]})),this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues("pSourceAlgorithm"))||e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:2},value:[this.pSourceAlgorithm.toSchema()]})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={};return this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues("hashAlgorithm"))||(e.hashAlgorithm=this.hashAlgorithm.toJSON()),this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues("maskGenAlgorithm"))||(e.maskGenAlgorithm=this.maskGenAlgorithm.toJSON()),this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues("pSourceAlgorithm"))||(e.pSourceAlgorithm=this.pSourceAlgorithm.toJSON()),e}}RSAESOAEPParams.CLASS_NAME="RSAESOAEPParams";const KEY_INFO="keyInfo",ENTITY_U_INFO="entityUInfo",SUPP_PUB_INFO="suppPubInfo",CLEAR_PROPS$l=[KEY_INFO,"entityUInfo","suppPubInfo"];class ECCCMSSharedInfo extends PkiObject{constructor(e={}){super(),this.keyInfo=pvutils__namespace.getParametersValue(e,KEY_INFO,ECCCMSSharedInfo.defaultValues(KEY_INFO)),"entityUInfo"in e&&(this.entityUInfo=pvutils__namespace.getParametersValue(e,"entityUInfo",ECCCMSSharedInfo.defaultValues("entityUInfo"))),this.suppPubInfo=pvutils__namespace.getParametersValue(e,"suppPubInfo",ECCCMSSharedInfo.defaultValues("suppPubInfo")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case KEY_INFO:return new AlgorithmIdentifier;case"entityUInfo":case"suppPubInfo":return new asn1js__namespace.OctetString;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case KEY_INFO:case"entityUInfo":case"suppPubInfo":return t.isEqual(ECCCMSSharedInfo.defaultValues(e));default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[AlgorithmIdentifier.schema(t.keyInfo||{}),new asn1js__namespace.Constructed({name:t.entityUInfo||"",idBlock:{tagClass:3,tagNumber:0},optional:!0,value:[new asn1js__namespace.OctetString]}),new asn1js__namespace.Constructed({name:t.suppPubInfo||"",idBlock:{tagClass:3,tagNumber:2},value:[new asn1js__namespace.OctetString]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$l);const t=asn1js__namespace.compareSchema(e,e,ECCCMSSharedInfo.schema({names:{keyInfo:{names:{blockName:KEY_INFO}},entityUInfo:"entityUInfo",suppPubInfo:"suppPubInfo"}}));AsnError.assertSchema(t,this.className),this.keyInfo=new AlgorithmIdentifier({schema:t.result.keyInfo}),"entityUInfo"in t.result&&(this.entityUInfo=t.result.entityUInfo.valueBlock.value[0]),this.suppPubInfo=t.result.suppPubInfo.valueBlock.value[0]}toSchema(){const e=[];return e.push(this.keyInfo.toSchema()),this.entityUInfo&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[this.entityUInfo]})),e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:2},value:[this.suppPubInfo]})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={keyInfo:this.keyInfo.toJSON(),suppPubInfo:this.suppPubInfo.toJSON()};return this.entityUInfo&&(e.entityUInfo=this.entityUInfo.toJSON()),e}}ECCCMSSharedInfo.CLASS_NAME="ECCCMSSharedInfo";const VERSION$8="version",ORIGINATOR_INFO="originatorInfo",RECIPIENT_INFOS="recipientInfos",ENCRYPTED_CONTENT_INFO="encryptedContentInfo",UNPROTECTED_ATTRS="unprotectedAttrs",CLEAR_PROPS$k=["version",ORIGINATOR_INFO,RECIPIENT_INFOS,"encryptedContentInfo",UNPROTECTED_ATTRS],defaultEncryptionParams={kdfAlgorithm:"SHA-512",kekEncryptionLength:256},curveLengthByName={"P-256":256,"P-384":384,"P-521":528};class EnvelopedData extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",EnvelopedData.defaultValues("version")),ORIGINATOR_INFO in e&&(this.originatorInfo=pvutils__namespace.getParametersValue(e,ORIGINATOR_INFO,EnvelopedData.defaultValues(ORIGINATOR_INFO))),this.recipientInfos=pvutils__namespace.getParametersValue(e,RECIPIENT_INFOS,EnvelopedData.defaultValues(RECIPIENT_INFOS)),this.encryptedContentInfo=pvutils__namespace.getParametersValue(e,"encryptedContentInfo",EnvelopedData.defaultValues("encryptedContentInfo")),UNPROTECTED_ATTRS in e&&(this.unprotectedAttrs=pvutils__namespace.getParametersValue(e,UNPROTECTED_ATTRS,EnvelopedData.defaultValues(UNPROTECTED_ATTRS))),this.policy={disableSplit:!!e.disableSplit},e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case ORIGINATOR_INFO:return new OriginatorInfo;case RECIPIENT_INFOS:return[];case"encryptedContentInfo":return new EncryptedContentInfo;case UNPROTECTED_ATTRS:return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"version":return t===EnvelopedData.defaultValues(e);case ORIGINATOR_INFO:return 0===t.certs.certificates.length&&0===t.crls.crls.length;case RECIPIENT_INFOS:case UNPROTECTED_ATTRS:return 0===t.length;case"encryptedContentInfo":return EncryptedContentInfo.compareWithDefault("contentType",t.contentType)&&EncryptedContentInfo.compareWithDefault("contentEncryptionAlgorithm",t.contentEncryptionAlgorithm)&&EncryptedContentInfo.compareWithDefault("encryptedContent",t.encryptedContent);default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||""}),new asn1js__namespace.Constructed({name:t.originatorInfo||"",optional:!0,idBlock:{tagClass:3,tagNumber:0},value:OriginatorInfo.schema().valueBlock.value}),new asn1js__namespace.Set({value:[new asn1js__namespace.Repeated({name:t.recipientInfos||"",value:RecipientInfo.schema()})]}),EncryptedContentInfo.schema(t.encryptedContentInfo||{}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.Repeated({name:t.unprotectedAttrs||"",value:Attribute.schema()})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$k);const t=asn1js__namespace.compareSchema(e,e,EnvelopedData.schema({names:{version:"version",originatorInfo:ORIGINATOR_INFO,recipientInfos:RECIPIENT_INFOS,encryptedContentInfo:{names:{blockName:"encryptedContentInfo"}},unprotectedAttrs:UNPROTECTED_ATTRS}}));AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,ORIGINATOR_INFO in t.result&&(this.originatorInfo=new OriginatorInfo({schema:new asn1js__namespace.Sequence({value:t.result.originatorInfo.valueBlock.value})})),this.recipientInfos=Array.from(t.result.recipientInfos,(e=>new RecipientInfo({schema:e}))),this.encryptedContentInfo=new EncryptedContentInfo({schema:t.result.encryptedContentInfo}),UNPROTECTED_ATTRS in t.result&&(this.unprotectedAttrs=Array.from(t.result.unprotectedAttrs,(e=>new Attribute({schema:e}))))}toSchema(){const e=[];return e.push(new asn1js__namespace.Integer({value:this.version})),this.originatorInfo&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:this.originatorInfo.toSchema().valueBlock.value})),e.push(new asn1js__namespace.Set({value:Array.from(this.recipientInfos,(e=>e.toSchema()))})),e.push(this.encryptedContentInfo.toSchema()),this.unprotectedAttrs&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:Array.from(this.unprotectedAttrs,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={version:this.version,recipientInfos:Array.from(this.recipientInfos,(e=>e.toJSON())),encryptedContentInfo:this.encryptedContentInfo.toJSON()};return this.originatorInfo&&(e.originatorInfo=this.originatorInfo.toJSON()),this.unprotectedAttrs&&(e.unprotectedAttrs=Array.from(this.unprotectedAttrs,(e=>e.toJSON()))),e}addRecipientByCertificate(e,t,a,s=getCrypto(!0)){const r=Object.assign({useOAEP:!0,oaepHashAlgorithm:"SHA-512"},defaultEncryptionParams,t||{});if(-1!==e.subjectPublicKeyInfo.algorithm.algorithmId.indexOf("1.2.840.113549"))a=1;else{if(-1===e.subjectPublicKeyInfo.algorithm.algorithmId.indexOf("1.2.840.10045"))throw new Error(`Unknown type of certificate's public key: ${e.subjectPublicKeyInfo.algorithm.algorithmId}`);a=2}switch(a){case 1:{let t,a;if(!0===r.useOAEP){t=s.getOIDByAlgorithm({name:"RSA-OAEP"},!0,"keyEncryptionAlgorithm");const e=s.getOIDByAlgorithm({name:r.oaepHashAlgorithm},!0,"RSAES-OAEP-params"),n=new AlgorithmIdentifier({algorithmId:e,algorithmParams:new asn1js__namespace.Null});a=new RSAESOAEPParams({hashAlgorithm:n,maskGenAlgorithm:new AlgorithmIdentifier({algorithmId:"1.2.840.113549.1.1.8",algorithmParams:n.toSchema()})}).toSchema()}else{if(t=s.getOIDByAlgorithm({name:"RSAES-PKCS1-v1_5"}),""===t)throw new Error("Can not find OID for RSAES-PKCS1-v1_5");a=new asn1js__namespace.Null}const n=new KeyTransRecipientInfo({version:0,rid:new IssuerAndSerialNumber({issuer:e.issuer,serialNumber:e.serialNumber}),keyEncryptionAlgorithm:new AlgorithmIdentifier({algorithmId:t,algorithmParams:a}),recipientCertificate:e});this.recipientInfos.push(new RecipientInfo({variant:1,value:n}))}break;case 2:{const t=new KeyAgreeRecipientIdentifier({variant:1,value:new IssuerAndSerialNumber({issuer:e.issuer,serialNumber:e.serialNumber})});this._addKeyAgreeRecipientInfo(t,r,{recipientCertificate:e},s)}break;default:throw new Error(`Unknown "variant" value: ${a}`)}return!0}addRecipientByPreDefinedData(e,t={},a,s=getCrypto(!0)){if(ArgumentError.assert(e,"preDefinedData","ArrayBuffer"),!e.byteLength)throw new Error("Pre-defined data could have zero length");if(!t.keyIdentifier){const e=new ArrayBuffer(16),a=new Uint8Array(e);s.getRandomValues(a),t.keyIdentifier=e}switch(t.hmacHashAlgorithm||(t.hmacHashAlgorithm="SHA-512"),void 0===t.iterationCount&&(t.iterationCount=2048),t.keyEncryptionAlgorithm||(t.keyEncryptionAlgorithm={name:"AES-KW",length:256}),t.keyEncryptionAlgorithmParams||(t.keyEncryptionAlgorithmParams=new asn1js__namespace.Null),a){case 1:{const a=s.getOIDByAlgorithm(t.keyEncryptionAlgorithm,!0,"keyEncryptionAlgorithm"),r=new KEKRecipientInfo({version:4,kekid:new KEKIdentifier({keyIdentifier:new asn1js__namespace.OctetString({valueHex:t.keyIdentifier})}),keyEncryptionAlgorithm:new AlgorithmIdentifier({algorithmId:a,algorithmParams:t.keyEncryptionAlgorithmParams}),preDefinedKEK:e});this.recipientInfos.push(new RecipientInfo({variant:3,value:r}))}break;case 2:{const a=s.getOIDByAlgorithm({name:"PBKDF2"},!0,"keyDerivationAlgorithm"),r=new ArrayBuffer(64),n=new Uint8Array(r);s.getRandomValues(n);const i=s.getOIDByAlgorithm({name:"HMAC",hash:{name:t.hmacHashAlgorithm}},!0,"hmacHashAlgorithm"),c=new PBKDF2Params({salt:new asn1js__namespace.OctetString({valueHex:r}),iterationCount:t.iterationCount,prf:new AlgorithmIdentifier({algorithmId:i,algorithmParams:new asn1js__namespace.Null})}),o=s.getOIDByAlgorithm(t.keyEncryptionAlgorithm,!0,"keyEncryptionAlgorithm"),u=new PasswordRecipientinfo({version:0,keyDerivationAlgorithm:new AlgorithmIdentifier({algorithmId:a,algorithmParams:c.toSchema()}),keyEncryptionAlgorithm:new AlgorithmIdentifier({algorithmId:o,algorithmParams:t.keyEncryptionAlgorithmParams}),password:e});this.recipientInfos.push(new RecipientInfo({variant:4,value:u}))}break;default:throw new Error(`Unknown value for "variant": ${a}`)}}addRecipientByKeyIdentifier(e,t,a,s=getCrypto(!0)){const r=Object.assign({},defaultEncryptionParams,a||{}),n=new KeyAgreeRecipientIdentifier({variant:2,value:new RecipientKeyIdentifier({subjectKeyIdentifier:new asn1js__namespace.OctetString({valueHex:t})})});this._addKeyAgreeRecipientInfo(n,r,{recipientPublicKey:e},s)}_addKeyAgreeRecipientInfo(e,t,a,s=getCrypto(!0)){const r=new RecipientEncryptedKey({rid:e}),n=s.getOIDByAlgorithm({name:"AES-KW",length:t.kekEncryptionLength},!0,"keyEncryptionAlgorithm"),i=new AlgorithmIdentifier({algorithmId:n}),c=s.getOIDByAlgorithm({name:"ECDH",kdf:t.kdfAlgorithm},!0,"KeyAgreeRecipientInfo"),o=new ArrayBuffer(64),u=new Uint8Array(o);s.getRandomValues(u);const l={version:3,ukm:new asn1js__namespace.OctetString({valueHex:o}),keyEncryptionAlgorithm:new AlgorithmIdentifier({algorithmId:c,algorithmParams:i.toSchema()}),recipientEncryptedKeys:new RecipientEncryptedKeys({encryptedKeys:[r]})},m=new KeyAgreeRecipientInfo(Object.assign(l,a));this.recipientInfos.push(new RecipientInfo({variant:2,value:m}))}async encrypt(e,t,a=getCrypto(!0)){const s=new ArrayBuffer(16),r=new Uint8Array(s);a.getRandomValues(r);const n=new Uint8Array(t),i=a.getOIDByAlgorithm(e,!0,"contentEncryptionAlgorithm"),c=await a.generateKey(e,!0,["encrypt"]),o=await a.encrypt({name:e.name,iv:r},c,n),u=await a.exportKey("raw",c);this.version=2,this.encryptedContentInfo=new EncryptedContentInfo({disableSplit:this.policy.disableSplit,contentType:"1.2.840.113549.1.7.1",contentEncryptionAlgorithm:new AlgorithmIdentifier({algorithmId:i,algorithmParams:new asn1js__namespace.OctetString({valueHex:s})}),encryptedContent:new asn1js__namespace.OctetString({valueHex:o})});const l=async e=>{const t=this.recipientInfos[e].value;let s,r;if(t.recipientPublicKey)s=t.recipientPublicKey.algorithm.namedCurve,r=t.recipientPublicKey;else{if(!t.recipientCertificate)throw new Error("Unsupported RecipientInfo");{const n=t.recipientCertificate.subjectPublicKeyInfo.algorithm.algorithmParams;if(n.constructor.blockName()!==asn1js__namespace.ObjectIdentifier.blockName())throw new Error(`Incorrect "recipientCertificate" for index ${e}`);switch(n.valueBlock.toString()){case"1.2.840.10045.3.1.7":s="P-256";break;case"1.3.132.0.34":s="P-384";break;case"1.3.132.0.35":s="P-521";break;default:throw new Error(`Incorrect curve OID for index ${e}`)}r=await t.recipientCertificate.getPublicKey({algorithm:{algorithm:{name:"ECDH",namedCurve:s},usages:[]}},a)}}const n=curveLengthByName[s],i=await a.generateKey({name:"ECDH",namedCurve:s},!0,["deriveBits"]),o=await a.exportKey("spki",i.publicKey),u=await a.deriveBits({name:"ECDH",public:r},i.privateKey,n),l=new AlgorithmIdentifier({schema:t.keyEncryptionAlgorithm.algorithmParams}),m=a.getAlgorithmByOID(l.algorithmId,!0,"aesKWAlgorithm");let h=m.length;const p=new ArrayBuffer(4),_=new Uint8Array(p);for(let e=3;e>=0;e--)_[e]=h,h>>=8;const S=new ECCCMSSharedInfo({keyInfo:new AlgorithmIdentifier({algorithmId:l.algorithmId}),entityUInfo:t.ukm,suppPubInfo:new asn1js__namespace.OctetString({valueHex:p})}).toSchema().toBER(!1),g=a.getAlgorithmByOID(t.keyEncryptionAlgorithm.algorithmId,!0,"ecdhAlgorithm"),f=await kdf(g.kdf,u,m.length,S,a),d=await a.importKey("raw",f,{name:"AES-KW"},!0,["wrapKey"]),E=await a.wrapKey("raw",c,d,{name:"AES-KW"}),A=new OriginatorIdentifierOrKey;return A.variant=3,A.value=OriginatorPublicKey.fromBER(o),t.originator=A,t.recipientEncryptedKeys.encryptedKeys[0].encryptedKey=new asn1js__namespace.OctetString({valueHex:E}),{ecdhPrivateKey:i.privateKey}},m=async e=>{const t=this.recipientInfos[e].value,s=a.getAlgorithmByOID(t.keyEncryptionAlgorithm.algorithmId,!0,"keyEncryptionAlgorithm");if("RSA-OAEP"===s.name){const e=t.keyEncryptionAlgorithm.algorithmParams,r=new RSAESOAEPParams({schema:e});if(s.hash=a.getAlgorithmByOID(r.hashAlgorithm.algorithmId),"name"in s.hash==!1)throw new Error(`Incorrect OID for hash algorithm: ${r.hashAlgorithm.algorithmId}`)}try{const e=await t.recipientCertificate.getPublicKey({algorithm:{algorithm:s,usages:["encrypt","wrapKey"]}},a),r=await a.encrypt(e.algorithm,e,u);t.encryptedKey=new asn1js__namespace.OctetString({valueHex:r})}catch{}},h=async e=>{const t=this.recipientInfos[e].value,s=a.getAlgorithmByOID(t.keyEncryptionAlgorithm.algorithmId,!0,"kekAlgorithm"),r=await a.importKey("raw",new Uint8Array(t.preDefinedKEK),s,!0,["wrapKey"]),n=await a.wrapKey("raw",c,r,s);t.encryptedKey=new asn1js__namespace.OctetString({valueHex:n})},p=async e=>{const t=this.recipientInfos[e].value;let s;if(!t.keyDerivationAlgorithm)throw new Error('Please append encoded "keyDerivationAlgorithm"');if(!t.keyDerivationAlgorithm.algorithmParams)throw new Error('Incorrectly encoded "keyDerivationAlgorithm"');try{s=new PBKDF2Params({schema:t.keyDerivationAlgorithm.algorithmParams})}catch(e){throw new Error('Incorrectly encoded "keyDerivationAlgorithm"')}const r=new Uint8Array(t.password),n=await a.importKey("raw",r,"PBKDF2",!1,["deriveKey"]),i=a.getAlgorithmByOID(t.keyEncryptionAlgorithm.algorithmId,!0,"kekAlgorithm");let o="SHA-1";if(s.prf){o=a.getAlgorithmByOID(s.prf.algorithmId,!0,"prfAlgorithm").hash.name}const u=new Uint8Array(s.salt.valueBlock.valueHex),l=s.iterationCount,m=await a.deriveKey({name:"PBKDF2",hash:{name:o},salt:u,iterations:l},n,i,!0,["wrapKey"]),h=await a.wrapKey("raw",c,m,i);t.encryptedKey=new asn1js__namespace.OctetString({valueHex:h})},_=[];for(let e=0;e<this.recipientInfos.length;e++)switch(this.recipientInfos[e].variant){case 1:_.push(await m(e));break;case 2:_.push(await l(e));break;case 3:_.push(await h(e));break;case 4:_.push(await p(e));break;default:throw new Error(`Unknown recipient type in array with index ${e}`)}return _}async decrypt(e,t,a=getCrypto(!0)){const s=t||{};if(e+1>this.recipientInfos.length)throw new Error('Maximum value for "index" is: '+(this.recipientInfos.length-1));const r=async e=>{const t=this.recipientInfos[e].value;let r,n,i;const c=t.originator;if(s.recipientCertificate){const t=s.recipientCertificate.subjectPublicKeyInfo.algorithm.algorithmParams;if(t.constructor.blockName()!==asn1js__namespace.ObjectIdentifier.blockName())throw new Error(`Incorrect "recipientCertificate" for index ${e}`);r=t.valueBlock.toString()}else{if(!c.value.algorithm.algorithmParams)throw new Error('Parameter "recipientCertificate" is mandatory for "KeyAgreeRecipientInfo" if algorithm params are missing from originator');{const t=c.value.algorithm.algorithmParams;if(t.constructor.blockName()!==asn1js__namespace.ObjectIdentifier.blockName())throw new Error(`Incorrect originator for index ${e}`);r=t.valueBlock.toString()}}if(!s.recipientPrivateKey)throw new Error('Parameter "recipientPrivateKey" is mandatory for "KeyAgreeRecipientInfo"');switch(r){case"1.2.840.10045.3.1.7":n="P-256",i=256;break;case"1.3.132.0.34":n="P-384",i=384;break;case"1.3.132.0.35":n="P-521",i=528;break;default:throw new Error(`Incorrect curve OID for index ${e}`)}let o,u=a;pvtsutils.BufferSourceConverter.isBufferSource(s.recipientPrivateKey)?o=await a.importKey("pkcs8",s.recipientPrivateKey,{name:"ECDH",namedCurve:n},!0,["deriveBits"]):(o=s.recipientPrivateKey,"crypto"in s&&s.crypto&&(u=s.crypto.subtle)),"algorithmParams"in c.value.algorithm==!1&&(c.value.algorithm.algorithmParams=new asn1js__namespace.ObjectIdentifier({value:r}));const l=c.value.toSchema().toBER(!1),m=await a.importKey("spki",l,{name:"ECDH",namedCurve:n},!0,[]),h=await u.deriveBits({name:"ECDH",public:m},o,i);async function p(e){e=e||!1;const s=new AlgorithmIdentifier({schema:t.keyEncryptionAlgorithm.algorithmParams}),r=a.getAlgorithmByOID(s.algorithmId,!0,"kwAlgorithm");let n=r.length;const i=new ArrayBuffer(4),c=new Uint8Array(i);for(let e=3;e>=0;e--)c[e]=n,n>>=8;const o={algorithmId:s.algorithmId};e&&(o.algorithmParams=new asn1js__namespace.Null);const u=new ECCCMSSharedInfo({keyInfo:new AlgorithmIdentifier(o),entityUInfo:t.ukm,suppPubInfo:new asn1js__namespace.OctetString({valueHex:i})}).toSchema().toBER(!1),l=a.getAlgorithmByOID(t.keyEncryptionAlgorithm.algorithmId,!0,"ecdhAlgorithm");if(!l.name)throw new Error(`Incorrect OID for key encryption algorithm: ${t.keyEncryptionAlgorithm.algorithmId}`);return kdf(l.kdf,h,r.length,u,a)}const _=await p(),S=async e=>a.importKey("raw",e,{name:"AES-KW"},!0,["unwrapKey"]),g=await S(_),f=async e=>{const s=this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId,r=a.getAlgorithmByOID(s,!0,"contentEncryptionAlgorithm");return a.unwrapKey("raw",t.recipientEncryptedKeys.encryptedKeys[0].encryptedKey.valueBlock.valueHexView,e,{name:"AES-KW"},r,!0,["decrypt"])};try{return await f(g)}catch{const e=await p(!0);return f(await S(e))}},n=async e=>{const t=this.recipientInfos[e].value;if(!s.recipientPrivateKey)throw new Error('Parameter "recipientPrivateKey" is mandatory for "KeyTransRecipientInfo"');const r=a.getAlgorithmByOID(t.keyEncryptionAlgorithm.algorithmId,!0,"keyEncryptionAlgorithm");if("RSA-OAEP"===r.name){const e=t.keyEncryptionAlgorithm.algorithmParams,s=new RSAESOAEPParams({schema:e});if(r.hash=a.getAlgorithmByOID(s.hashAlgorithm.algorithmId),"name"in r.hash==!1)throw new Error(`Incorrect OID for hash algorithm: ${s.hashAlgorithm.algorithmId}`)}let n,i=a;pvtsutils.BufferSourceConverter.isBufferSource(s.recipientPrivateKey)?n=await a.importKey("pkcs8",s.recipientPrivateKey,r,!0,["decrypt"]):(n=s.recipientPrivateKey,"crypto"in s&&s.crypto&&(i=s.crypto.subtle));const c=await i.decrypt(n.algorithm,n,t.encryptedKey.valueBlock.valueHexView),o=this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId,u=a.getAlgorithmByOID(o,!0,"contentEncryptionAlgorithm");if("name"in u==!1)throw new Error(`Incorrect "contentEncryptionAlgorithm": ${o}`);return a.importKey("raw",c,u,!0,["decrypt"])},i=async e=>{const t=this.recipientInfos[e].value;if(!s.preDefinedData)throw new Error('Parameter "preDefinedData" is mandatory for "KEKRecipientInfo"');const r=a.getAlgorithmByOID(t.keyEncryptionAlgorithm.algorithmId,!0,"kekAlgorithm"),n=await a.importKey("raw",s.preDefinedData,r,!0,["unwrapKey"]),i=this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId,c=a.getAlgorithmByOID(i,!0,"contentEncryptionAlgorithm");if(!c.name)throw new Error(`Incorrect "contentEncryptionAlgorithm": ${i}`);return a.unwrapKey("raw",t.encryptedKey.valueBlock.valueHexView,n,r,c,!0,["decrypt"])},c=async e=>{const t=this.recipientInfos[e].value;let r;if(!s.preDefinedData)throw new Error('Parameter "preDefinedData" is mandatory for "KEKRecipientInfo"');if(!t.keyDerivationAlgorithm)throw new Error('Please append encoded "keyDerivationAlgorithm"');if(!t.keyDerivationAlgorithm.algorithmParams)throw new Error('Incorrectly encoded "keyDerivationAlgorithm"');try{r=new PBKDF2Params({schema:t.keyDerivationAlgorithm.algorithmParams})}catch(e){throw new Error('Incorrectly encoded "keyDerivationAlgorithm"')}const n=await a.importKey("raw",s.preDefinedData,"PBKDF2",!1,["deriveKey"]),i=a.getAlgorithmByOID(t.keyEncryptionAlgorithm.algorithmId,!0,"keyEncryptionAlgorithm"),c=r.prf?a.getAlgorithmByOID(r.prf.algorithmId,!0,"prfAlgorithm").hash.name:"SHA-1",o=new Uint8Array(r.salt.valueBlock.valueHex),u=r.iterationCount,l=await a.deriveKey({name:"PBKDF2",hash:{name:c},salt:o,iterations:u},n,i,!0,["unwrapKey"]),m=this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId,h=a.getAlgorithmByOID(m,!0,"contentEncryptionAlgorithm");return a.unwrapKey("raw",t.encryptedKey.valueBlock.valueHexView,l,i,h,!0,["decrypt"])};let o;switch(this.recipientInfos[e].variant){case 1:o=await n(e);break;case 2:o=await r(e);break;case 3:o=await i(e);break;case 4:o=await c(e);break;default:throw new Error(`Unknown recipient type in array with index ${e}`)}const u=this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmId,l=a.getAlgorithmByOID(u,!0,"contentEncryptionAlgorithm"),m=this.encryptedContentInfo.contentEncryptionAlgorithm.algorithmParams.valueBlock.valueHex,h=new Uint8Array(m);if(!this.encryptedContentInfo.encryptedContent)throw new Error("Required property `encryptedContent` is empty");const p=this.encryptedContentInfo.getEncryptedContent();return a.decrypt({name:l.name,iv:h},o,p)}}EnvelopedData.CLASS_NAME="EnvelopedData";const SAFE_CONTENTS="safeContents",PARSED_VALUE$1="parsedValue",CONTENT_INFOS="contentInfos";class AuthenticatedSafe extends PkiObject{constructor(e={}){super(),this.safeContents=pvutils__namespace.getParametersValue(e,SAFE_CONTENTS,AuthenticatedSafe.defaultValues(SAFE_CONTENTS)),"parsedValue"in e&&(this.parsedValue=pvutils__namespace.getParametersValue(e,"parsedValue",AuthenticatedSafe.defaultValues("parsedValue"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case SAFE_CONTENTS:return[];case"parsedValue":return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case SAFE_CONTENTS:return 0===t.length;case"parsedValue":return t instanceof Object&&0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Repeated({name:t.contentInfos||"",value:ContentInfo.schema()})]})}fromSchema(e){pvutils__namespace.clearProps(e,[CONTENT_INFOS]);const t=asn1js__namespace.compareSchema(e,e,AuthenticatedSafe.schema({names:{contentInfos:CONTENT_INFOS}}));AsnError.assertSchema(t,this.className),this.safeContents=Array.from(t.result.contentInfos,(e=>new ContentInfo({schema:e})))}toSchema(){return new asn1js__namespace.Sequence({value:Array.from(this.safeContents,(e=>e.toSchema()))})}toJSON(){return{safeContents:Array.from(this.safeContents,(e=>e.toJSON()))}}async parseInternalValues(e,t=getCrypto(!0)){if(ParameterError.assert(e,SAFE_CONTENTS),ArgumentError.assert(e.safeContents,SAFE_CONTENTS,"Array"),e.safeContents.length!==this.safeContents.length)throw new ArgumentError('Length of "parameters.safeContents" must be equal to "this.safeContents.length"');this.parsedValue={safeContents:[]};for(const[a,s]of this.safeContents.entries()){const r=e.safeContents[a],n=`parameters.safeContents[${a}]`;switch(s.contentType){case id_ContentType_Data:{ArgumentError.assert(s.content,"this.safeContents[j].content",asn1js__namespace.OctetString);const e=s.content.getValue();this.parsedValue.safeContents.push({privacyMode:0,value:SafeContents.fromBER(e)})}break;case"1.2.840.113549.1.7.3":{const e=new EnvelopedData({schema:s.content});ParameterError.assert(n,r,"recipientCertificate","recipientKey");const a=r,i=a.recipientCertificate,c=a.recipientKey,o=await e.decrypt(0,{recipientCertificate:i,recipientPrivateKey:c},t);this.parsedValue.safeContents.push({privacyMode:2,value:SafeContents.fromBER(o)})}break;case"1.2.840.113549.1.7.6":{const e=new EncryptedData({schema:s.content});ParameterError.assert(n,r,"password");const a=r.password,i=await e.decrypt({password:a},t);this.parsedValue.safeContents.push({privacyMode:1,value:SafeContents.fromBER(i)})}break;default:throw new Error(`Unknown "contentType" for AuthenticatedSafe: " ${s.contentType}`)}}}async makeInternalValues(e,t=getCrypto(!0)){if(!this.parsedValue)throw new Error('Please run "parseValues" first or add "parsedValue" manually');if(ArgumentError.assert(this.parsedValue,"this.parsedValue","object"),ArgumentError.assert(this.parsedValue.safeContents,"this.parsedValue.safeContents","Array"),ArgumentError.assert(e,"parameters","object"),ParameterError.assert(e,"safeContents"),ArgumentError.assert(e.safeContents,"parameters.safeContents","Array"),e.safeContents.length!==this.parsedValue.safeContents.length)throw new ArgumentError('Length of "parameters.safeContents" must be equal to "this.parsedValue.safeContents"');this.safeContents=[];for(const[a,s]of this.parsedValue.safeContents.entries())switch(ParameterError.assert("content",s,"privacyMode","value"),ArgumentError.assert(s.value,"content.value",SafeContents),s.privacyMode){case 0:{const e=s.value.toSchema().toBER(!1);this.safeContents.push(new ContentInfo({contentType:"1.2.840.113549.1.7.1",content:new asn1js__namespace.OctetString({valueHex:e})}))}break;case 1:{const r=new EncryptedData,n=e.safeContents[a];n.contentToEncrypt=s.value.toSchema().toBER(!1),await r.encrypt(n,t),this.safeContents.push(new ContentInfo({contentType:"1.2.840.113549.1.7.6",content:r.toSchema()}))}break;case 2:{const r=new EnvelopedData,n=s.value.toSchema().toBER(!1),i=e.safeContents[a];switch(ParameterError.assert(`parameters.safeContents[${a}]`,i,"encryptingCertificate","encryptionAlgorithm"),!0){case"aes-cbc"===i.encryptionAlgorithm.name.toLowerCase():case"aes-gcm"===i.encryptionAlgorithm.name.toLowerCase():break;default:throw new Error(`Incorrect parameter "encryptionAlgorithm" in "parameters.safeContents[i]": ${i.encryptionAlgorithm}`)}switch(!0){case 128===i.encryptionAlgorithm.length:case 192===i.encryptionAlgorithm.length:case 256===i.encryptionAlgorithm.length:break;default:throw new Error(`Incorrect parameter "encryptionAlgorithm.length" in "parameters.safeContents[i]": ${i.encryptionAlgorithm.length}`)}const c=i.encryptionAlgorithm;r.addRecipientByCertificate(i.encryptingCertificate,{},void 0,t),await r.encrypt(c,n,t),this.safeContents.push(new ContentInfo({contentType:"1.2.840.113549.1.7.3",content:r.toSchema()}))}break;default:throw new Error(`Incorrect value for "content.privacyMode": ${s.privacyMode}`)}return this}}AuthenticatedSafe.CLASS_NAME="AuthenticatedSafe";const HASH_ALGORITHM$1="hashAlgorithm",ISSUER_NAME_HASH="issuerNameHash",ISSUER_KEY_HASH="issuerKeyHash",SERIAL_NUMBER$1="serialNumber",CLEAR_PROPS$j=["hashAlgorithm","issuerNameHash","issuerKeyHash","serialNumber"];class CertID extends PkiObject{static async create(e,t,a=getCrypto(!0)){const s=new CertID;return await s.createForCertificate(e,t,a),s}constructor(e={}){super(),this.hashAlgorithm=pvutils__namespace.getParametersValue(e,"hashAlgorithm",CertID.defaultValues("hashAlgorithm")),this.issuerNameHash=pvutils__namespace.getParametersValue(e,"issuerNameHash",CertID.defaultValues("issuerNameHash")),this.issuerKeyHash=pvutils__namespace.getParametersValue(e,"issuerKeyHash",CertID.defaultValues("issuerKeyHash")),this.serialNumber=pvutils__namespace.getParametersValue(e,"serialNumber",CertID.defaultValues("serialNumber")),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"hashAlgorithm":return new AlgorithmIdentifier;case"issuerNameHash":case"issuerKeyHash":return new asn1js__namespace.OctetString;case"serialNumber":return new asn1js__namespace.Integer;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"hashAlgorithm":return""===t.algorithmId&&"algorithmParams"in t==!1;case"issuerNameHash":case"issuerKeyHash":case"serialNumber":return t.isEqual(CertID.defaultValues("serialNumber"));default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[AlgorithmIdentifier.schema(t.hashAlgorithmObject||{names:{blockName:t.hashAlgorithm||""}}),new asn1js__namespace.OctetString({name:t.issuerNameHash||""}),new asn1js__namespace.OctetString({name:t.issuerKeyHash||""}),new asn1js__namespace.Integer({name:t.serialNumber||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$j);const t=asn1js__namespace.compareSchema(e,e,CertID.schema({names:{hashAlgorithm:"hashAlgorithm",issuerNameHash:"issuerNameHash",issuerKeyHash:"issuerKeyHash",serialNumber:"serialNumber"}}));AsnError.assertSchema(t,this.className),this.hashAlgorithm=new AlgorithmIdentifier({schema:t.result.hashAlgorithm}),this.issuerNameHash=t.result.issuerNameHash,this.issuerKeyHash=t.result.issuerKeyHash,this.serialNumber=t.result.serialNumber}toSchema(){return new asn1js__namespace.Sequence({value:[this.hashAlgorithm.toSchema(),this.issuerNameHash,this.issuerKeyHash,this.serialNumber]})}toJSON(){return{hashAlgorithm:this.hashAlgorithm.toJSON(),issuerNameHash:this.issuerNameHash.toJSON(),issuerKeyHash:this.issuerKeyHash.toJSON(),serialNumber:this.serialNumber.toJSON()}}isEqual(e){return this.hashAlgorithm.algorithmId===e.hashAlgorithm.algorithmId&&(!!pvtsutils__namespace.BufferSourceConverter.isEqual(this.issuerNameHash.valueBlock.valueHexView,e.issuerNameHash.valueBlock.valueHexView)&&(!!pvtsutils__namespace.BufferSourceConverter.isEqual(this.issuerKeyHash.valueBlock.valueHexView,e.issuerKeyHash.valueBlock.valueHexView)&&!!this.serialNumber.isEqual(e.serialNumber)))}async createForCertificate(e,t,a=getCrypto(!0)){ParameterError.assert(t,"hashAlgorithm","issuerCertificate");const s=a.getOIDByAlgorithm({name:t.hashAlgorithm},!0,"hashAlgorithm");this.hashAlgorithm=new AlgorithmIdentifier({algorithmId:s,algorithmParams:new asn1js__namespace.Null});const r=t.issuerCertificate;this.serialNumber=e.serialNumber;const n=await a.digest({name:t.hashAlgorithm},r.subject.toSchema().toBER(!1));this.issuerNameHash=new asn1js__namespace.OctetString({valueHex:n});const i=r.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHexView,c=await a.digest({name:t.hashAlgorithm},i);this.issuerKeyHash=new asn1js__namespace.OctetString({valueHex:c})}}CertID.CLASS_NAME="CertID";const CERT_ID="certID",CERT_STATUS="certStatus",THIS_UPDATE="thisUpdate",NEXT_UPDATE="nextUpdate",SINGLE_EXTENSIONS="singleExtensions",CLEAR_PROPS$i=[CERT_ID,CERT_STATUS,THIS_UPDATE,NEXT_UPDATE,SINGLE_EXTENSIONS];class SingleResponse extends PkiObject{constructor(e={}){super(),this.certID=pvutils__namespace.getParametersValue(e,CERT_ID,SingleResponse.defaultValues(CERT_ID)),this.certStatus=pvutils__namespace.getParametersValue(e,CERT_STATUS,SingleResponse.defaultValues(CERT_STATUS)),this.thisUpdate=pvutils__namespace.getParametersValue(e,THIS_UPDATE,SingleResponse.defaultValues(THIS_UPDATE)),NEXT_UPDATE in e&&(this.nextUpdate=pvutils__namespace.getParametersValue(e,NEXT_UPDATE,SingleResponse.defaultValues(NEXT_UPDATE))),SINGLE_EXTENSIONS in e&&(this.singleExtensions=pvutils__namespace.getParametersValue(e,SINGLE_EXTENSIONS,SingleResponse.defaultValues(SINGLE_EXTENSIONS))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case CERT_ID:return new CertID;case CERT_STATUS:return{};case THIS_UPDATE:case NEXT_UPDATE:return new Date(0,0,0);case SINGLE_EXTENSIONS:return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case CERT_ID:return CertID.compareWithDefault("hashAlgorithm",t.hashAlgorithm)&&CertID.compareWithDefault("issuerNameHash",t.issuerNameHash)&&CertID.compareWithDefault("issuerKeyHash",t.issuerKeyHash)&&CertID.compareWithDefault("serialNumber",t.serialNumber);case CERT_STATUS:return 0===Object.keys(t).length;case THIS_UPDATE:case NEXT_UPDATE:return t===SingleResponse.defaultValues(e);default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[CertID.schema(t.certID||{}),new asn1js__namespace.Choice({value:[new asn1js__namespace.Primitive({name:t.certStatus||"",idBlock:{tagClass:3,tagNumber:0}}),new asn1js__namespace.Constructed({name:t.certStatus||"",idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.GeneralizedTime,new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Enumerated]})]}),new asn1js__namespace.Primitive({name:t.certStatus||"",idBlock:{tagClass:3,tagNumber:2},lenBlock:{length:1}})]}),new asn1js__namespace.GeneralizedTime({name:t.thisUpdate||""}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.GeneralizedTime({name:t.nextUpdate||""})]}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[Extensions.schema(t.singleExtensions||{})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$i);const t=asn1js__namespace.compareSchema(e,e,SingleResponse.schema({names:{certID:{names:{blockName:CERT_ID}},certStatus:CERT_STATUS,thisUpdate:THIS_UPDATE,nextUpdate:NEXT_UPDATE,singleExtensions:{names:{blockName:SINGLE_EXTENSIONS}}}}));AsnError.assertSchema(t,this.className),this.certID=new CertID({schema:t.result.certID}),this.certStatus=t.result.certStatus,this.thisUpdate=t.result.thisUpdate.toDate(),NEXT_UPDATE in t.result&&(this.nextUpdate=t.result.nextUpdate.toDate()),SINGLE_EXTENSIONS in t.result&&(this.singleExtensions=Array.from(t.result.singleExtensions.valueBlock.value,(e=>new Extension({schema:e}))))}toSchema(){const e=[];return e.push(this.certID.toSchema()),e.push(this.certStatus),e.push(new asn1js__namespace.GeneralizedTime({valueDate:this.thisUpdate})),this.nextUpdate&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.GeneralizedTime({valueDate:this.nextUpdate})]})),this.singleExtensions&&e.push(new asn1js__namespace.Sequence({value:Array.from(this.singleExtensions,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={certID:this.certID.toJSON(),certStatus:this.certStatus.toJSON(),thisUpdate:this.thisUpdate};return this.nextUpdate&&(e.nextUpdate=this.nextUpdate),this.singleExtensions&&(e.singleExtensions=Array.from(this.singleExtensions,(e=>e.toJSON()))),e}}SingleResponse.CLASS_NAME="SingleResponse";const TBS$2="tbs",VERSION$7="version",RESPONDER_ID="responderID",PRODUCED_AT="producedAt",RESPONSES="responses",RESPONSE_EXTENSIONS="responseExtensions",RESPONSE_DATA="ResponseData",RESPONSE_DATA_VERSION=`${RESPONSE_DATA}.version`,RESPONSE_DATA_RESPONDER_ID=`${RESPONSE_DATA}.${RESPONDER_ID}`,RESPONSE_DATA_PRODUCED_AT=`${RESPONSE_DATA}.${PRODUCED_AT}`,RESPONSE_DATA_RESPONSES=`${RESPONSE_DATA}.${RESPONSES}`,RESPONSE_DATA_RESPONSE_EXTENSIONS=`${RESPONSE_DATA}.${RESPONSE_EXTENSIONS}`,CLEAR_PROPS$h=[RESPONSE_DATA,RESPONSE_DATA_VERSION,RESPONSE_DATA_RESPONDER_ID,RESPONSE_DATA_PRODUCED_AT,RESPONSE_DATA_RESPONSES,RESPONSE_DATA_RESPONSE_EXTENSIONS];class ResponseData extends PkiObject{get tbs(){return pvtsutils__namespace.BufferSourceConverter.toArrayBuffer(this.tbsView)}set tbs(e){this.tbsView=new Uint8Array(e)}constructor(e={}){super(),this.tbsView=new Uint8Array(pvutils__namespace.getParametersValue(e,"tbs",ResponseData.defaultValues("tbs"))),"version"in e&&(this.version=pvutils__namespace.getParametersValue(e,"version",ResponseData.defaultValues("version"))),this.responderID=pvutils__namespace.getParametersValue(e,RESPONDER_ID,ResponseData.defaultValues(RESPONDER_ID)),this.producedAt=pvutils__namespace.getParametersValue(e,PRODUCED_AT,ResponseData.defaultValues(PRODUCED_AT)),this.responses=pvutils__namespace.getParametersValue(e,RESPONSES,ResponseData.defaultValues(RESPONSES)),RESPONSE_EXTENSIONS in e&&(this.responseExtensions=pvutils__namespace.getParametersValue(e,RESPONSE_EXTENSIONS,ResponseData.defaultValues(RESPONSE_EXTENSIONS))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case"tbs":return EMPTY_BUFFER;case RESPONDER_ID:return{};case PRODUCED_AT:return new Date(0,0,0);case RESPONSES:case RESPONSE_EXTENSIONS:return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"tbs":return 0===t.byteLength;case RESPONDER_ID:return 0===Object.keys(t).length;case PRODUCED_AT:return t===ResponseData.defaultValues(e);case RESPONSES:case RESPONSE_EXTENSIONS:return 0===t.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||RESPONSE_DATA,value:[new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Integer({name:t.version||RESPONSE_DATA_VERSION})]}),new asn1js__namespace.Choice({value:[new asn1js__namespace.Constructed({name:t.responderID||RESPONSE_DATA_RESPONDER_ID,idBlock:{tagClass:3,tagNumber:1},value:[RelativeDistinguishedNames.schema(t.ResponseDataByName||{names:{blockName:"ResponseData.byName"}})]}),new asn1js__namespace.Constructed({name:t.responderID||RESPONSE_DATA_RESPONDER_ID,idBlock:{tagClass:3,tagNumber:2},value:[new asn1js__namespace.OctetString({name:t.ResponseDataByKey||"ResponseData.byKey"})]})]}),new asn1js__namespace.GeneralizedTime({name:t.producedAt||RESPONSE_DATA_PRODUCED_AT}),new asn1js__namespace.Sequence({value:[new asn1js__namespace.Repeated({name:RESPONSE_DATA_RESPONSES,value:SingleResponse.schema(t.response||{})})]}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[Extensions.schema(t.extensions||{names:{blockName:RESPONSE_DATA_RESPONSE_EXTENSIONS}})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$h);const t=asn1js__namespace.compareSchema(e,e,ResponseData.schema());AsnError.assertSchema(t,this.className),this.tbsView=t.result.ResponseData.valueBeforeDecodeView,RESPONSE_DATA_VERSION in t.result&&(this.version=t.result[RESPONSE_DATA_VERSION].valueBlock.valueDec),1===t.result[RESPONSE_DATA_RESPONDER_ID].idBlock.tagNumber?this.responderID=new RelativeDistinguishedNames({schema:t.result[RESPONSE_DATA_RESPONDER_ID].valueBlock.value[0]}):this.responderID=t.result[RESPONSE_DATA_RESPONDER_ID].valueBlock.value[0],this.producedAt=t.result[RESPONSE_DATA_PRODUCED_AT].toDate(),this.responses=Array.from(t.result[RESPONSE_DATA_RESPONSES],(e=>new SingleResponse({schema:e}))),RESPONSE_DATA_RESPONSE_EXTENSIONS in t.result&&(this.responseExtensions=Array.from(t.result[RESPONSE_DATA_RESPONSE_EXTENSIONS].valueBlock.value,(e=>new Extension({schema:e}))))}toSchema(e=!1){let t;if(!1===e){if(!this.tbsView.byteLength)return ResponseData.schema();const e=asn1js__namespace.fromBER(this.tbsView);AsnError.assert(e,"TBS Response Data"),t=e.result}else{const e=[];"version"in this&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Integer({value:this.version})]})),this.responderID instanceof RelativeDistinguishedNames?e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:[this.responderID.toSchema()]})):e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:2},value:[this.responderID]})),e.push(new asn1js__namespace.GeneralizedTime({valueDate:this.producedAt})),e.push(new asn1js__namespace.Sequence({value:Array.from(this.responses,(e=>e.toSchema()))})),this.responseExtensions&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.Sequence({value:Array.from(this.responseExtensions,(e=>e.toSchema()))})]})),t=new asn1js__namespace.Sequence({value:e})}return t}toJSON(){const e={};return"version"in this&&(e.version=this.version),this.responderID&&(e.responderID=this.responderID),this.producedAt&&(e.producedAt=this.producedAt),this.responses&&(e.responses=Array.from(this.responses,(e=>e.toJSON()))),this.responseExtensions&&(e.responseExtensions=Array.from(this.responseExtensions,(e=>e.toJSON()))),e}}ResponseData.CLASS_NAME="ResponseData";const TRUSTED_CERTS="trustedCerts",CERTS$2="certs",CRLS$1="crls",OCSPS$1="ocsps",CHECK_DATE="checkDate",FIND_ORIGIN="findOrigin",FIND_ISSUER="findIssuer";exports.ChainValidationCode=void 0,function(e){e[e.unknown=-1]="unknown",e[e.success=0]="success",e[e.noRevocation=11]="noRevocation",e[e.noPath=60]="noPath",e[e.noValidPath=97]="noValidPath"}(exports.ChainValidationCode||(exports.ChainValidationCode={}));class ChainValidationError extends Error{constructor(e,t){super(t),this.name=ChainValidationError.NAME,this.code=e,this.message=t}}function isTrusted(e,t){for(let a=0;a<t.length;a++)if(pvtsutils__namespace.BufferSourceConverter.isEqual(e.tbsView,t[a].tbsView))return!0;return!1}ChainValidationError.NAME="ChainValidationError";class CertificateChainValidationEngine{constructor(e={}){this.trustedCerts=pvutils__namespace.getParametersValue(e,TRUSTED_CERTS,this.defaultValues(TRUSTED_CERTS)),this.certs=pvutils__namespace.getParametersValue(e,"certs",this.defaultValues("certs")),this.crls=pvutils__namespace.getParametersValue(e,"crls",this.defaultValues("crls")),this.ocsps=pvutils__namespace.getParametersValue(e,"ocsps",this.defaultValues("ocsps")),this.checkDate=pvutils__namespace.getParametersValue(e,CHECK_DATE,this.defaultValues(CHECK_DATE)),this.findOrigin=pvutils__namespace.getParametersValue(e,FIND_ORIGIN,this.defaultValues(FIND_ORIGIN)),this.findIssuer=pvutils__namespace.getParametersValue(e,FIND_ISSUER,this.defaultValues(FIND_ISSUER))}static defaultFindOrigin(e,t){0===e.tbsView.byteLength&&(e.tbsView=new Uint8Array(e.encodeTBS().toBER()));for(const a of t.certs)if(0===a.tbsView.byteLength&&(a.tbsView=new Uint8Array(a.encodeTBS().toBER())),pvtsutils__namespace.BufferSourceConverter.isEqual(e.tbsView,a.tbsView))return"Intermediate Certificates";for(const a of t.trustedCerts)if(0===a.tbsView.byteLength&&(a.tbsView=new Uint8Array(a.encodeTBS().toBER())),pvtsutils__namespace.BufferSourceConverter.isEqual(e.tbsView,a.tbsView))return"Trusted Certificates";return"Unknown"}async defaultFindIssuer(e,t,a=getCrypto(!0)){const s=[];let r=null,n=null,i=null;if(e.subject.isEqual(e.issuer))try{if(await e.verify(void 0,a))return[e]}catch(e){}if(e.extensions)for(const t of e.extensions)if("2.5.29.35"===t.extnID&&t.parsedValue instanceof AuthorityKeyIdentifier){t.parsedValue.keyIdentifier?r=t.parsedValue.keyIdentifier:(t.parsedValue.authorityCertIssuer&&(n=t.parsedValue.authorityCertIssuer),t.parsedValue.authorityCertSerialNumber&&(i=t.parsedValue.authorityCertSerialNumber));break}function c(t){if(null!==r&&t.extensions){let e=!1;for(const a of t.extensions)if("2.5.29.14"===a.extnID&&a.parsedValue){e=!0,pvtsutils__namespace.BufferSourceConverter.isEqual(a.parsedValue.valueBlock.valueHex,r.valueBlock.valueHexView)&&s.push(t);break}if(e)return}let a=!1;null!==i&&(a=t.serialNumber.isEqual(i)),null!==n?t.subject.isEqual(n)&&a&&s.push(t):e.issuer.isEqual(t.subject)&&s.push(t)}for(const e of t.trustedCerts)c(e);for(const e of t.certs)c(e);for(let t=s.length-1;t>=0;t--)try{!1===await e.verify(s[t],a)&&s.splice(t,1)}catch(e){s.splice(t,1)}return s}defaultValues(e){switch(e){case TRUSTED_CERTS:case"certs":case"crls":case"ocsps":return[];case CHECK_DATE:return new Date;case FIND_ORIGIN:return CertificateChainValidationEngine.defaultFindOrigin;case FIND_ISSUER:return this.defaultFindIssuer;default:throw new Error(`Invalid member name for CertificateChainValidationEngine class: ${e}`)}}async sort(e=!1,t=getCrypto(!0)){const a=[],s=async(e,t)=>{const a=[];function r(e){let t=!0;for(let a=0;a<e.length;a++){for(let s=0;s<e.length;s++)if(s!==a&&e[a]===e[s]){t=!1;break}if(!t)break}return t}if(isTrusted(e,this.trustedCerts))return[[e]];const n=await this.findIssuer(e,this,t);if(0===n.length)throw new Error("No valid certificate paths found");for(let i=0;i<n.length;i++){if(pvtsutils__namespace.BufferSourceConverter.isEqual(n[i].tbsView,e.tbsView)){a.push([n[i]]);continue}const c=await s(n[i],t);for(let e=0;e<c.length;e++){const t=c[e].slice();t.splice(0,0,n[i]),r(t)?a.push(t):a.push(c[e])}}return a},r=async e=>{const s=[],r=[],n=[];if(s.push(...a.filter((t=>e.issuer.isEqual(t.subject)))),0===s.length)return{status:1,statusMessage:"No certificate's issuers"};if(r.push(...this.crls.filter((t=>t.issuer.isEqual(e.issuer)))),0===r.length)return{status:2,statusMessage:"No CRLs for specific certificate issuer"};for(let e=0;e<r.length;e++){const a=r[e];if(!(a.nextUpdate&&a.nextUpdate.value<this.checkDate))for(let a=0;a<s.length;a++)try{if(await r[e].verify({issuerCertificate:s[a]},t)){n.push({crl:r[e],certificate:s[a]});break}}catch(e){}}return n.length?{status:0,statusMessage:"",result:n}:{status:3,statusMessage:"No valid CRLs found"}},n=async(e,a)=>{const s=t.getAlgorithmByOID(e.signatureAlgorithm.algorithmId);if(!s.name)return 1;if(!s.hash)return 1;for(let s=0;s<this.ocsps.length;s++){const r=this.ocsps[s],n=await r.getCertificateStatus(e,a,t);if(n.isForCertificate)return 0===n.status?0:1}return 2};async function i(e,t=!1){let a=!1,s=!1,r=!1,n=!1;if(e.extensions){for(let t=0;t<e.extensions.length;t++){const i=e.extensions[t];if(i.critical&&!i.parsedValue)return{result:!1,resultCode:6,resultMessage:`Unable to parse critical certificate extension: ${i.extnID}`};if("2.5.29.15"===i.extnID){r=!0;const e=new Uint8Array(i.parsedValue.valueBlock.valueHex);4==(4&e[0])&&(s=!0),2==(2&e[0])&&(n=!0)}"2.5.29.19"===i.extnID&&"cA"in i.parsedValue&&!0===i.parsedValue.cA&&(a=!0)}if(!0===s&&!1===a)return{result:!1,resultCode:3,resultMessage:'Unable to build certificate chain - using "keyCertSign" flag set without BasicConstraints'};if(!0===r&&!0===a&&!1===s)return{result:!1,resultCode:4,resultMessage:'Unable to build certificate chain - "keyCertSign" flag was not set'};if(!0===a&&!0===r&&t&&!1===n)return{result:!1,resultCode:5,resultMessage:'Unable to build certificate chain - intermediate certificate must have "cRLSign" key usage flag'}}return!1===a?{result:!1,resultCode:7,resultMessage:"Unable to build certificate chain - more than one possible end-user certificate"}:{result:!0,resultCode:0,resultMessage:""}}a.push(...this.trustedCerts),a.push(...this.certs);for(let e=0;e<a.length;e++)for(let t=0;t<a.length;t++)if(e!==t&&pvtsutils__namespace.BufferSourceConverter.isEqual(a[e].tbsView,a[t].tbsView)){a.splice(t,1),e=0;break}const c=a[a.length-1];let o;const u=[c];if(o=await s(c,t),0===o.length)throw new ChainValidationError(exports.ChainValidationCode.noPath,"Unable to find certificate path");for(let e=o.length-1;e>=0;e--){let t=!1;for(let a=0;a<o[e].length;a++){const s=o[e][a];for(let e=0;e<this.trustedCerts.length;e++)if(pvtsutils__namespace.BufferSourceConverter.isEqual(s.tbsView,this.trustedCerts[e].tbsView)){t=!0;break}if(t)break}t||o.splice(e,1)}if(0===o.length)throw new ChainValidationError(exports.ChainValidationCode.noValidPath,"No valid certificate paths found");let l=o[0].length,m=0;for(let e=0;e<o.length;e++)o[e].length<l&&(l=o[e].length,m=e);for(let e=0;e<o[m].length;e++)u.push(o[m][e]);if(o=await(async(t,a)=>{for(let e=0;e<t.length;e++)if(t[e].notBefore.value>a||t[e].notAfter.value<a)return{result:!1,resultCode:8,resultMessage:"The certificate is either not yet valid or expired"};if(t.length<2)return{result:!1,resultCode:9,resultMessage:"Too short certificate path"};for(let e=t.length-2;e>=0;e--)if(!1===t[e].issuer.isEqual(t[e].subject)&&!1===t[e].issuer.isEqual(t[e+1].subject))return{result:!1,resultCode:10,resultMessage:"Incorrect name chaining"};if(0!==this.crls.length||0!==this.ocsps.length)for(let a=0;a<t.length-1;a++){let s=2,c={status:0,statusMessage:""};if(0!==this.ocsps.length)switch(s=await n(t[a],t[a+1]),s){case 0:continue;case 1:return{result:!1,resultCode:12,resultMessage:"One of certificates was revoked via OCSP response"}}if(0!==this.crls.length){if(c=await r(t[a]),0===c.status&&c.result)for(let e=0;e<c.result.length;e++){if(c.result[e].crl.isCertificateRevoked(t[a]))return{result:!1,resultCode:12,resultMessage:"One of certificates had been revoked"};if(!1===(await i(c.result[e].certificate,!0)).result)return{result:!1,resultCode:13,resultMessage:"CRL issuer certificate is not a CA certificate or does not have crlSign flag"}}else if(!1===e)throw new ChainValidationError(exports.ChainValidationCode.noRevocation,`No revocation values found for one of certificates: ${c.statusMessage}`)}else if(2===s)return{result:!1,resultCode:11,resultMessage:"No revocation values found for one of certificates"};if(2===s&&2===c.status&&e){const e=t[a+1];let s=!1;if(e.extensions)for(const t of e.extensions)switch(t.extnID){case"2.5.29.31":case"2.5.29.46":case"1.3.6.1.5.5.7.1.1":s=!0}if(s)throw new ChainValidationError(exports.ChainValidationCode.noRevocation,`No revocation values found for one of certificates: ${c.statusMessage}`)}}for(const[e,a]of t.entries()){if(!e)continue;if(!(await i(a)).result)return{result:!1,resultCode:14,resultMessage:"One of intermediate certificates is not a CA certificate"}}return{result:!0}})(u,this.checkDate),!1===o.result)throw o;return u}async verify(e={},t=getCrypto(!0)){function a(e,t){const a=stringPrep(e),s=stringPrep(t),r=a.split("."),n=s.split("."),i=r.length,c=n.length;if(0===i||0===c||i<c)return!1;for(let e=0;e<i;e++)if(0===r[e].length)return!1;for(let e=0;e<c;e++)if(0===n[e].length){if(0===e){if(1===c)return!1;continue}return!1}for(let e=0;e<c;e++)if(0!==n[c-1-e].length&&0!==r[i-1-e].localeCompare(n[c-1-e]))return!1;return!0}function s(e,t){const s=stringPrep(e),r=stringPrep(t),n=s.split("@"),i=r.split("@");if(0===n.length||0===i.length||n.length<i.length)return!1;if(1===i.length){if(a(n[1],i[0])){const e=n[1].split("."),t=i[0].split(".");return 0===t[0].length||e.length===t.length}return!1}return 0===s.localeCompare(r)}function r(e,t){let s=stringPrep(e);const r=stringPrep(t),n=s.split("/");if(r.split("/").length>1)return!1;if(n.length>1)for(let e=0;e<n.length;e++)if(n[e].length>0&&":"!==n[e].charAt(n[e].length-1)){s=n[e].split(":")[0];break}if(a(s,r)){const e=s.split("."),t=r.split(".");return 0===t[0].length||e.length===t.length}return!1}function n(e,t){const a=e.valueBlock.valueHexView,s=t.valueBlock.valueHexView;if(4===a.length&&8===s.length){for(let e=0;e<4;e++)if((a[e]^s[e])&s[e+4])return!1;return!0}if(16===a.length&&32===s.length){for(let e=0;e<16;e++)if((a[e]^s[e])&s[e+16])return!1;return!0}return!1}function i(e,t){if(0===e.typesAndValues.length||0===t.typesAndValues.length)return!0;if(e.typesAndValues.length<t.typesAndValues.length)return!1;let a=!0,s=0;for(let r=0;r<t.typesAndValues.length;r++){let n=!1;for(let i=s;i<e.typesAndValues.length;i++)if(n=e.typesAndValues[i].isEqual(t.typesAndValues[r]),e.typesAndValues[i].type===t.typesAndValues[r].type&&(a=a&&n),!0===n){if(0===s||s===i){s=i+1;break}return!1}if(!1===n)return!1}return 0!==s&&a}try{if(0===this.certs.length)throw new Error("Empty certificate array");const c=e.passedWhenNotRevValues||!1,o=e.initialPolicySet||[id_AnyPolicy],u=e.initialExplicitPolicy||!1,l=e.initialPolicyMappingInhibit||!1,m=e.initialInhibitPolicy||!1,h=e.initialPermittedSubtreesSet||[],p=e.initialExcludedSubtreesSet||[],_=e.initialRequiredNameForms||[];let S=u,g=l,f=m;const d=[!1,!1,!1];let E=0,A=0,I=0,C=h,y=p;const v=_;let N=1;this.certs=await this.sort(c,t);const P=[];P.push(id_AnyPolicy);const R=[],T=new Array(this.certs.length-1);for(let e=0;e<this.certs.length-1;e++)T[e]=!0;R.push(T);const b=new Array(this.certs.length-1),w=new Array(this.certs.length-1);let O=S?this.certs.length-1:-1;for(let e=this.certs.length-2;e>=0;e--,N++){const t=this.certs[e];if(t.extensions){for(let a=0;a<t.extensions.length;a++){const s=t.extensions[a];if("2.5.29.32"===s.extnID){w[e]=s.parsedValue;for(let t=0;t<P.length;t++)if(P[t]===id_AnyPolicy){delete R[t][e];break}for(let t=0;t<s.parsedValue.certificatePolicies.length;t++){let a=-1;const r=s.parsedValue.certificatePolicies[t].policyIdentifier;for(let e=0;e<P.length;e++)if(r===P[e]){a=e;break}if(-1===a){P.push(r);const t=new Array(this.certs.length-1);t[e]=!0,R.push(t)}else R[a][e]=!0}}if("2.5.29.33"===s.extnID){if(g)return{result:!1,resultCode:98,resultMessage:"Policy mapping prohibited"};b[e]=s.parsedValue}"2.5.29.36"===s.extnID&&!1===S&&(0===s.parsedValue.requireExplicitPolicy?(S=!0,O=e):!1===d[0]?(d[0]=!0,E=s.parsedValue.requireExplicitPolicy):E=E>s.parsedValue.requireExplicitPolicy?s.parsedValue.requireExplicitPolicy:E,0===s.parsedValue.inhibitPolicyMapping?g=!0:!1===d[1]?(d[1]=!0,A=s.parsedValue.inhibitPolicyMapping+1):A=A>s.parsedValue.inhibitPolicyMapping+1?s.parsedValue.inhibitPolicyMapping+1:A),"2.5.29.54"===s.extnID&&!1===f&&(0===s.parsedValue.valueBlock.valueDec?f=!0:!1===d[2]?(d[2]=!0,I=s.parsedValue.valueBlock.valueDec):I=I>s.parsedValue.valueBlock.valueDec?s.parsedValue.valueBlock.valueDec:I)}if(!0===f){let t=-1;for(let e=0;e<P.length;e++)if(P[e]===id_AnyPolicy){t=e;break}-1!==t&&delete R[0][e]}!1===S&&!0===d[0]&&(E--,0===E&&(S=!0,O=e,d[0]=!1)),!1===g&&!0===d[1]&&(A--,0===A&&(g=!0,d[1]=!1)),!1===f&&!0===d[2]&&(I--,0===I&&(f=!0,d[2]=!1))}}for(let e=0;e<this.certs.length-1;e++)if(e<this.certs.length-2&&void 0!==b[e+1])for(let t=0;t<b[e+1].mappings.length;t++){if(b[e+1].mappings[t].issuerDomainPolicy===id_AnyPolicy||b[e+1].mappings[t].subjectDomainPolicy===id_AnyPolicy)return{result:!1,resultCode:99,resultMessage:'The "anyPolicy" should not be a part of policy mapping scheme'};let a=-1,s=-1;for(let r=0;r<P.length;r++)P[r]===b[e+1].mappings[t].issuerDomainPolicy&&(a=r),P[r]===b[e+1].mappings[t].subjectDomainPolicy&&(s=r);void 0!==R[a][e]&&delete R[a][e];for(let r=0;r<w[e].certificatePolicies.length;r++)if(b[e+1].mappings[t].subjectDomainPolicy===w[e].certificatePolicies[r].policyIdentifier&&-1!==a&&-1!==s)for(let t=0;t<=e;t++)void 0!==R[s][t]&&(R[a][t]=!0,delete R[s][t])}for(let e=0;e<P.length;e++)if(P[e]===id_AnyPolicy)for(let t=0;t<O;t++)delete R[e][t];const V=[];for(let e=0;e<R.length;e++){let t=!0;for(let a=0;a<this.certs.length-1;a++){let s=!1;if(a<O&&P[e]===id_AnyPolicy&&P.length>1){t=!1;break}if(void 0===R[e][a]){if(a>=O)for(let e=0;e<P.length;e++)if(P[e]===id_AnyPolicy){!0===R[e][a]&&(s=!0);break}if(!s){t=!1;break}}}!0===t&&V.push(P[e])}let D=[];if(1===o.length&&o[0]===id_AnyPolicy&&!1===S)D=o;else if(1===V.length&&V[0]===id_AnyPolicy)D=o;else for(let e=0;e<V.length;e++)for(let t=0;t<o.length;t++)if(o[t]===V[e]||o[t]===id_AnyPolicy){D.push(V[e]);break}const k={result:D.length>0,resultCode:0,resultMessage:D.length>0?"":'Zero "userConstrPolicies" array, no intersections with "authConstrPolicies"',authConstrPolicies:V,userConstrPolicies:D,explicitPolicyIndicator:S,policyMappings:b,certificatePath:this.certs};if(0===D.length)return k;if(!1===k.result)return k;N=1;for(let e=this.certs.length-2;e>=0;e--,N++){const t=this.certs[e];let c=[],o=[],u=[];if(t.extensions)for(let e=0;e<t.extensions.length;e++){const a=t.extensions[e];"2.5.29.30"===a.extnID&&("permittedSubtrees"in a.parsedValue&&(o=o.concat(a.parsedValue.permittedSubtrees)),"excludedSubtrees"in a.parsedValue&&(u=u.concat(a.parsedValue.excludedSubtrees))),"2.5.29.17"===a.extnID&&(c=c.concat(a.parsedValue.altNames))}let l=v.length<=0;for(let e=0;e<v.length;e++)switch(v[e].base.type){case 4:if(v[e].base.value.typesAndValues.length!==t.subject.typesAndValues.length)continue;l=!0;for(let a=0;a<t.subject.typesAndValues.length;a++)if(t.subject.typesAndValues[a].type!==v[e].base.value.typesAndValues[a].type){l=!1;break}if(!0===l)break}if(!1===l)throw k.result=!1,k.resultCode=21,k.resultMessage="No necessary name form found",k;const m=[[],[],[],[],[]];for(let e=0;e<C.length;e++)switch(C[e].base.type){case 1:m[0].push(C[e]);break;case 2:m[1].push(C[e]);break;case 4:m[2].push(C[e]);break;case 6:m[3].push(C[e]);break;case 7:m[4].push(C[e])}for(let e=0;e<5;e++){let o=!1,u=!1;const l=m[e];for(let m=0;m<l.length;m++){switch(e){case 0:if(c.length>0)for(let e=0;e<c.length;e++)1===c[e].type&&(u=!0,o=o||s(c[e].value,l[m].base.value));else for(let e=0;e<t.subject.typesAndValues.length;e++)"1.2.840.113549.1.9.1"!==t.subject.typesAndValues[e].type&&"0.9.2342.19200300.100.1.3"!==t.subject.typesAndValues[e].type||(u=!0,o=o||s(t.subject.typesAndValues[e].value.valueBlock.value,l[m].base.value));break;case 1:if(c.length>0)for(let e=0;e<c.length;e++)2===c[e].type&&(u=!0,o=o||a(c[e].value,l[m].base.value));break;case 2:u=!0,o=i(t.subject,l[m].base.value);break;case 3:if(c.length>0)for(let e=0;e<c.length;e++)6===c[e].type&&(u=!0,o=o||r(c[e].value,l[m].base.value));break;case 4:if(c.length>0)for(let e=0;e<c.length;e++)7===c[e].type&&(u=!0,o=o||n(c[e].value,l[m].base.value))}if(o)break}if(!1===o&&l.length>0&&u)throw k.result=!1,k.resultCode=41,k.resultMessage='Failed to meet "permitted sub-trees" name constraint',k}let h=!1;for(let e=0;e<y.length;e++){switch(y[e].base.type){case 1:if(c.length>=0)for(let t=0;t<c.length;t++)1===c[t].type&&(h=h||s(c[t].value,y[e].base.value));else for(let a=0;a<t.subject.typesAndValues.length;a++)"1.2.840.113549.1.9.1"!==t.subject.typesAndValues[a].type&&"0.9.2342.19200300.100.1.3"!==t.subject.typesAndValues[a].type||(h=h||s(t.subject.typesAndValues[a].value.valueBlock.value,y[e].base.value));break;case 2:if(c.length>0)for(let t=0;t<c.length;t++)2===c[t].type&&(h=h||a(c[t].value,y[e].base.value));break;case 4:h=h||i(t.subject,y[e].base.value);break;case 6:if(c.length>0)for(let t=0;t<c.length;t++)6===c[t].type&&(h=h||r(c[t].value,y[e].base.value));break;case 7:if(c.length>0)for(let t=0;t<c.length;t++)7===c[t].type&&(h=h||n(c[t].value,y[e].base.value))}if(h)break}if(!0===h)throw k.result=!1,k.resultCode=42,k.resultMessage='Failed to meet "excluded sub-trees" name constraint',k;C=C.concat(o),y=y.concat(u)}return k}catch(e){return e instanceof Error?e instanceof ChainValidationError?{result:!1,resultCode:e.code,resultMessage:e.message,error:e}:{result:!1,resultCode:exports.ChainValidationCode.unknown,resultMessage:e.message,error:e}:e&&"object"==typeof e&&"resultMessage"in e?e:{result:!1,resultCode:-1,resultMessage:`${e}`}}}}const TBS_RESPONSE_DATA="tbsResponseData",SIGNATURE_ALGORITHM$3="signatureAlgorithm",SIGNATURE$2="signature",CERTS$1="certs",BASIC_OCSP_RESPONSE="BasicOCSPResponse",BASIC_OCSP_RESPONSE_TBS_RESPONSE_DATA="BasicOCSPResponse.tbsResponseData",BASIC_OCSP_RESPONSE_SIGNATURE_ALGORITHM="BasicOCSPResponse.signatureAlgorithm",BASIC_OCSP_RESPONSE_SIGNATURE="BasicOCSPResponse.signature",BASIC_OCSP_RESPONSE_CERTS="BasicOCSPResponse.certs",CLEAR_PROPS$g=["BasicOCSPResponse.tbsResponseData","BasicOCSPResponse.signatureAlgorithm","BasicOCSPResponse.signature","BasicOCSPResponse.certs"];class BasicOCSPResponse extends PkiObject{constructor(e={}){super(),this.tbsResponseData=pvutils__namespace.getParametersValue(e,"tbsResponseData",BasicOCSPResponse.defaultValues("tbsResponseData")),this.signatureAlgorithm=pvutils__namespace.getParametersValue(e,"signatureAlgorithm",BasicOCSPResponse.defaultValues("signatureAlgorithm")),this.signature=pvutils__namespace.getParametersValue(e,"signature",BasicOCSPResponse.defaultValues("signature")),"certs"in e&&(this.certs=pvutils__namespace.getParametersValue(e,"certs",BasicOCSPResponse.defaultValues("certs"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"tbsResponseData":return new ResponseData;case"signatureAlgorithm":return new AlgorithmIdentifier;case"signature":return new asn1js__namespace.BitString;case"certs":return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"type":{let e=ResponseData.compareWithDefault("tbs",t.tbs)&&ResponseData.compareWithDefault("responderID",t.responderID)&&ResponseData.compareWithDefault("producedAt",t.producedAt)&&ResponseData.compareWithDefault("responses",t.responses);return"responseExtensions"in t&&(e=e&&ResponseData.compareWithDefault("responseExtensions",t.responseExtensions)),e}case"signatureAlgorithm":return""===t.algorithmId&&"algorithmParams"in t==!1;case"signature":return t.isEqual(BasicOCSPResponse.defaultValues(e));case"certs":return 0===t.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"BasicOCSPResponse",value:[ResponseData.schema(t.tbsResponseData||{names:{blockName:"BasicOCSPResponse.tbsResponseData"}}),AlgorithmIdentifier.schema(t.signatureAlgorithm||{names:{blockName:"BasicOCSPResponse.signatureAlgorithm"}}),new asn1js__namespace.BitString({name:t.signature||"BasicOCSPResponse.signature"}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Sequence({value:[new asn1js__namespace.Repeated({name:"BasicOCSPResponse.certs",value:Certificate.schema(t.certs||{})})]})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$g);const t=asn1js__namespace.compareSchema(e,e,BasicOCSPResponse.schema());AsnError.assertSchema(t,this.className),this.tbsResponseData=new ResponseData({schema:t.result["BasicOCSPResponse.tbsResponseData"]}),this.signatureAlgorithm=new AlgorithmIdentifier({schema:t.result["BasicOCSPResponse.signatureAlgorithm"]}),this.signature=t.result["BasicOCSPResponse.signature"],"BasicOCSPResponse.certs"in t.result&&(this.certs=Array.from(t.result["BasicOCSPResponse.certs"],(e=>new Certificate({schema:e}))))}toSchema(){const e=[];return e.push(this.tbsResponseData.toSchema()),e.push(this.signatureAlgorithm.toSchema()),e.push(this.signature),this.certs&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Sequence({value:Array.from(this.certs,(e=>e.toSchema()))})]})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={tbsResponseData:this.tbsResponseData.toJSON(),signatureAlgorithm:this.signatureAlgorithm.toJSON(),signature:this.signature.toJSON()};return this.certs&&(e.certs=Array.from(this.certs,(e=>e.toJSON()))),e}async getCertificateStatus(e,t,a=getCrypto(!0)){const s={isForCertificate:!1,status:2},r={},n=[];for(const s of this.tbsResponseData.responses){const i=a.getAlgorithmByOID(s.certID.hashAlgorithm.algorithmId,!0,"CertID.hashAlgorithm");if(!r[i.name]){r[i.name]=1;const s=new CertID;n.push(s),await s.createForCertificate(e,{hashAlgorithm:i.name,issuerCertificate:t},a)}}for(const e of this.tbsResponseData.responses)for(const t of n)if(e.certID.isEqual(t)){s.isForCertificate=!0;try{switch(e.certStatus.idBlock.isConstructed){case!0:1===e.certStatus.idBlock.tagNumber&&(s.status=1);break;case!1:switch(e.certStatus.idBlock.tagNumber){case 0:s.status=0;break;case 2:s.status=2}}}catch(e){}return s}return s}async sign(e,t="SHA-1",a=getCrypto(!0)){if(!e)throw new Error("Need to provide a private key for signing");const s=await a.getSignatureParameters(e,t),r=s.parameters.algorithm;if(!("name"in r))throw new Error("Empty algorithm");this.signatureAlgorithm=s.signatureAlgorithm,this.tbsResponseData.tbsView=new Uint8Array(this.tbsResponseData.toSchema(!0).toBER());const n=await a.signWithPrivateKey(this.tbsResponseData.tbsView,e,{algorithm:r});this.signature=new asn1js__namespace.BitString({valueHex:n})}async verify(e={},t=getCrypto(!0)){let a=null,s=-1;const r=e.trustedCerts||[];if(!this.certs)throw new Error("No certificates attached to the BasicOCSPResponse");switch(!0){case this.tbsResponseData.responderID instanceof RelativeDistinguishedNames:for(const[e,t]of this.certs.entries())if(t.subject.isEqual(this.tbsResponseData.responderID)){s=e;break}break;case this.tbsResponseData.responderID instanceof asn1js__namespace.OctetString:for(const[e,a]of this.certs.entries()){const r=await t.digest({name:"sha-1"},a.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHexView);if(pvutils__namespace.isEqualBuffer(r,this.tbsResponseData.responderID.valueBlock.valueHex)){s=e;break}}break;default:throw new Error("Wrong value for responderID")}if(-1===s)throw new Error("Correct certificate was not found in OCSP response");a=this.certs[s];const n=[a];for(const e of this.certs){const t=await checkCA(e,a);t&&n.push(t)}const i=new CertificateChainValidationEngine({certs:n,trustedCerts:r});if(!(await i.verify({},t)).result)throw new Error("Validation of signer's certificate failed");return t.verifyWithPublicKey(this.tbsResponseData.tbsView,this.signature,this.certs[s].subjectPublicKeyInfo,this.signatureAlgorithm)}}BasicOCSPResponse.CLASS_NAME="BasicOCSPResponse";const TBS$1="tbs",VERSION$6="version",SUBJECT="subject",SPKI="subjectPublicKeyInfo",ATTRIBUTES$1="attributes",SIGNATURE_ALGORITHM$2="signatureAlgorithm",SIGNATURE_VALUE="signatureValue",CSR_INFO="CertificationRequestInfo",CSR_INFO_VERSION=`${CSR_INFO}.version`,CSR_INFO_SUBJECT=`${CSR_INFO}.subject`,CSR_INFO_SPKI=`${CSR_INFO}.subjectPublicKeyInfo`,CSR_INFO_ATTRS=`${CSR_INFO}.attributes`,CLEAR_PROPS$f=[CSR_INFO,CSR_INFO_VERSION,CSR_INFO_SUBJECT,CSR_INFO_SPKI,CSR_INFO_ATTRS,"signatureAlgorithm",SIGNATURE_VALUE];function CertificationRequestInfo(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.CertificationRequestInfo||CSR_INFO,value:[new asn1js__namespace.Integer({name:t.CertificationRequestInfoVersion||CSR_INFO_VERSION}),RelativeDistinguishedNames.schema(t.subject||{names:{blockName:CSR_INFO_SUBJECT}}),PublicKeyInfo.schema({names:{blockName:CSR_INFO_SPKI}}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Repeated({optional:!0,name:t.CertificationRequestInfoAttributes||CSR_INFO_ATTRS,value:Attribute.schema(t.attributes||{})})]})]})}class CertificationRequest extends PkiObject{get tbs(){return pvtsutils__namespace.BufferSourceConverter.toArrayBuffer(this.tbsView)}set tbs(e){this.tbsView=new Uint8Array(e)}constructor(e={}){super(),this.tbsView=new Uint8Array(pvutils__namespace.getParametersValue(e,"tbs",CertificationRequest.defaultValues("tbs"))),this.version=pvutils__namespace.getParametersValue(e,"version",CertificationRequest.defaultValues("version")),this.subject=pvutils__namespace.getParametersValue(e,SUBJECT,CertificationRequest.defaultValues(SUBJECT)),this.subjectPublicKeyInfo=pvutils__namespace.getParametersValue(e,SPKI,CertificationRequest.defaultValues(SPKI)),"attributes"in e&&(this.attributes=pvutils__namespace.getParametersValue(e,"attributes",CertificationRequest.defaultValues("attributes"))),this.signatureAlgorithm=pvutils__namespace.getParametersValue(e,"signatureAlgorithm",CertificationRequest.defaultValues("signatureAlgorithm")),this.signatureValue=pvutils__namespace.getParametersValue(e,SIGNATURE_VALUE,CertificationRequest.defaultValues(SIGNATURE_VALUE)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"tbs":return EMPTY_BUFFER;case"version":return 0;case SUBJECT:return new RelativeDistinguishedNames;case SPKI:return new PublicKeyInfo;case"attributes":return[];case"signatureAlgorithm":return new AlgorithmIdentifier;case SIGNATURE_VALUE:return new asn1js__namespace.BitString;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({value:[CertificationRequestInfo(t.certificationRequestInfo||{}),new asn1js__namespace.Sequence({name:t.signatureAlgorithm||"signatureAlgorithm",value:[new asn1js__namespace.ObjectIdentifier,new asn1js__namespace.Any({optional:!0})]}),new asn1js__namespace.BitString({name:t.signatureValue||SIGNATURE_VALUE})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$f);const t=asn1js__namespace.compareSchema(e,e,CertificationRequest.schema());AsnError.assertSchema(t,this.className),this.tbsView=t.result.CertificationRequestInfo.valueBeforeDecodeView,this.version=t.result[CSR_INFO_VERSION].valueBlock.valueDec,this.subject=new RelativeDistinguishedNames({schema:t.result[CSR_INFO_SUBJECT]}),this.subjectPublicKeyInfo=new PublicKeyInfo({schema:t.result[CSR_INFO_SPKI]}),CSR_INFO_ATTRS in t.result&&(this.attributes=Array.from(t.result[CSR_INFO_ATTRS],(e=>new Attribute({schema:e})))),this.signatureAlgorithm=new AlgorithmIdentifier({schema:t.result.signatureAlgorithm}),this.signatureValue=t.result.signatureValue}encodeTBS(){const e=[new asn1js__namespace.Integer({value:this.version}),this.subject.toSchema(),this.subjectPublicKeyInfo.toSchema()];return"attributes"in this&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.attributes||[],(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toSchema(e=!1){let t;if(!1===e){if(0===this.tbsView.byteLength)return CertificationRequest.schema();const e=asn1js__namespace.fromBER(this.tbsView);AsnError.assert(e,"PKCS#10 Certificate Request"),t=e.result}else t=this.encodeTBS();return new asn1js__namespace.Sequence({value:[t,this.signatureAlgorithm.toSchema(),this.signatureValue]})}toJSON(){const e={tbs:pvtsutils__namespace.Convert.ToHex(this.tbsView),version:this.version,subject:this.subject.toJSON(),subjectPublicKeyInfo:this.subjectPublicKeyInfo.toJSON(),signatureAlgorithm:this.signatureAlgorithm.toJSON(),signatureValue:this.signatureValue.toJSON()};return"attributes"in this&&(e.attributes=Array.from(this.attributes||[],(e=>e.toJSON()))),e}async sign(e,t="SHA-1",a=getCrypto(!0)){if(!e)throw new Error("Need to provide a private key for signing");const s=await a.getSignatureParameters(e,t),r=s.parameters;this.signatureAlgorithm=s.signatureAlgorithm,this.tbsView=new Uint8Array(this.encodeTBS().toBER());const n=await a.signWithPrivateKey(this.tbsView,e,r);this.signatureValue=new asn1js__namespace.BitString({valueHex:n})}async verify(e=getCrypto(!0)){return e.verifyWithPublicKey(this.tbsView,this.signatureValue,this.subjectPublicKeyInfo,this.signatureAlgorithm)}async getPublicKey(e,t=getCrypto(!0)){return t.getPublicKey(this.subjectPublicKeyInfo,this.signatureAlgorithm,e)}}CertificationRequest.CLASS_NAME="CertificationRequest";const DIGEST_ALGORITHM$1="digestAlgorithm",DIGEST="digest",CLEAR_PROPS$e=["digestAlgorithm",DIGEST];class DigestInfo extends PkiObject{constructor(e={}){super(),this.digestAlgorithm=pvutils__namespace.getParametersValue(e,"digestAlgorithm",DigestInfo.defaultValues("digestAlgorithm")),this.digest=pvutils__namespace.getParametersValue(e,DIGEST,DigestInfo.defaultValues(DIGEST)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"digestAlgorithm":return new AlgorithmIdentifier;case DIGEST:return new asn1js__namespace.OctetString;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"digestAlgorithm":return AlgorithmIdentifier.compareWithDefault("algorithmId",t.algorithmId)&&"algorithmParams"in t==!1;case DIGEST:return t.isEqual(DigestInfo.defaultValues(e));default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[AlgorithmIdentifier.schema(t.digestAlgorithm||{names:{blockName:"digestAlgorithm"}}),new asn1js__namespace.OctetString({name:t.digest||DIGEST})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$e);const t=asn1js__namespace.compareSchema(e,e,DigestInfo.schema({names:{digestAlgorithm:{names:{blockName:"digestAlgorithm"}},digest:DIGEST}}));AsnError.assertSchema(t,this.className),this.digestAlgorithm=new AlgorithmIdentifier({schema:t.result.digestAlgorithm}),this.digest=t.result.digest}toSchema(){return new asn1js__namespace.Sequence({value:[this.digestAlgorithm.toSchema(),this.digest]})}toJSON(){return{digestAlgorithm:this.digestAlgorithm.toJSON(),digest:this.digest.toJSON()}}}DigestInfo.CLASS_NAME="DigestInfo";const E_CONTENT_TYPE="eContentType",E_CONTENT="eContent",CLEAR_PROPS$d=["eContentType",E_CONTENT];class EncapsulatedContentInfo extends PkiObject{constructor(e={}){if(super(),this.eContentType=pvutils__namespace.getParametersValue(e,"eContentType",EncapsulatedContentInfo.defaultValues("eContentType")),E_CONTENT in e&&(this.eContent=pvutils__namespace.getParametersValue(e,E_CONTENT,EncapsulatedContentInfo.defaultValues(E_CONTENT)),1===this.eContent.idBlock.tagClass&&4===this.eContent.idBlock.tagNumber&&!1===this.eContent.idBlock.isConstructed)){const e=new asn1js__namespace.OctetString({idBlock:{isConstructed:!0},isConstructed:!0});let t=0;const a=this.eContent.valueBlock.valueHexView.slice().buffer;let s=a.byteLength;for(;s>0;){const r=new Uint8Array(a,t,t+65536>a.byteLength?a.byteLength-t:65536),n=new ArrayBuffer(r.length),i=new Uint8Array(n);for(let e=0;e<i.length;e++)i[e]=r[e];e.valueBlock.value.push(new asn1js__namespace.OctetString({valueHex:n})),s-=r.length,t+=r.length}this.eContent=e}e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"eContentType":return"";case E_CONTENT:return new asn1js__namespace.OctetString;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"eContentType":return""===t;case E_CONTENT:return 1===t.idBlock.tagClass&&4===t.idBlock.tagNumber&&t.isEqual(EncapsulatedContentInfo.defaultValues(E_CONTENT));default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.eContentType||""}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Any({name:t.eContent||""})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$d);const t=asn1js__namespace.compareSchema(e,e,EncapsulatedContentInfo.schema({names:{eContentType:"eContentType",eContent:E_CONTENT}}));AsnError.assertSchema(t,this.className),this.eContentType=t.result.eContentType.valueBlock.toString(),E_CONTENT in t.result&&(this.eContent=t.result.eContent)}toSchema(){const e=[];return e.push(new asn1js__namespace.ObjectIdentifier({value:this.eContentType})),this.eContent&&!1===EncapsulatedContentInfo.compareWithDefault(E_CONTENT,this.eContent)&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[this.eContent]})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={eContentType:this.eContentType};return this.eContent&&!1===EncapsulatedContentInfo.compareWithDefault(E_CONTENT,this.eContent)&&(e.eContent=this.eContent.toJSON()),e}}EncapsulatedContentInfo.CLASS_NAME="EncapsulatedContentInfo";class KeyBag extends PrivateKeyInfo{constructor(e={}){super(e)}}const MAC="mac",MAC_SALT="macSalt",ITERATIONS="iterations",CLEAR_PROPS$c=[MAC,MAC_SALT,ITERATIONS];class MacData extends PkiObject{constructor(e={}){super(),this.mac=pvutils__namespace.getParametersValue(e,MAC,MacData.defaultValues(MAC)),this.macSalt=pvutils__namespace.getParametersValue(e,MAC_SALT,MacData.defaultValues(MAC_SALT)),ITERATIONS in e&&(this.iterations=pvutils__namespace.getParametersValue(e,ITERATIONS,MacData.defaultValues(ITERATIONS))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case MAC:return new DigestInfo;case MAC_SALT:return new asn1js__namespace.OctetString;case ITERATIONS:return 1;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case MAC:return DigestInfo.compareWithDefault("digestAlgorithm",t.digestAlgorithm)&&DigestInfo.compareWithDefault("digest",t.digest);case MAC_SALT:return t.isEqual(MacData.defaultValues(e));case ITERATIONS:return t===MacData.defaultValues(e);default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",optional:t.optional||!0,value:[DigestInfo.schema(t.mac||{names:{blockName:MAC}}),new asn1js__namespace.OctetString({name:t.macSalt||MAC_SALT}),new asn1js__namespace.Integer({optional:!0,name:t.iterations||ITERATIONS})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$c);const t=asn1js__namespace.compareSchema(e,e,MacData.schema({names:{mac:{names:{blockName:MAC}},macSalt:MAC_SALT,iterations:ITERATIONS}}));AsnError.assertSchema(t,this.className),this.mac=new DigestInfo({schema:t.result.mac}),this.macSalt=t.result.macSalt,ITERATIONS in t.result&&(this.iterations=t.result.iterations.valueBlock.valueDec)}toSchema(){const e=[this.mac.toSchema(),this.macSalt];return void 0!==this.iterations&&e.push(new asn1js__namespace.Integer({value:this.iterations})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={mac:this.mac.toJSON(),macSalt:this.macSalt.toJSON()};return void 0!==this.iterations&&(e.iterations=this.iterations),e}}MacData.CLASS_NAME="MacData";const HASH_ALGORITHM="hashAlgorithm",HASHED_MESSAGE="hashedMessage",CLEAR_PROPS$b=[HASH_ALGORITHM,HASHED_MESSAGE];class MessageImprint extends PkiObject{static async create(e,t,a=getCrypto(!0)){const s=a.getOIDByAlgorithm({name:e},!0,"hashAlgorithm"),r=await a.digest(e,t);return new MessageImprint({hashAlgorithm:new AlgorithmIdentifier({algorithmId:s,algorithmParams:new asn1js__namespace.Null}),hashedMessage:new asn1js__namespace.OctetString({valueHex:r})})}constructor(e={}){super(),this.hashAlgorithm=pvutils__namespace.getParametersValue(e,HASH_ALGORITHM,MessageImprint.defaultValues(HASH_ALGORITHM)),this.hashedMessage=pvutils__namespace.getParametersValue(e,HASHED_MESSAGE,MessageImprint.defaultValues(HASHED_MESSAGE)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case HASH_ALGORITHM:return new AlgorithmIdentifier;case HASHED_MESSAGE:return new asn1js__namespace.OctetString;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case HASH_ALGORITHM:return""===t.algorithmId&&"algorithmParams"in t==!1;case HASHED_MESSAGE:return 0===t.isEqual(MessageImprint.defaultValues(e));default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[AlgorithmIdentifier.schema(t.hashAlgorithm||{}),new asn1js__namespace.OctetString({name:t.hashedMessage||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$b);const t=asn1js__namespace.compareSchema(e,e,MessageImprint.schema({names:{hashAlgorithm:{names:{blockName:HASH_ALGORITHM}},hashedMessage:HASHED_MESSAGE}}));AsnError.assertSchema(t,this.className),this.hashAlgorithm=new AlgorithmIdentifier({schema:t.result.hashAlgorithm}),this.hashedMessage=t.result.hashedMessage}toSchema(){return new asn1js__namespace.Sequence({value:[this.hashAlgorithm.toSchema(),this.hashedMessage]})}toJSON(){return{hashAlgorithm:this.hashAlgorithm.toJSON(),hashedMessage:this.hashedMessage.toJSON()}}}MessageImprint.CLASS_NAME="MessageImprint";const REQ_CERT="reqCert",SINGLE_REQUEST_EXTENSIONS="singleRequestExtensions",CLEAR_PROPS$a=[REQ_CERT,"singleRequestExtensions"];class Request extends PkiObject{constructor(e={}){super(),this.reqCert=pvutils__namespace.getParametersValue(e,REQ_CERT,Request.defaultValues(REQ_CERT)),"singleRequestExtensions"in e&&(this.singleRequestExtensions=pvutils__namespace.getParametersValue(e,"singleRequestExtensions",Request.defaultValues("singleRequestExtensions"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case REQ_CERT:return new CertID;case"singleRequestExtensions":return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case REQ_CERT:return t.isEqual(Request.defaultValues(e));case"singleRequestExtensions":return 0===t.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[CertID.schema(t.reqCert||{}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[Extension.schema(t.extensions||{names:{blockName:t.singleRequestExtensions||""}})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$a);const t=asn1js__namespace.compareSchema(e,e,Request.schema({names:{reqCert:{names:{blockName:REQ_CERT}},extensions:{names:{blockName:"singleRequestExtensions"}}}}));AsnError.assertSchema(t,this.className),this.reqCert=new CertID({schema:t.result.reqCert}),"singleRequestExtensions"in t.result&&(this.singleRequestExtensions=Array.from(t.result.singleRequestExtensions.valueBlock.value,(e=>new Extension({schema:e}))))}toSchema(){const e=[];return e.push(this.reqCert.toSchema()),this.singleRequestExtensions&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Sequence({value:Array.from(this.singleRequestExtensions,(e=>e.toSchema()))})]})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={reqCert:this.reqCert.toJSON()};return this.singleRequestExtensions&&(e.singleRequestExtensions=Array.from(this.singleRequestExtensions,(e=>e.toJSON()))),e}}Request.CLASS_NAME="Request";const TBS="tbs",VERSION$5="version",REQUESTOR_NAME="requestorName",REQUEST_LIST="requestList",REQUEST_EXTENSIONS="requestExtensions",TBS_REQUEST$1="TBSRequest",TBS_REQUEST_VERSION="TBSRequest.version",TBS_REQUEST_REQUESTOR_NAME=`TBSRequest.${REQUESTOR_NAME}`,TBS_REQUEST_REQUESTS="TBSRequest.requests",TBS_REQUEST_REQUEST_EXTENSIONS=`TBSRequest.${REQUEST_EXTENSIONS}`,CLEAR_PROPS$9=["TBSRequest",TBS_REQUEST_VERSION,TBS_REQUEST_REQUESTOR_NAME,TBS_REQUEST_REQUESTS,TBS_REQUEST_REQUEST_EXTENSIONS];class TBSRequest extends PkiObject{get tbs(){return pvtsutils__namespace.BufferSourceConverter.toArrayBuffer(this.tbsView)}set tbs(e){this.tbsView=new Uint8Array(e)}constructor(e={}){super(),this.tbsView=new Uint8Array(pvutils__namespace.getParametersValue(e,TBS,TBSRequest.defaultValues(TBS))),"version"in e&&(this.version=pvutils__namespace.getParametersValue(e,"version",TBSRequest.defaultValues("version"))),REQUESTOR_NAME in e&&(this.requestorName=pvutils__namespace.getParametersValue(e,REQUESTOR_NAME,TBSRequest.defaultValues(REQUESTOR_NAME))),this.requestList=pvutils__namespace.getParametersValue(e,REQUEST_LIST,TBSRequest.defaultValues(REQUEST_LIST)),REQUEST_EXTENSIONS in e&&(this.requestExtensions=pvutils__namespace.getParametersValue(e,REQUEST_EXTENSIONS,TBSRequest.defaultValues(REQUEST_EXTENSIONS))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case TBS:return EMPTY_BUFFER;case"version":return 0;case REQUESTOR_NAME:return new GeneralName;case REQUEST_LIST:case REQUEST_EXTENSIONS:return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case TBS:return 0===t.byteLength;case"version":return t===TBSRequest.defaultValues(e);case REQUESTOR_NAME:return t.type===GeneralName.defaultValues("type")&&0===Object.keys(t.value).length;case REQUEST_LIST:case REQUEST_EXTENSIONS:return 0===t.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"TBSRequest",value:[new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Integer({name:t.TBSRequestVersion||TBS_REQUEST_VERSION})]}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[GeneralName.schema(t.requestorName||{names:{blockName:TBS_REQUEST_REQUESTOR_NAME}})]}),new asn1js__namespace.Sequence({name:t.requestList||"TBSRequest.requestList",value:[new asn1js__namespace.Repeated({name:t.requests||TBS_REQUEST_REQUESTS,value:Request.schema(t.requestNames||{})})]}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:2},value:[Extensions.schema(t.extensions||{names:{blockName:t.requestExtensions||TBS_REQUEST_REQUEST_EXTENSIONS}})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$9);const t=asn1js__namespace.compareSchema(e,e,TBSRequest.schema());AsnError.assertSchema(t,this.className),this.tbsView=t.result.TBSRequest.valueBeforeDecodeView,TBS_REQUEST_VERSION in t.result&&(this.version=t.result[TBS_REQUEST_VERSION].valueBlock.valueDec),TBS_REQUEST_REQUESTOR_NAME in t.result&&(this.requestorName=new GeneralName({schema:t.result[TBS_REQUEST_REQUESTOR_NAME]})),this.requestList=Array.from(t.result[TBS_REQUEST_REQUESTS],(e=>new Request({schema:e}))),TBS_REQUEST_REQUEST_EXTENSIONS in t.result&&(this.requestExtensions=Array.from(t.result[TBS_REQUEST_REQUEST_EXTENSIONS].valueBlock.value,(e=>new Extension({schema:e}))))}toSchema(e=!1){let t;if(!1===e){if(0===this.tbsView.byteLength)return TBSRequest.schema();const e=asn1js__namespace.fromBER(this.tbsView);if(AsnError.assert(e,"TBS Request"),!(e.result instanceof asn1js__namespace.Sequence))throw new Error("ASN.1 result should be SEQUENCE");t=e.result}else{const e=[];void 0!==this.version&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Integer({value:this.version})]})),this.requestorName&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:[this.requestorName.toSchema()]})),e.push(new asn1js__namespace.Sequence({value:Array.from(this.requestList,(e=>e.toSchema()))})),this.requestExtensions&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:2},value:[new asn1js__namespace.Sequence({value:Array.from(this.requestExtensions,(e=>e.toSchema()))})]})),t=new asn1js__namespace.Sequence({value:e})}return t}toJSON(){const e={};return null!=this.version&&(e.version=this.version),this.requestorName&&(e.requestorName=this.requestorName.toJSON()),e.requestList=Array.from(this.requestList,(e=>e.toJSON())),this.requestExtensions&&(e.requestExtensions=Array.from(this.requestExtensions,(e=>e.toJSON()))),e}}TBSRequest.CLASS_NAME="TBSRequest";const SIGNATURE_ALGORITHM$1="signatureAlgorithm",SIGNATURE$1="signature",CERTS="certs";class Signature extends PkiObject{constructor(e={}){super(),this.signatureAlgorithm=pvutils__namespace.getParametersValue(e,"signatureAlgorithm",Signature.defaultValues("signatureAlgorithm")),this.signature=pvutils__namespace.getParametersValue(e,"signature",Signature.defaultValues("signature")),CERTS in e&&(this.certs=pvutils__namespace.getParametersValue(e,CERTS,Signature.defaultValues(CERTS))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"signatureAlgorithm":return new AlgorithmIdentifier;case"signature":return new asn1js__namespace.BitString;case CERTS:return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"signatureAlgorithm":return""===t.algorithmId&&"algorithmParams"in t==!1;case"signature":return t.isEqual(Signature.defaultValues(e));case CERTS:return 0===t.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[AlgorithmIdentifier.schema(t.signatureAlgorithm||{}),new asn1js__namespace.BitString({name:t.signature||""}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Sequence({value:[new asn1js__namespace.Repeated({name:t.certs||"",value:Certificate.schema({})})]})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,["signatureAlgorithm","signature",CERTS]);const t=asn1js__namespace.compareSchema(e,e,Signature.schema({names:{signatureAlgorithm:{names:{blockName:"signatureAlgorithm"}},signature:"signature",certs:CERTS}}));AsnError.assertSchema(t,this.className),this.signatureAlgorithm=new AlgorithmIdentifier({schema:t.result.signatureAlgorithm}),this.signature=t.result.signature,CERTS in t.result&&(this.certs=Array.from(t.result.certs,(e=>new Certificate({schema:e}))))}toSchema(){const e=[];return e.push(this.signatureAlgorithm.toSchema()),e.push(this.signature),this.certs&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Sequence({value:Array.from(this.certs,(e=>e.toSchema()))})]})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={signatureAlgorithm:this.signatureAlgorithm.toJSON(),signature:this.signature.toJSON()};return this.certs&&(e.certs=Array.from(this.certs,(e=>e.toJSON()))),e}}Signature.CLASS_NAME="Signature";const TBS_REQUEST="tbsRequest",OPTIONAL_SIGNATURE="optionalSignature",CLEAR_PROPS$8=[TBS_REQUEST,OPTIONAL_SIGNATURE];class OCSPRequest extends PkiObject{constructor(e={}){super(),this.tbsRequest=pvutils__namespace.getParametersValue(e,TBS_REQUEST,OCSPRequest.defaultValues(TBS_REQUEST)),OPTIONAL_SIGNATURE in e&&(this.optionalSignature=pvutils__namespace.getParametersValue(e,OPTIONAL_SIGNATURE,OCSPRequest.defaultValues(OPTIONAL_SIGNATURE))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case TBS_REQUEST:return new TBSRequest;case OPTIONAL_SIGNATURE:return new Signature;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case TBS_REQUEST:return TBSRequest.compareWithDefault("tbs",t.tbs)&&TBSRequest.compareWithDefault("version",t.version)&&TBSRequest.compareWithDefault("requestorName",t.requestorName)&&TBSRequest.compareWithDefault("requestList",t.requestList)&&TBSRequest.compareWithDefault("requestExtensions",t.requestExtensions);case OPTIONAL_SIGNATURE:return Signature.compareWithDefault("signatureAlgorithm",t.signatureAlgorithm)&&Signature.compareWithDefault("signature",t.signature)&&Signature.compareWithDefault("certs",t.certs);default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"OCSPRequest",value:[TBSRequest.schema(t.tbsRequest||{names:{blockName:TBS_REQUEST}}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[Signature.schema(t.optionalSignature||{names:{blockName:OPTIONAL_SIGNATURE}})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$8);const t=asn1js__namespace.compareSchema(e,e,OCSPRequest.schema());AsnError.assertSchema(t,this.className),this.tbsRequest=new TBSRequest({schema:t.result.tbsRequest}),OPTIONAL_SIGNATURE in t.result&&(this.optionalSignature=new Signature({schema:t.result.optionalSignature}))}toSchema(e=!1){const t=[];return t.push(this.tbsRequest.toSchema(e)),this.optionalSignature&&t.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[this.optionalSignature.toSchema()]})),new asn1js__namespace.Sequence({value:t})}toJSON(){const e={tbsRequest:this.tbsRequest.toJSON()};return this.optionalSignature&&(e.optionalSignature=this.optionalSignature.toJSON()),e}async createForCertificate(e,t,a=getCrypto(!0)){const s=new CertID;await s.createForCertificate(e,t,a),this.tbsRequest.requestList.push(new Request({reqCert:s}))}async sign(e,t="SHA-1",a=getCrypto(!0)){if(ParameterError.assertEmpty(e,"privateKey","OCSPRequest.sign method"),!this.optionalSignature)throw new Error('Need to create "optionalSignature" field before signing');const s=await a.getSignatureParameters(e,t),r=s.parameters;this.optionalSignature.signatureAlgorithm=s.signatureAlgorithm;const n=this.tbsRequest.toSchema(!0).toBER(!1),i=await a.signWithPrivateKey(n,e,r);this.optionalSignature.signature=new asn1js__namespace.BitString({valueHex:i})}verify(){}}OCSPRequest.CLASS_NAME="OCSPRequest";const RESPONSE_TYPE="responseType",RESPONSE="response",CLEAR_PROPS$7=[RESPONSE_TYPE,RESPONSE];class ResponseBytes extends PkiObject{constructor(e={}){super(),this.responseType=pvutils__namespace.getParametersValue(e,RESPONSE_TYPE,ResponseBytes.defaultValues(RESPONSE_TYPE)),this.response=pvutils__namespace.getParametersValue(e,RESPONSE,ResponseBytes.defaultValues(RESPONSE)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case RESPONSE_TYPE:return"";case RESPONSE:return new asn1js__namespace.OctetString;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case RESPONSE_TYPE:return""===t;case RESPONSE:return t.isEqual(ResponseBytes.defaultValues(e));default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.ObjectIdentifier({name:t.responseType||""}),new asn1js__namespace.OctetString({name:t.response||""})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$7);const t=asn1js__namespace.compareSchema(e,e,ResponseBytes.schema({names:{responseType:RESPONSE_TYPE,response:RESPONSE}}));AsnError.assertSchema(t,this.className),this.responseType=t.result.responseType.valueBlock.toString(),this.response=t.result.response}toSchema(){return new asn1js__namespace.Sequence({value:[new asn1js__namespace.ObjectIdentifier({value:this.responseType}),this.response]})}toJSON(){return{responseType:this.responseType,response:this.response.toJSON()}}}ResponseBytes.CLASS_NAME="ResponseBytes";const RESPONSE_STATUS="responseStatus",RESPONSE_BYTES="responseBytes";class OCSPResponse extends PkiObject{constructor(e={}){super(),this.responseStatus=pvutils__namespace.getParametersValue(e,RESPONSE_STATUS,OCSPResponse.defaultValues(RESPONSE_STATUS)),RESPONSE_BYTES in e&&(this.responseBytes=pvutils__namespace.getParametersValue(e,RESPONSE_BYTES,OCSPResponse.defaultValues(RESPONSE_BYTES))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case RESPONSE_STATUS:return new asn1js__namespace.Enumerated;case RESPONSE_BYTES:return new ResponseBytes;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case RESPONSE_STATUS:return t.isEqual(OCSPResponse.defaultValues(e));case RESPONSE_BYTES:return ResponseBytes.compareWithDefault("responseType",t.responseType)&&ResponseBytes.compareWithDefault("response",t.response);default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"OCSPResponse",value:[new asn1js__namespace.Enumerated({name:t.responseStatus||RESPONSE_STATUS}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[ResponseBytes.schema(t.responseBytes||{names:{blockName:RESPONSE_BYTES}})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,[RESPONSE_STATUS,RESPONSE_BYTES]);const t=asn1js__namespace.compareSchema(e,e,OCSPResponse.schema());AsnError.assertSchema(t,this.className),this.responseStatus=t.result.responseStatus,RESPONSE_BYTES in t.result&&(this.responseBytes=new ResponseBytes({schema:t.result.responseBytes}))}toSchema(){const e=[];return e.push(this.responseStatus),this.responseBytes&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:[this.responseBytes.toSchema()]})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={responseStatus:this.responseStatus.toJSON()};return this.responseBytes&&(e.responseBytes=this.responseBytes.toJSON()),e}async getCertificateStatus(e,t,a=getCrypto(!0)){let s;const r={isForCertificate:!1,status:2};if(!this.responseBytes)return r;if(this.responseBytes.responseType!==id_PKIX_OCSP_Basic)return r;try{const e=asn1js__namespace.fromBER(this.responseBytes.response.valueBlock.valueHexView);AsnError.assert(e,"Basic OCSP response"),s=new BasicOCSPResponse({schema:e.result})}catch(e){return r}return s.getCertificateStatus(e,t,a)}async sign(e,t,a=getCrypto(!0)){var s;if(this.responseBytes&&this.responseBytes.responseType===id_PKIX_OCSP_Basic){return BasicOCSPResponse.fromBER(this.responseBytes.response.valueBlock.valueHexView).sign(e,t,a)}throw new Error(`Unknown ResponseBytes type: ${(null===(s=this.responseBytes)||void 0===s?void 0:s.responseType)||"Unknown"}`)}async verify(e=null,t=getCrypto(!0)){var a;if(RESPONSE_BYTES in this==!1)throw new Error("Empty ResponseBytes field");if(this.responseBytes&&this.responseBytes.responseType===id_PKIX_OCSP_Basic){const a=BasicOCSPResponse.fromBER(this.responseBytes.response.valueBlock.valueHexView);return null!==e&&(a.certs||(a.certs=[]),a.certs.push(e)),a.verify({},t)}throw new Error(`Unknown ResponseBytes type: ${(null===(a=this.responseBytes)||void 0===a?void 0:a.responseType)||"Unknown"}`)}}OCSPResponse.CLASS_NAME="OCSPResponse";const TYPE="type",ATTRIBUTES="attributes",ENCODED_VALUE="encodedValue",CLEAR_PROPS$6=[ATTRIBUTES];class SignedAndUnsignedAttributes extends PkiObject{constructor(e={}){super(),this.type=pvutils__namespace.getParametersValue(e,TYPE,SignedAndUnsignedAttributes.defaultValues(TYPE)),this.attributes=pvutils__namespace.getParametersValue(e,ATTRIBUTES,SignedAndUnsignedAttributes.defaultValues(ATTRIBUTES)),this.encodedValue=pvutils__namespace.getParametersValue(e,ENCODED_VALUE,SignedAndUnsignedAttributes.defaultValues(ENCODED_VALUE)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case TYPE:return-1;case ATTRIBUTES:return[];case ENCODED_VALUE:return EMPTY_BUFFER;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case TYPE:return t===SignedAndUnsignedAttributes.defaultValues(TYPE);case ATTRIBUTES:return 0===t.length;case ENCODED_VALUE:return 0===t.byteLength;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Constructed({name:t.blockName||"",optional:!0,idBlock:{tagClass:3,tagNumber:t.tagNumber||0},value:[new asn1js__namespace.Repeated({name:t.attributes||"",value:Attribute.schema()})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$6);const t=asn1js__namespace.compareSchema(e,e,SignedAndUnsignedAttributes.schema({names:{tagNumber:this.type,attributes:ATTRIBUTES}}));AsnError.assertSchema(t,this.className),this.type=t.result.idBlock.tagNumber,this.encodedValue=pvtsutils__namespace.BufferSourceConverter.toArrayBuffer(t.result.valueBeforeDecodeView);if(new Uint8Array(this.encodedValue)[0]=49,ATTRIBUTES in t.result!=!1)this.attributes=Array.from(t.result.attributes,(e=>new Attribute({schema:e})));else if(0===this.type)throw new Error("Wrong structure of SignedUnsignedAttributes")}toSchema(){if(SignedAndUnsignedAttributes.compareWithDefault(TYPE,this.type)||SignedAndUnsignedAttributes.compareWithDefault(ATTRIBUTES,this.attributes))throw new Error('Incorrectly initialized "SignedAndUnsignedAttributes" class');return new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:this.type},value:Array.from(this.attributes,(e=>e.toSchema()))})}toJSON(){if(SignedAndUnsignedAttributes.compareWithDefault(TYPE,this.type)||SignedAndUnsignedAttributes.compareWithDefault(ATTRIBUTES,this.attributes))throw new Error('Incorrectly initialized "SignedAndUnsignedAttributes" class');return{type:this.type,attributes:Array.from(this.attributes,(e=>e.toJSON()))}}}SignedAndUnsignedAttributes.CLASS_NAME="SignedAndUnsignedAttributes";const VERSION$4="version",SID="sid",DIGEST_ALGORITHM="digestAlgorithm",SIGNED_ATTRS="signedAttrs",SIGNATURE_ALGORITHM="signatureAlgorithm",SIGNATURE="signature",UNSIGNED_ATTRS="unsignedAttrs",SIGNER_INFO="SignerInfo",SIGNER_INFO_VERSION=`${SIGNER_INFO}.version`,SIGNER_INFO_SID=`${SIGNER_INFO}.${SID}`,SIGNER_INFO_DIGEST_ALGORITHM=`${SIGNER_INFO}.${DIGEST_ALGORITHM}`,SIGNER_INFO_SIGNED_ATTRS=`${SIGNER_INFO}.${SIGNED_ATTRS}`,SIGNER_INFO_SIGNATURE_ALGORITHM=`${SIGNER_INFO}.${SIGNATURE_ALGORITHM}`,SIGNER_INFO_SIGNATURE=`${SIGNER_INFO}.${SIGNATURE}`,SIGNER_INFO_UNSIGNED_ATTRS=`${SIGNER_INFO}.${UNSIGNED_ATTRS}`,CLEAR_PROPS$5=[SIGNER_INFO_VERSION,SIGNER_INFO_SID,SIGNER_INFO_DIGEST_ALGORITHM,SIGNER_INFO_SIGNED_ATTRS,SIGNER_INFO_SIGNATURE_ALGORITHM,SIGNER_INFO_SIGNATURE,SIGNER_INFO_UNSIGNED_ATTRS];class SignerInfo extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",SignerInfo.defaultValues("version")),this.sid=pvutils__namespace.getParametersValue(e,SID,SignerInfo.defaultValues(SID)),this.digestAlgorithm=pvutils__namespace.getParametersValue(e,DIGEST_ALGORITHM,SignerInfo.defaultValues(DIGEST_ALGORITHM)),SIGNED_ATTRS in e&&(this.signedAttrs=pvutils__namespace.getParametersValue(e,SIGNED_ATTRS,SignerInfo.defaultValues(SIGNED_ATTRS))),this.signatureAlgorithm=pvutils__namespace.getParametersValue(e,SIGNATURE_ALGORITHM,SignerInfo.defaultValues(SIGNATURE_ALGORITHM)),this.signature=pvutils__namespace.getParametersValue(e,SIGNATURE,SignerInfo.defaultValues(SIGNATURE)),UNSIGNED_ATTRS in e&&(this.unsignedAttrs=pvutils__namespace.getParametersValue(e,UNSIGNED_ATTRS,SignerInfo.defaultValues(UNSIGNED_ATTRS))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case SID:return new asn1js__namespace.Any;case DIGEST_ALGORITHM:return new AlgorithmIdentifier;case SIGNED_ATTRS:return new SignedAndUnsignedAttributes({type:0});case SIGNATURE_ALGORITHM:return new AlgorithmIdentifier;case SIGNATURE:return new asn1js__namespace.OctetString;case UNSIGNED_ATTRS:return new SignedAndUnsignedAttributes({type:1});default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"version":return SignerInfo.defaultValues("version")===t;case SID:return t instanceof asn1js__namespace.Any;case DIGEST_ALGORITHM:return t instanceof AlgorithmIdentifier!=!1&&t.isEqual(SignerInfo.defaultValues(DIGEST_ALGORITHM));case SIGNED_ATTRS:return SignedAndUnsignedAttributes.compareWithDefault("type",t.type)&&SignedAndUnsignedAttributes.compareWithDefault("attributes",t.attributes)&&SignedAndUnsignedAttributes.compareWithDefault("encodedValue",t.encodedValue);case SIGNATURE_ALGORITHM:return t instanceof AlgorithmIdentifier!=!1&&t.isEqual(SignerInfo.defaultValues(SIGNATURE_ALGORITHM));case SIGNATURE:case UNSIGNED_ATTRS:return SignedAndUnsignedAttributes.compareWithDefault("type",t.type)&&SignedAndUnsignedAttributes.compareWithDefault("attributes",t.attributes)&&SignedAndUnsignedAttributes.compareWithDefault("encodedValue",t.encodedValue);default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:SIGNER_INFO,value:[new asn1js__namespace.Integer({name:t.version||SIGNER_INFO_VERSION}),new asn1js__namespace.Choice({value:[IssuerAndSerialNumber.schema(t.sidSchema||{names:{blockName:SIGNER_INFO_SID}}),new asn1js__namespace.Choice({value:[new asn1js__namespace.Constructed({optional:!0,name:t.sid||SIGNER_INFO_SID,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.OctetString]}),new asn1js__namespace.Primitive({optional:!0,name:t.sid||SIGNER_INFO_SID,idBlock:{tagClass:3,tagNumber:0}})]})]}),AlgorithmIdentifier.schema(t.digestAlgorithm||{names:{blockName:SIGNER_INFO_DIGEST_ALGORITHM}}),SignedAndUnsignedAttributes.schema(t.signedAttrs||{names:{blockName:SIGNER_INFO_SIGNED_ATTRS,tagNumber:0}}),AlgorithmIdentifier.schema(t.signatureAlgorithm||{names:{blockName:SIGNER_INFO_SIGNATURE_ALGORITHM}}),new asn1js__namespace.OctetString({name:t.signature||SIGNER_INFO_SIGNATURE}),SignedAndUnsignedAttributes.schema(t.unsignedAttrs||{names:{blockName:SIGNER_INFO_UNSIGNED_ATTRS,tagNumber:1}})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$5);const t=asn1js__namespace.compareSchema(e,e,SignerInfo.schema());AsnError.assertSchema(t,this.className),this.version=t.result[SIGNER_INFO_VERSION].valueBlock.valueDec;const a=t.result[SIGNER_INFO_SID];1===a.idBlock.tagClass?this.sid=new IssuerAndSerialNumber({schema:a}):this.sid=a,this.digestAlgorithm=new AlgorithmIdentifier({schema:t.result[SIGNER_INFO_DIGEST_ALGORITHM]}),SIGNER_INFO_SIGNED_ATTRS in t.result&&(this.signedAttrs=new SignedAndUnsignedAttributes({type:0,schema:t.result[SIGNER_INFO_SIGNED_ATTRS]})),this.signatureAlgorithm=new AlgorithmIdentifier({schema:t.result[SIGNER_INFO_SIGNATURE_ALGORITHM]}),this.signature=t.result[SIGNER_INFO_SIGNATURE],SIGNER_INFO_UNSIGNED_ATTRS in t.result&&(this.unsignedAttrs=new SignedAndUnsignedAttributes({type:1,schema:t.result[SIGNER_INFO_UNSIGNED_ATTRS]}))}toSchema(){if(SignerInfo.compareWithDefault(SID,this.sid))throw new Error('Incorrectly initialized "SignerInfo" class');const e=[];return e.push(new asn1js__namespace.Integer({value:this.version})),this.sid instanceof IssuerAndSerialNumber?e.push(this.sid.toSchema()):e.push(this.sid),e.push(this.digestAlgorithm.toSchema()),this.signedAttrs&&!1===SignerInfo.compareWithDefault(SIGNED_ATTRS,this.signedAttrs)&&e.push(this.signedAttrs.toSchema()),e.push(this.signatureAlgorithm.toSchema()),e.push(this.signature),this.unsignedAttrs&&!1===SignerInfo.compareWithDefault(UNSIGNED_ATTRS,this.unsignedAttrs)&&e.push(this.unsignedAttrs.toSchema()),new asn1js__namespace.Sequence({value:e})}toJSON(){if(SignerInfo.compareWithDefault(SID,this.sid))throw new Error('Incorrectly initialized "SignerInfo" class');const e={version:this.version,digestAlgorithm:this.digestAlgorithm.toJSON(),signatureAlgorithm:this.signatureAlgorithm.toJSON(),signature:this.signature.toJSON()};return this.sid instanceof asn1js__namespace.Any||(e.sid=this.sid.toJSON()),this.signedAttrs&&!1===SignerInfo.compareWithDefault(SIGNED_ATTRS,this.signedAttrs)&&(e.signedAttrs=this.signedAttrs.toJSON()),this.unsignedAttrs&&!1===SignerInfo.compareWithDefault(UNSIGNED_ATTRS,this.unsignedAttrs)&&(e.unsignedAttrs=this.unsignedAttrs.toJSON()),e}}SignerInfo.CLASS_NAME="SignerInfo";const VERSION$3="version",POLICY="policy",MESSAGE_IMPRINT$1="messageImprint",SERIAL_NUMBER="serialNumber",GEN_TIME="genTime",ORDERING="ordering",NONCE$1="nonce",ACCURACY="accuracy",TSA="tsa",EXTENSIONS$1="extensions",TST_INFO="TSTInfo",TST_INFO_VERSION=`${TST_INFO}.version`,TST_INFO_POLICY=`${TST_INFO}.${POLICY}`,TST_INFO_MESSAGE_IMPRINT=`${TST_INFO}.messageImprint`,TST_INFO_SERIAL_NUMBER=`${TST_INFO}.${SERIAL_NUMBER}`,TST_INFO_GEN_TIME=`${TST_INFO}.${GEN_TIME}`,TST_INFO_ACCURACY=`${TST_INFO}.${ACCURACY}`,TST_INFO_ORDERING=`${TST_INFO}.${ORDERING}`,TST_INFO_NONCE=`${TST_INFO}.nonce`,TST_INFO_TSA=`${TST_INFO}.${TSA}`,TST_INFO_EXTENSIONS=`${TST_INFO}.extensions`,CLEAR_PROPS$4=[TST_INFO_VERSION,TST_INFO_POLICY,TST_INFO_MESSAGE_IMPRINT,TST_INFO_SERIAL_NUMBER,TST_INFO_GEN_TIME,TST_INFO_ACCURACY,TST_INFO_ORDERING,TST_INFO_NONCE,TST_INFO_TSA,TST_INFO_EXTENSIONS];class TSTInfo extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",TSTInfo.defaultValues("version")),this.policy=pvutils__namespace.getParametersValue(e,POLICY,TSTInfo.defaultValues(POLICY)),this.messageImprint=pvutils__namespace.getParametersValue(e,"messageImprint",TSTInfo.defaultValues("messageImprint")),this.serialNumber=pvutils__namespace.getParametersValue(e,SERIAL_NUMBER,TSTInfo.defaultValues(SERIAL_NUMBER)),this.genTime=pvutils__namespace.getParametersValue(e,GEN_TIME,TSTInfo.defaultValues(GEN_TIME)),ACCURACY in e&&(this.accuracy=pvutils__namespace.getParametersValue(e,ACCURACY,TSTInfo.defaultValues(ACCURACY))),ORDERING in e&&(this.ordering=pvutils__namespace.getParametersValue(e,ORDERING,TSTInfo.defaultValues(ORDERING))),"nonce"in e&&(this.nonce=pvutils__namespace.getParametersValue(e,"nonce",TSTInfo.defaultValues("nonce"))),TSA in e&&(this.tsa=pvutils__namespace.getParametersValue(e,TSA,TSTInfo.defaultValues(TSA))),"extensions"in e&&(this.extensions=pvutils__namespace.getParametersValue(e,"extensions",TSTInfo.defaultValues("extensions"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case POLICY:return"";case"messageImprint":return new MessageImprint;case SERIAL_NUMBER:return new asn1js__namespace.Integer;case GEN_TIME:return new Date(0,0,0);case ACCURACY:return new Accuracy;case ORDERING:return!1;case"nonce":return new asn1js__namespace.Integer;case TSA:return new GeneralName;case"extensions":return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"version":case POLICY:case GEN_TIME:case ORDERING:return t===TSTInfo.defaultValues(ORDERING);case"messageImprint":return MessageImprint.compareWithDefault(HASH_ALGORITHM,t.hashAlgorithm)&&MessageImprint.compareWithDefault(HASHED_MESSAGE,t.hashedMessage);case SERIAL_NUMBER:case"nonce":return t.isEqual(TSTInfo.defaultValues("nonce"));case ACCURACY:return Accuracy.compareWithDefault(SECONDS,t.seconds)&&Accuracy.compareWithDefault(MILLIS,t.millis)&&Accuracy.compareWithDefault(MICROS,t.micros);case TSA:return GeneralName.compareWithDefault("type",t.type)&&GeneralName.compareWithDefault("value",t.value);case"extensions":return 0===t.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||TST_INFO,value:[new asn1js__namespace.Integer({name:t.version||TST_INFO_VERSION}),new asn1js__namespace.ObjectIdentifier({name:t.policy||TST_INFO_POLICY}),MessageImprint.schema(t.messageImprint||{names:{blockName:TST_INFO_MESSAGE_IMPRINT}}),new asn1js__namespace.Integer({name:t.serialNumber||TST_INFO_SERIAL_NUMBER}),new asn1js__namespace.GeneralizedTime({name:t.genTime||TST_INFO_GEN_TIME}),Accuracy.schema(t.accuracy||{names:{blockName:TST_INFO_ACCURACY}}),new asn1js__namespace.Boolean({name:t.ordering||TST_INFO_ORDERING,optional:!0}),new asn1js__namespace.Integer({name:t.nonce||TST_INFO_NONCE,optional:!0}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[GeneralName.schema(t.tsa||{names:{blockName:TST_INFO_TSA}})]}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:[new asn1js__namespace.Repeated({name:t.extensions||TST_INFO_EXTENSIONS,value:Extension.schema(t.extension||{})})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$4);const t=asn1js__namespace.compareSchema(e,e,TSTInfo.schema());AsnError.assertSchema(t,this.className),this.version=t.result[TST_INFO_VERSION].valueBlock.valueDec,this.policy=t.result[TST_INFO_POLICY].valueBlock.toString(),this.messageImprint=new MessageImprint({schema:t.result[TST_INFO_MESSAGE_IMPRINT]}),this.serialNumber=t.result[TST_INFO_SERIAL_NUMBER],this.genTime=t.result[TST_INFO_GEN_TIME].toDate(),TST_INFO_ACCURACY in t.result&&(this.accuracy=new Accuracy({schema:t.result[TST_INFO_ACCURACY]})),TST_INFO_ORDERING in t.result&&(this.ordering=t.result[TST_INFO_ORDERING].valueBlock.value),TST_INFO_NONCE in t.result&&(this.nonce=t.result[TST_INFO_NONCE]),TST_INFO_TSA in t.result&&(this.tsa=new GeneralName({schema:t.result[TST_INFO_TSA]})),TST_INFO_EXTENSIONS in t.result&&(this.extensions=Array.from(t.result[TST_INFO_EXTENSIONS],(e=>new Extension({schema:e}))))}toSchema(){const e=[];return e.push(new asn1js__namespace.Integer({value:this.version})),e.push(new asn1js__namespace.ObjectIdentifier({value:this.policy})),e.push(this.messageImprint.toSchema()),e.push(this.serialNumber),e.push(new asn1js__namespace.GeneralizedTime({valueDate:this.genTime})),this.accuracy&&e.push(this.accuracy.toSchema()),void 0!==this.ordering&&e.push(new asn1js__namespace.Boolean({value:this.ordering})),this.nonce&&e.push(this.nonce),this.tsa&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[this.tsa.toSchema()]})),this.extensions&&e.push(new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:Array.from(this.extensions,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={version:this.version,policy:this.policy,messageImprint:this.messageImprint.toJSON(),serialNumber:this.serialNumber.toJSON(),genTime:this.genTime};return this.accuracy&&(e.accuracy=this.accuracy.toJSON()),void 0!==this.ordering&&(e.ordering=this.ordering),this.nonce&&(e.nonce=this.nonce.toJSON()),this.tsa&&(e.tsa=this.tsa.toJSON()),this.extensions&&(e.extensions=Array.from(this.extensions,(e=>e.toJSON()))),e}async verify(e,t=getCrypto(!0)){if(!e.data)throw new Error('"data" is a mandatory attribute for TST_INFO verification');const a=e.data;if(e.notBefore&&this.genTime<e.notBefore)throw new Error("Generation time for TSTInfo object is less than notBefore value");if(e.notAfter&&this.genTime>e.notAfter)throw new Error("Generation time for TSTInfo object is more than notAfter value");const s=t.getAlgorithmByOID(this.messageImprint.hashAlgorithm.algorithmId,!0,"MessageImprint.hashAlgorithm"),r=await t.digest(s.name,new Uint8Array(a));return pvtsutils__namespace.BufferSourceConverter.isEqual(r,this.messageImprint.hashedMessage.valueBlock.valueHexView)}}TSTInfo.CLASS_NAME="TSTInfo";const VERSION$2="version",DIGEST_ALGORITHMS="digestAlgorithms",ENCAP_CONTENT_INFO="encapContentInfo",CERTIFICATES="certificates",CRLS="crls",SIGNER_INFOS="signerInfos",OCSPS="ocsps",SIGNED_DATA="SignedData",SIGNED_DATA_VERSION=`${SIGNED_DATA}.version`,SIGNED_DATA_DIGEST_ALGORITHMS=`${SIGNED_DATA}.${DIGEST_ALGORITHMS}`,SIGNED_DATA_ENCAP_CONTENT_INFO=`${SIGNED_DATA}.encapContentInfo`,SIGNED_DATA_CERTIFICATES=`${SIGNED_DATA}.${CERTIFICATES}`,SIGNED_DATA_CRLS=`${SIGNED_DATA}.${CRLS}`,SIGNED_DATA_SIGNER_INFOS=`${SIGNED_DATA}.${SIGNER_INFOS}`,CLEAR_PROPS$3=[SIGNED_DATA_VERSION,SIGNED_DATA_DIGEST_ALGORITHMS,SIGNED_DATA_ENCAP_CONTENT_INFO,SIGNED_DATA_CERTIFICATES,SIGNED_DATA_CRLS,SIGNED_DATA_SIGNER_INFOS];class SignedDataVerifyError extends Error{constructor({message:e,code:t=0,date:a=new Date,signatureVerified:s=null,signerCertificate:r=null,signerCertificateVerified:n=null,timestampSerial:i=null,certificatePath:c=[]}){super(e),this.name="SignedDataVerifyError",this.date=a,this.code=t,this.timestampSerial=i,this.signatureVerified=s,this.signerCertificate=r,this.signerCertificateVerified=n,this.certificatePath=c}}class SignedData extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",SignedData.defaultValues("version")),this.digestAlgorithms=pvutils__namespace.getParametersValue(e,DIGEST_ALGORITHMS,SignedData.defaultValues(DIGEST_ALGORITHMS)),this.encapContentInfo=pvutils__namespace.getParametersValue(e,"encapContentInfo",SignedData.defaultValues("encapContentInfo")),CERTIFICATES in e&&(this.certificates=pvutils__namespace.getParametersValue(e,CERTIFICATES,SignedData.defaultValues(CERTIFICATES))),CRLS in e&&(this.crls=pvutils__namespace.getParametersValue(e,CRLS,SignedData.defaultValues(CRLS))),OCSPS in e&&(this.ocsps=pvutils__namespace.getParametersValue(e,OCSPS,SignedData.defaultValues(OCSPS))),this.signerInfos=pvutils__namespace.getParametersValue(e,SIGNER_INFOS,SignedData.defaultValues(SIGNER_INFOS)),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 0;case DIGEST_ALGORITHMS:return[];case"encapContentInfo":return new EncapsulatedContentInfo;case CERTIFICATES:case CRLS:case OCSPS:case SIGNER_INFOS:return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"version":return t===SignedData.defaultValues("version");case"encapContentInfo":return EncapsulatedContentInfo.compareWithDefault("eContentType",t.eContentType)&&EncapsulatedContentInfo.compareWithDefault("eContent",t.eContent);case DIGEST_ALGORITHMS:case CERTIFICATES:case CRLS:case OCSPS:case SIGNER_INFOS:return 0===t.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return void 0===t.optional&&(t.optional=!1),new asn1js__namespace.Sequence({name:t.blockName||SIGNED_DATA,optional:t.optional,value:[new asn1js__namespace.Integer({name:t.version||SIGNED_DATA_VERSION}),new asn1js__namespace.Set({value:[new asn1js__namespace.Repeated({name:t.digestAlgorithms||SIGNED_DATA_DIGEST_ALGORITHMS,value:AlgorithmIdentifier.schema()})]}),EncapsulatedContentInfo.schema(t.encapContentInfo||{names:{blockName:SIGNED_DATA_ENCAP_CONTENT_INFO}}),new asn1js__namespace.Constructed({name:t.certificates||SIGNED_DATA_CERTIFICATES,optional:!0,idBlock:{tagClass:3,tagNumber:0},value:CertificateSet.schema().valueBlock.value}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:1},value:RevocationInfoChoices.schema(t.crls||{names:{crls:SIGNED_DATA_CRLS}}).valueBlock.value}),new asn1js__namespace.Set({value:[new asn1js__namespace.Repeated({name:t.signerInfos||SIGNED_DATA_SIGNER_INFOS,value:SignerInfo.schema()})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$3);const t=asn1js__namespace.compareSchema(e,e,SignedData.schema());if(AsnError.assertSchema(t,this.className),this.version=t.result[SIGNED_DATA_VERSION].valueBlock.valueDec,SIGNED_DATA_DIGEST_ALGORITHMS in t.result&&(this.digestAlgorithms=Array.from(t.result[SIGNED_DATA_DIGEST_ALGORITHMS],(e=>new AlgorithmIdentifier({schema:e})))),this.encapContentInfo=new EncapsulatedContentInfo({schema:t.result[SIGNED_DATA_ENCAP_CONTENT_INFO]}),SIGNED_DATA_CERTIFICATES in t.result){const e=new CertificateSet({schema:new asn1js__namespace.Set({value:t.result[SIGNED_DATA_CERTIFICATES].valueBlock.value})});this.certificates=e.certificates.slice(0)}SIGNED_DATA_CRLS in t.result&&(this.crls=Array.from(t.result[SIGNED_DATA_CRLS],(e=>1===e.idBlock.tagClass?new CertificateRevocationList({schema:e}):(e.idBlock.tagClass=1,e.idBlock.tagNumber=16,new OtherRevocationInfoFormat({schema:e}))))),SIGNED_DATA_SIGNER_INFOS in t.result&&(this.signerInfos=Array.from(t.result[SIGNED_DATA_SIGNER_INFOS],(e=>new SignerInfo({schema:e}))))}toSchema(e=!1){const t=[];if(this.certificates&&this.certificates.length&&this.certificates.some((e=>e instanceof OtherCertificateFormat))||this.crls&&this.crls.length&&this.crls.some((e=>e instanceof OtherRevocationInfoFormat))?this.version=5:this.certificates&&this.certificates.length&&this.certificates.some((e=>e instanceof AttributeCertificateV2))?this.version=4:this.certificates&&this.certificates.length&&this.certificates.some((e=>e instanceof AttributeCertificateV1))||this.signerInfos.some((e=>3===e.version))||this.encapContentInfo.eContentType!==SignedData.ID_DATA?this.version=3:this.version=1,t.push(new asn1js__namespace.Integer({value:this.version})),t.push(new asn1js__namespace.Set({value:Array.from(this.digestAlgorithms,(e=>e.toSchema()))})),t.push(this.encapContentInfo.toSchema()),this.certificates){const e=new CertificateSet({certificates:this.certificates}).toSchema();t.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:e.valueBlock.value}))}return this.crls&&t.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:1},value:Array.from(this.crls,(t=>{if(t instanceof OtherRevocationInfoFormat){const e=t.toSchema();return e.idBlock.tagClass=3,e.idBlock.tagNumber=1,e}return t.toSchema(e)}))})),t.push(new asn1js__namespace.Set({value:Array.from(this.signerInfos,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:t})}toJSON(){const e={version:this.version,digestAlgorithms:Array.from(this.digestAlgorithms,(e=>e.toJSON())),encapContentInfo:this.encapContentInfo.toJSON(),signerInfos:Array.from(this.signerInfos,(e=>e.toJSON()))};return this.certificates&&(e.certificates=Array.from(this.certificates,(e=>e.toJSON()))),this.crls&&(e.crls=Array.from(this.crls,(e=>e.toJSON()))),e}async verify({signer:e=-1,data:t=EMPTY_BUFFER,trustedCerts:a=[],checkDate:s=new Date,checkChain:r=!1,passedWhenNotRevValues:n=!1,extendedMode:i=!1,findOrigin:c=null,findIssuer:o=null}={},u=getCrypto(!0)){let l=null,m=null;try{let h=EMPTY_BUFFER,p="",_=[];const S=this.signerInfos[e];if(!S)throw new SignedDataVerifyError({date:s,code:1,message:"Unable to get signer by supplied index"});if(!this.certificates)throw new SignedDataVerifyError({date:s,code:2,message:"No certificates attached to this signed data"});if(S.sid instanceof IssuerAndSerialNumber){for(const e of this.certificates)if(e instanceof Certificate&&e.issuer.isEqual(S.sid.issuer)&&e.serialNumber.isEqual(S.sid.serialNumber)){l=e;break}}else{const e=S.sid,t=e.idBlock.isConstructed?e.valueBlock.value[0].valueBlock.valueHex:e.valueBlock.valueHex;for(const e of this.certificates){if(!(e instanceof Certificate))continue;const a=await u.digest({name:"sha-1"},e.subjectPublicKeyInfo.subjectPublicKey.valueBlock.valueHexView);if(pvutils__namespace.isEqualBuffer(a,t)){l=e;break}}}if(!l)throw new SignedDataVerifyError({date:s,code:3,message:"Unable to find signer certificate"});if(this.encapContentInfo.eContentType===id_eContentType_TSTInfo){if(!this.encapContentInfo.eContent)throw new SignedDataVerifyError({date:s,code:15,message:"Error during verification: TSTInfo eContent is empty",signatureVerified:null,signerCertificate:l,timestampSerial:m,signerCertificateVerified:!0});let e;try{e=TSTInfo.fromBER(this.encapContentInfo.eContent.valueBlock.valueHexView)}catch(e){throw new SignedDataVerifyError({date:s,code:15,message:"Error during verification: TSTInfo wrong ASN.1 schema ",signatureVerified:null,signerCertificate:l,timestampSerial:m,signerCertificateVerified:!0})}if(s=e.genTime,m=e.serialNumber.valueBlock.valueHexView.slice(),0===t.byteLength)throw new SignedDataVerifyError({date:s,code:4,message:"Missed detached data input array"});if(!await e.verify({data:t},u))throw new SignedDataVerifyError({date:s,code:15,message:"Error during verification: TSTInfo verification is failed",signatureVerified:!1,signerCertificate:l,timestampSerial:m,signerCertificateVerified:!0})}if(r){const e=this.certificates.filter((e=>e instanceof Certificate&&!!checkCA(e,l))),t={checkDate:s,certs:e,trustedCerts:a};o&&(t.findIssuer=o),c&&(t.findOrigin=c);const r=new CertificateChainValidationEngine(t);if(r.certs.push(l),this.crls)for(const e of this.crls)"thisUpdate"in e?r.crls.push(e):e.otherRevInfoFormat===id_PKIX_OCSP_Basic&&r.ocsps.push(new BasicOCSPResponse({schema:e.otherRevInfo}));this.ocsps&&r.ocsps.push(...this.ocsps);const i=await r.verify({passedWhenNotRevValues:n},u).catch((e=>{throw new SignedDataVerifyError({date:s,code:5,message:`Validation of signer's certificate failed with error: ${e instanceof Object?e.resultMessage:e}`,signerCertificate:l,signerCertificateVerified:!1})}));if(i.certificatePath&&(_=i.certificatePath),!i.result)throw new SignedDataVerifyError({date:s,code:5,message:`Validation of signer's certificate failed: ${i.resultMessage}`,signerCertificate:l,signerCertificateVerified:!1})}const g=u.getAlgorithmByOID(S.digestAlgorithm.algorithmId);if(!("name"in g))throw new SignedDataVerifyError({date:s,code:7,message:`Unsupported signature algorithm: ${S.digestAlgorithm.algorithmId}`,signerCertificate:l,signerCertificateVerified:!0});p=g.name;const f=this.encapContentInfo.eContent;if(f)t=1===f.idBlock.tagClass&&4===f.idBlock.tagNumber?f.getValue():f.valueBlock.valueBeforeDecodeView;else if(0===t.byteLength)throw new SignedDataVerifyError({date:s,code:8,message:"Missed detached data input array",signerCertificate:l,signerCertificateVerified:!0});if(S.signedAttrs){let e=!1,t=!1;for(const a of S.signedAttrs.attributes)if("1.2.840.113549.1.9.3"===a.type&&(e=!0),"1.2.840.113549.1.9.4"===a.type&&(t=!0,h=a.values[0].valueBlock.valueHex),e&&t)break;if(!1===e)throw new SignedDataVerifyError({date:s,code:9,message:'Attribute "content-type" is a mandatory attribute for "signed attributes"',signerCertificate:l,signerCertificateVerified:!0});if(!1===t)throw new SignedDataVerifyError({date:s,code:10,message:'Attribute "message-digest" is a mandatory attribute for "signed attributes"',signatureVerified:null,signerCertificate:l,signerCertificateVerified:!0})}if(S.signedAttrs){const e=await u.digest(p,new Uint8Array(t));if(!pvutils__namespace.isEqualBuffer(e,h))throw new SignedDataVerifyError({date:s,code:15,message:"Error during verification: Message digest doesn't match",signatureVerified:null,signerCertificate:l,timestampSerial:m,signerCertificateVerified:!0});t=S.signedAttrs.encodedValue}const d="1.2.840.113549.1.1.1"===S.signatureAlgorithm.algorithmId?await u.verifyWithPublicKey(t,S.signature,l.subjectPublicKeyInfo,S.signatureAlgorithm,p):await u.verifyWithPublicKey(t,S.signature,l.subjectPublicKeyInfo,S.signatureAlgorithm);return i?{date:s,code:14,message:"",signatureVerified:d,signerCertificate:l,timestampSerial:m,signerCertificateVerified:!0,certificatePath:_}:d}catch(e){if(e instanceof SignedDataVerifyError)throw e;throw new SignedDataVerifyError({date:s,code:15,message:`Error during verification: ${e instanceof Error?e.message:e}`,signatureVerified:null,signerCertificate:l,timestampSerial:m,signerCertificateVerified:!0})}}async sign(e,t,a="SHA-1",s=EMPTY_BUFFER,r=getCrypto(!0)){var n;if(!e)throw new Error("Need to provide a private key for signing");const i=this.signerInfos[t];if(!i)throw new RangeError("SignerInfo index is out of range");!(null===(n=i.signedAttrs)||void 0===n?void 0:n.attributes.length)&&"hash"in e.algorithm&&"hash"in e.algorithm&&e.algorithm.hash&&(a=e.algorithm.hash.name);const c=r.getOIDByAlgorithm({name:a},!0,"hashAlgorithm");0===this.digestAlgorithms.filter((e=>e.algorithmId===c)).length&&this.digestAlgorithms.push(new AlgorithmIdentifier({algorithmId:c,algorithmParams:new asn1js__namespace.Null})),i.digestAlgorithm=new AlgorithmIdentifier({algorithmId:c,algorithmParams:new asn1js__namespace.Null});const o=await r.getSignatureParameters(e,a),u=o.parameters;if(i.signatureAlgorithm=o.signatureAlgorithm,i.signedAttrs)if(0!==i.signedAttrs.encodedValue.byteLength)s=i.signedAttrs.encodedValue;else{s=i.signedAttrs.toSchema().toBER();pvtsutils__namespace.BufferSourceConverter.toUint8Array(s)[0]=49}else{const e=this.encapContentInfo.eContent;if(e)s=1===e.idBlock.tagClass&&4===e.idBlock.tagNumber?e.getValue():e.valueBlock.valueBeforeDecodeView;else if(0===s.byteLength)throw new Error("Missed detached data input array")}const l=await r.signWithPrivateKey(s,e,u);i.signature=new asn1js__namespace.OctetString({valueHex:l})}}SignedData.CLASS_NAME="SignedData",SignedData.ID_DATA=id_ContentType_Data;const VERSION$1="version",AUTH_SAFE="authSafe",MAC_DATA="macData",PARSED_VALUE="parsedValue",CLERA_PROPS=["version",AUTH_SAFE,MAC_DATA];class PFX extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,"version",PFX.defaultValues("version")),this.authSafe=pvutils__namespace.getParametersValue(e,AUTH_SAFE,PFX.defaultValues(AUTH_SAFE)),MAC_DATA in e&&(this.macData=pvutils__namespace.getParametersValue(e,MAC_DATA,PFX.defaultValues(MAC_DATA))),PARSED_VALUE in e&&(this.parsedValue=pvutils__namespace.getParametersValue(e,PARSED_VALUE,PFX.defaultValues(PARSED_VALUE))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"version":return 3;case AUTH_SAFE:return new ContentInfo;case MAC_DATA:return new MacData;case PARSED_VALUE:return{};default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"version":return t===PFX.defaultValues(e);case AUTH_SAFE:return ContentInfo.compareWithDefault("contentType",t.contentType)&&ContentInfo.compareWithDefault("content",t.content);case MAC_DATA:return MacData.compareWithDefault("mac",t.mac)&&MacData.compareWithDefault("macSalt",t.macSalt)&&MacData.compareWithDefault("iterations",t.iterations);case PARSED_VALUE:return t instanceof Object&&0===Object.keys(t).length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.version||"version"}),ContentInfo.schema(t.authSafe||{names:{blockName:AUTH_SAFE}}),MacData.schema(t.macData||{names:{blockName:MAC_DATA,optional:!0}})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLERA_PROPS);const t=asn1js__namespace.compareSchema(e,e,PFX.schema({names:{version:"version",authSafe:{names:{blockName:AUTH_SAFE}},macData:{names:{blockName:MAC_DATA}}}}));AsnError.assertSchema(t,this.className),this.version=t.result.version.valueBlock.valueDec,this.authSafe=new ContentInfo({schema:t.result.authSafe}),MAC_DATA in t.result&&(this.macData=new MacData({schema:t.result.macData}))}toSchema(){const e=[new asn1js__namespace.Integer({value:this.version}),this.authSafe.toSchema()];return this.macData&&e.push(this.macData.toSchema()),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={version:this.version,authSafe:this.authSafe.toJSON()};return this.macData&&(e.macData=this.macData.toJSON()),e}async makeInternalValues(e={},t=getCrypto(!0)){if(ArgumentError.assert(e,"parameters","object"),!this.parsedValue)throw new Error('Please call "parseValues" function first in order to make "parsedValue" data');switch(ParameterError.assertEmpty(this.parsedValue.integrityMode,"integrityMode","parsedValue"),ParameterError.assertEmpty(this.parsedValue.authenticatedSafe,"authenticatedSafe","parsedValue"),this.parsedValue.integrityMode){case 0:{if(!("iterations"in e))throw new ParameterError("iterations");ParameterError.assertEmpty(e.pbkdf2HashAlgorithm,"pbkdf2HashAlgorithm"),ParameterError.assertEmpty(e.hmacHashAlgorithm,"hmacHashAlgorithm"),ParameterError.assertEmpty(e.password,"password");const a=new ArrayBuffer(64),s=new Uint8Array(a);t.getRandomValues(s);const r=this.parsedValue.authenticatedSafe.toSchema().toBER(!1);this.authSafe=new ContentInfo({contentType:ContentInfo.DATA,content:new asn1js__namespace.OctetString({valueHex:r})});const n=await t.stampDataWithPassword({password:e.password,hashAlgorithm:e.hmacHashAlgorithm,salt:a,iterationCount:e.iterations,contentToStamp:r});this.macData=new MacData({mac:new DigestInfo({digestAlgorithm:new AlgorithmIdentifier({algorithmId:t.getOIDByAlgorithm({name:e.hmacHashAlgorithm},!0,"hmacHashAlgorithm")}),digest:new asn1js__namespace.OctetString({valueHex:n})}),macSalt:new asn1js__namespace.OctetString({valueHex:a}),iterations:e.iterations})}break;case 1:{if(!("signingCertificate"in e))throw new ParameterError("signingCertificate");ParameterError.assertEmpty(e.privateKey,"privateKey"),ParameterError.assertEmpty(e.hashAlgorithm,"hashAlgorithm");const a=this.parsedValue.authenticatedSafe.toSchema().toBER(!1),s=new SignedData({version:1,encapContentInfo:new EncapsulatedContentInfo({eContentType:"1.2.840.113549.1.7.1",eContent:new asn1js__namespace.OctetString({valueHex:a})}),certificates:[e.signingCertificate]}),r=await t.digest({name:e.hashAlgorithm},new Uint8Array(a)),n=[];n.push(new Attribute({type:"1.2.840.113549.1.9.3",values:[new asn1js__namespace.ObjectIdentifier({value:"1.2.840.113549.1.7.1"})]})),n.push(new Attribute({type:"1.2.840.113549.1.9.5",values:[new asn1js__namespace.UTCTime({valueDate:new Date})]})),n.push(new Attribute({type:"1.2.840.113549.1.9.4",values:[new asn1js__namespace.OctetString({valueHex:r})]})),s.signerInfos.push(new SignerInfo({version:1,sid:new IssuerAndSerialNumber({issuer:e.signingCertificate.issuer,serialNumber:e.signingCertificate.serialNumber}),signedAttrs:new SignedAndUnsignedAttributes({type:0,attributes:n})})),await s.sign(e.privateKey,0,e.hashAlgorithm,void 0,t),this.authSafe=new ContentInfo({contentType:"1.2.840.113549.1.7.2",content:s.toSchema(!0)})}break;default:throw new Error(`Parameter "integrityMode" has unknown value: ${this.parsedValue.integrityMode}`)}}async parseInternalValues(e,t=getCrypto(!0)){switch(ArgumentError.assert(e,"parameters","object"),void 0===e.checkIntegrity&&(e.checkIntegrity=!0),this.parsedValue={},this.authSafe.contentType){case ContentInfo.DATA:{ParameterError.assertEmpty(e.password,"password"),this.parsedValue.integrityMode=0,ArgumentError.assert(this.authSafe.content,"authSafe.content",asn1js__namespace.OctetString);const a=this.authSafe.content.getValue();if(this.parsedValue.authenticatedSafe=AuthenticatedSafe.fromBER(a),e.checkIntegrity){if(!this.macData)throw new Error('Absent "macData" value, can not check PKCS#12 data integrity');const s=t.getAlgorithmByOID(this.macData.mac.digestAlgorithm.algorithmId,!0,"digestAlgorithm");if(!await t.verifyDataStampedWithPassword({password:e.password,hashAlgorithm:s.name,salt:pvtsutils.BufferSourceConverter.toArrayBuffer(this.macData.macSalt.valueBlock.valueHexView),iterationCount:this.macData.iterations||1,contentToVerify:a,signatureToVerify:pvtsutils.BufferSourceConverter.toArrayBuffer(this.macData.mac.digest.valueBlock.valueHexView)}))throw new Error("Integrity for the PKCS#12 data is broken!")}}break;case ContentInfo.SIGNED_DATA:{this.parsedValue.integrityMode=1;const e=new SignedData({schema:this.authSafe.content}),a=e.encapContentInfo.eContent;ParameterError.assert(a,"eContent","cmsSigned.encapContentInfo"),ArgumentError.assert(a,"eContent",asn1js__namespace.OctetString);const s=a.getValue();this.parsedValue.authenticatedSafe=AuthenticatedSafe.fromBER(s);if(!await e.verify({signer:0,checkChain:!1},t))throw new Error("Integrity for the PKCS#12 data is broken!")}break;default:throw new Error(`Incorrect value for "this.authSafe.contentType": ${this.authSafe.contentType}`)}}}PFX.CLASS_NAME="PFX";const STATUS$1="status",STATUS_STRINGS="statusStrings",FAIL_INFO="failInfo",CLEAR_PROPS$2=["status",STATUS_STRINGS,FAIL_INFO];exports.PKIStatus=void 0,function(e){e[e.granted=0]="granted",e[e.grantedWithMods=1]="grantedWithMods",e[e.rejection=2]="rejection",e[e.waiting=3]="waiting",e[e.revocationWarning=4]="revocationWarning",e[e.revocationNotification=5]="revocationNotification"}(exports.PKIStatus||(exports.PKIStatus={}));class PKIStatusInfo extends PkiObject{constructor(e={}){super(),this.status=pvutils__namespace.getParametersValue(e,"status",PKIStatusInfo.defaultValues("status")),STATUS_STRINGS in e&&(this.statusStrings=pvutils__namespace.getParametersValue(e,STATUS_STRINGS,PKIStatusInfo.defaultValues(STATUS_STRINGS))),FAIL_INFO in e&&(this.failInfo=pvutils__namespace.getParametersValue(e,FAIL_INFO,PKIStatusInfo.defaultValues(FAIL_INFO))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case"status":return 2;case STATUS_STRINGS:return[];case FAIL_INFO:return new asn1js__namespace.BitString;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case"status":return t===PKIStatusInfo.defaultValues(e);case STATUS_STRINGS:return 0===t.length;case FAIL_INFO:return t.isEqual(PKIStatusInfo.defaultValues(e));default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"",value:[new asn1js__namespace.Integer({name:t.status||""}),new asn1js__namespace.Sequence({optional:!0,value:[new asn1js__namespace.Repeated({name:t.statusStrings||"",value:new asn1js__namespace.Utf8String})]}),new asn1js__namespace.BitString({name:t.failInfo||"",optional:!0})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$2);const t=asn1js__namespace.compareSchema(e,e,PKIStatusInfo.schema({names:{status:"status",statusStrings:STATUS_STRINGS,failInfo:FAIL_INFO}}));AsnError.assertSchema(t,this.className);const a=t.result.status;if(!0===a.valueBlock.isHexOnly||a.valueBlock.valueDec<0||a.valueBlock.valueDec>5)throw new Error('PKIStatusInfo "status" has invalid value');this.status=a.valueBlock.valueDec,STATUS_STRINGS in t.result&&(this.statusStrings=t.result.statusStrings),FAIL_INFO in t.result&&(this.failInfo=t.result.failInfo)}toSchema(){const e=[];return e.push(new asn1js__namespace.Integer({value:this.status})),this.statusStrings&&e.push(new asn1js__namespace.Sequence({optional:!0,value:this.statusStrings})),this.failInfo&&e.push(this.failInfo),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={status:this.status};return this.statusStrings&&(e.statusStrings=Array.from(this.statusStrings,(e=>e.toJSON()))),this.failInfo&&(e.failInfo=this.failInfo.toJSON()),e}}PKIStatusInfo.CLASS_NAME="PKIStatusInfo";const VERSION="version",MESSAGE_IMPRINT="messageImprint",REQ_POLICY="reqPolicy",NONCE="nonce",CERT_REQ="certReq",EXTENSIONS="extensions",TIME_STAMP_REQ="TimeStampReq",TIME_STAMP_REQ_VERSION=`TimeStampReq.${VERSION}`,TIME_STAMP_REQ_MESSAGE_IMPRINT=`TimeStampReq.${MESSAGE_IMPRINT}`,TIME_STAMP_REQ_POLICY=`TimeStampReq.${REQ_POLICY}`,TIME_STAMP_REQ_NONCE=`TimeStampReq.${NONCE}`,TIME_STAMP_REQ_CERT_REQ=`TimeStampReq.${CERT_REQ}`,TIME_STAMP_REQ_EXTENSIONS=`TimeStampReq.${EXTENSIONS}`,CLEAR_PROPS$1=[TIME_STAMP_REQ_VERSION,TIME_STAMP_REQ_MESSAGE_IMPRINT,TIME_STAMP_REQ_POLICY,TIME_STAMP_REQ_NONCE,TIME_STAMP_REQ_CERT_REQ,TIME_STAMP_REQ_EXTENSIONS];class TimeStampReq extends PkiObject{constructor(e={}){super(),this.version=pvutils__namespace.getParametersValue(e,VERSION,TimeStampReq.defaultValues(VERSION)),this.messageImprint=pvutils__namespace.getParametersValue(e,MESSAGE_IMPRINT,TimeStampReq.defaultValues(MESSAGE_IMPRINT)),REQ_POLICY in e&&(this.reqPolicy=pvutils__namespace.getParametersValue(e,REQ_POLICY,TimeStampReq.defaultValues(REQ_POLICY))),NONCE in e&&(this.nonce=pvutils__namespace.getParametersValue(e,NONCE,TimeStampReq.defaultValues(NONCE))),CERT_REQ in e&&(this.certReq=pvutils__namespace.getParametersValue(e,CERT_REQ,TimeStampReq.defaultValues(CERT_REQ))),EXTENSIONS in e&&(this.extensions=pvutils__namespace.getParametersValue(e,EXTENSIONS,TimeStampReq.defaultValues(EXTENSIONS))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case VERSION:return 0;case MESSAGE_IMPRINT:return new MessageImprint;case REQ_POLICY:return"";case NONCE:return new asn1js__namespace.Integer;case CERT_REQ:return!1;case EXTENSIONS:return[];default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case VERSION:case REQ_POLICY:case CERT_REQ:return t===TimeStampReq.defaultValues(e);case MESSAGE_IMPRINT:return MessageImprint.compareWithDefault("hashAlgorithm",t.hashAlgorithm)&&MessageImprint.compareWithDefault("hashedMessage",t.hashedMessage);case NONCE:return t.isEqual(TimeStampReq.defaultValues(e));case EXTENSIONS:return 0===t.length;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"TimeStampReq",value:[new asn1js__namespace.Integer({name:t.version||TIME_STAMP_REQ_VERSION}),MessageImprint.schema(t.messageImprint||{names:{blockName:TIME_STAMP_REQ_MESSAGE_IMPRINT}}),new asn1js__namespace.ObjectIdentifier({name:t.reqPolicy||TIME_STAMP_REQ_POLICY,optional:!0}),new asn1js__namespace.Integer({name:t.nonce||TIME_STAMP_REQ_NONCE,optional:!0}),new asn1js__namespace.Boolean({name:t.certReq||TIME_STAMP_REQ_CERT_REQ,optional:!0}),new asn1js__namespace.Constructed({optional:!0,idBlock:{tagClass:3,tagNumber:0},value:[new asn1js__namespace.Repeated({name:t.extensions||TIME_STAMP_REQ_EXTENSIONS,value:Extension.schema()})]})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS$1);const t=asn1js__namespace.compareSchema(e,e,TimeStampReq.schema());AsnError.assertSchema(t,this.className),this.version=t.result[TIME_STAMP_REQ_VERSION].valueBlock.valueDec,this.messageImprint=new MessageImprint({schema:t.result[TIME_STAMP_REQ_MESSAGE_IMPRINT]}),TIME_STAMP_REQ_POLICY in t.result&&(this.reqPolicy=t.result[TIME_STAMP_REQ_POLICY].valueBlock.toString()),TIME_STAMP_REQ_NONCE in t.result&&(this.nonce=t.result[TIME_STAMP_REQ_NONCE]),TIME_STAMP_REQ_CERT_REQ in t.result&&(this.certReq=t.result[TIME_STAMP_REQ_CERT_REQ].valueBlock.value),TIME_STAMP_REQ_EXTENSIONS in t.result&&(this.extensions=Array.from(t.result[TIME_STAMP_REQ_EXTENSIONS],(e=>new Extension({schema:e}))))}toSchema(){const e=[];return e.push(new asn1js__namespace.Integer({value:this.version})),e.push(this.messageImprint.toSchema()),this.reqPolicy&&e.push(new asn1js__namespace.ObjectIdentifier({value:this.reqPolicy})),this.nonce&&e.push(this.nonce),CERT_REQ in this&&!1===TimeStampReq.compareWithDefault(CERT_REQ,this.certReq)&&e.push(new asn1js__namespace.Boolean({value:this.certReq})),this.extensions&&e.push(new asn1js__namespace.Constructed({idBlock:{tagClass:3,tagNumber:0},value:Array.from(this.extensions,(e=>e.toSchema()))})),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={version:this.version,messageImprint:this.messageImprint.toJSON()};return void 0!==this.reqPolicy&&(e.reqPolicy=this.reqPolicy),void 0!==this.nonce&&(e.nonce=this.nonce.toJSON()),void 0!==this.certReq&&!1===TimeStampReq.compareWithDefault(CERT_REQ,this.certReq)&&(e.certReq=this.certReq),this.extensions&&(e.extensions=Array.from(this.extensions,(e=>e.toJSON()))),e}}TimeStampReq.CLASS_NAME="TimeStampReq";const STATUS="status",TIME_STAMP_TOKEN="timeStampToken",TIME_STAMP_RESP="TimeStampResp",TIME_STAMP_RESP_STATUS=`TimeStampResp.${STATUS}`,TIME_STAMP_RESP_TOKEN="TimeStampResp.timeStampToken",CLEAR_PROPS=[TIME_STAMP_RESP_STATUS,TIME_STAMP_RESP_TOKEN];class TimeStampResp extends PkiObject{constructor(e={}){super(),this.status=pvutils__namespace.getParametersValue(e,STATUS,TimeStampResp.defaultValues(STATUS)),"timeStampToken"in e&&(this.timeStampToken=pvutils__namespace.getParametersValue(e,"timeStampToken",TimeStampResp.defaultValues("timeStampToken"))),e.schema&&this.fromSchema(e.schema)}static defaultValues(e){switch(e){case STATUS:return new PKIStatusInfo;case"timeStampToken":return new ContentInfo;default:return super.defaultValues(e)}}static compareWithDefault(e,t){switch(e){case STATUS:return PKIStatusInfo.compareWithDefault(STATUS,t.status)&&"statusStrings"in t==!1&&"failInfo"in t==!1;case"timeStampToken":return""===t.contentType&&t.content instanceof asn1js__namespace.Any;default:return super.defaultValues(e)}}static schema(e={}){const t=pvutils__namespace.getParametersValue(e,"names",{});return new asn1js__namespace.Sequence({name:t.blockName||"TimeStampResp",value:[PKIStatusInfo.schema(t.status||{names:{blockName:TIME_STAMP_RESP_STATUS}}),ContentInfo.schema(t.timeStampToken||{names:{blockName:TIME_STAMP_RESP_TOKEN,optional:!0}})]})}fromSchema(e){pvutils__namespace.clearProps(e,CLEAR_PROPS);const t=asn1js__namespace.compareSchema(e,e,TimeStampResp.schema());AsnError.assertSchema(t,this.className),this.status=new PKIStatusInfo({schema:t.result[TIME_STAMP_RESP_STATUS]}),TIME_STAMP_RESP_TOKEN in t.result&&(this.timeStampToken=new ContentInfo({schema:t.result[TIME_STAMP_RESP_TOKEN]}))}toSchema(){const e=[];return e.push(this.status.toSchema()),this.timeStampToken&&e.push(this.timeStampToken.toSchema()),new asn1js__namespace.Sequence({value:e})}toJSON(){const e={status:this.status.toJSON()};return this.timeStampToken&&(e.timeStampToken=this.timeStampToken.toJSON()),e}async sign(e,t,a=getCrypto(!0)){this.assertContentType();return new SignedData({schema:this.timeStampToken.content}).sign(e,0,t,void 0,a)}async verify(e={signer:0,trustedCerts:[],data:EMPTY_BUFFER},t=getCrypto(!0)){this.assertContentType();return new SignedData({schema:this.timeStampToken.content}).verify(e,t)}assertContentType(){if(!this.timeStampToken)throw new Error("timeStampToken is absent in TSP response");if("1.2.840.113549.1.7.2"!==this.timeStampToken.contentType)throw new Error(`Wrong format of timeStampToken: ${this.timeStampToken.contentType}`)}}function initCryptoEngine(){if("undefined"!=typeof self){if("crypto"in self){let e="webcrypto";"webkitSubtle"in self.crypto&&(e="safari"),setEngine(e,new CryptoEngine({name:e,crypto:crypto}))}}else if("undefined"!=typeof crypto&&"webcrypto"in crypto){const e="NodeJS ^15",t=crypto.webcrypto;setEngine(e,new CryptoEngine({name:e,crypto:t}))}}TimeStampResp.CLASS_NAME="TimeStampResp",initCryptoEngine(),exports.AbstractCryptoEngine=AbstractCryptoEngine,exports.AccessDescription=AccessDescription,exports.Accuracy=Accuracy,exports.AlgorithmIdentifier=AlgorithmIdentifier,exports.AltName=AltName,exports.ArgumentError=ArgumentError,exports.AsnError=AsnError,exports.AttCertValidityPeriod=AttCertValidityPeriod,exports.Attribute=Attribute,exports.AttributeCertificateInfoV1=AttributeCertificateInfoV1,exports.AttributeCertificateInfoV2=AttributeCertificateInfoV2,exports.AttributeCertificateV1=AttributeCertificateV1,exports.AttributeCertificateV2=AttributeCertificateV2,exports.AttributeTypeAndValue=AttributeTypeAndValue,exports.AuthenticatedSafe=AuthenticatedSafe,exports.AuthorityKeyIdentifier=AuthorityKeyIdentifier,exports.BasicConstraints=BasicConstraints,exports.BasicOCSPResponse=BasicOCSPResponse,exports.CAVersion=CAVersion,exports.CRLBag=CRLBag,exports.CRLDistributionPoints=CRLDistributionPoints,exports.CertBag=CertBag,exports.CertID=CertID,exports.Certificate=Certificate,exports.CertificateChainValidationEngine=CertificateChainValidationEngine,exports.CertificatePolicies=CertificatePolicies,exports.CertificateRevocationList=CertificateRevocationList,exports.CertificateSet=CertificateSet,exports.CertificateTemplate=CertificateTemplate,exports.CertificationRequest=CertificationRequest,exports.ChainValidationError=ChainValidationError,exports.ContentInfo=ContentInfo,exports.CryptoEngine=CryptoEngine,exports.DigestInfo=DigestInfo,exports.DistributionPoint=DistributionPoint,exports.ECCCMSSharedInfo=ECCCMSSharedInfo,exports.ECNamedCurves=ECNamedCurves,exports.ECPrivateKey=ECPrivateKey,exports.ECPublicKey=ECPublicKey,exports.EncapsulatedContentInfo=EncapsulatedContentInfo,exports.EncryptedContentInfo=EncryptedContentInfo,exports.EncryptedData=EncryptedData,exports.EnvelopedData=EnvelopedData,exports.ExtKeyUsage=ExtKeyUsage,exports.Extension=Extension,exports.ExtensionValueFactory=ExtensionValueFactory,exports.Extensions=Extensions,exports.GeneralName=GeneralName,exports.GeneralNames=GeneralNames,exports.GeneralSubtree=GeneralSubtree,exports.HASHED_MESSAGE=HASHED_MESSAGE,exports.HASH_ALGORITHM=HASH_ALGORITHM,exports.Holder=Holder,exports.InfoAccess=InfoAccess,exports.IssuerAndSerialNumber=IssuerAndSerialNumber,exports.IssuerSerial=IssuerSerial,exports.IssuingDistributionPoint=IssuingDistributionPoint,exports.KEKIdentifier=KEKIdentifier,exports.KEKRecipientInfo=KEKRecipientInfo,exports.KeyAgreeRecipientIdentifier=KeyAgreeRecipientIdentifier,exports.KeyAgreeRecipientInfo=KeyAgreeRecipientInfo,exports.KeyBag=KeyBag,exports.KeyTransRecipientInfo=KeyTransRecipientInfo,exports.MICROS=MICROS,exports.MILLIS=MILLIS,exports.MacData=MacData,exports.MessageImprint=MessageImprint,exports.NameConstraints=NameConstraints,exports.OCSPRequest=OCSPRequest,exports.OCSPResponse=OCSPResponse,exports.ObjectDigestInfo=ObjectDigestInfo,exports.OriginatorIdentifierOrKey=OriginatorIdentifierOrKey,exports.OriginatorInfo=OriginatorInfo,exports.OriginatorPublicKey=OriginatorPublicKey,exports.OtherCertificateFormat=OtherCertificateFormat,exports.OtherKeyAttribute=OtherKeyAttribute,exports.OtherPrimeInfo=OtherPrimeInfo,exports.OtherRecipientInfo=OtherRecipientInfo,exports.OtherRevocationInfoFormat=OtherRevocationInfoFormat,exports.PBES2Params=PBES2Params,exports.PBKDF2Params=PBKDF2Params,exports.PFX=PFX,exports.PKCS8ShroudedKeyBag=PKCS8ShroudedKeyBag,exports.PKIStatusInfo=PKIStatusInfo,exports.POLICY_IDENTIFIER=POLICY_IDENTIFIER,exports.POLICY_QUALIFIERS=POLICY_QUALIFIERS,exports.ParameterError=ParameterError,exports.PasswordRecipientinfo=PasswordRecipientinfo,exports.PkiObject=PkiObject,exports.PolicyConstraints=PolicyConstraints,exports.PolicyInformation=PolicyInformation,exports.PolicyMapping=PolicyMapping,exports.PolicyMappings=PolicyMappings,exports.PolicyQualifierInfo=PolicyQualifierInfo,exports.PrivateKeyInfo=PrivateKeyInfo,exports.PrivateKeyUsagePeriod=PrivateKeyUsagePeriod,exports.PublicKeyInfo=PublicKeyInfo,exports.QCStatement=QCStatement,exports.QCStatements=QCStatements,exports.RDN=RDN,exports.RSAESOAEPParams=RSAESOAEPParams,exports.RSAPrivateKey=RSAPrivateKey,exports.RSAPublicKey=RSAPublicKey,exports.RSASSAPSSParams=RSASSAPSSParams,exports.RecipientEncryptedKey=RecipientEncryptedKey,exports.RecipientEncryptedKeys=RecipientEncryptedKeys,exports.RecipientIdentifier=RecipientIdentifier,exports.RecipientInfo=RecipientInfo,exports.RecipientKeyIdentifier=RecipientKeyIdentifier,exports.RelativeDistinguishedNames=RelativeDistinguishedNames,exports.Request=Request,exports.ResponseBytes=ResponseBytes,exports.ResponseData=ResponseData,exports.RevocationInfoChoices=RevocationInfoChoices,exports.RevokedCertificate=RevokedCertificate,exports.SECONDS=SECONDS,exports.SafeBag=SafeBag,exports.SafeBagValueFactory=SafeBagValueFactory,exports.SafeContents=SafeContents,exports.SecretBag=SecretBag,exports.Signature=Signature,exports.SignedAndUnsignedAttributes=SignedAndUnsignedAttributes,exports.SignedCertificateTimestamp=SignedCertificateTimestamp,exports.SignedCertificateTimestampList=SignedCertificateTimestampList,exports.SignedData=SignedData,exports.SignedDataVerifyError=SignedDataVerifyError,exports.SignerInfo=SignerInfo,exports.SingleResponse=SingleResponse,exports.SubjectDirectoryAttributes=SubjectDirectoryAttributes,exports.TBSRequest=TBSRequest,exports.TSTInfo=TSTInfo,exports.TYPE="type",exports.TYPE_AND_VALUES=TYPE_AND_VALUES,exports.Time=Time,exports.TimeStampReq=TimeStampReq,exports.TimeStampResp=TimeStampResp,exports.V2Form=V2Form,exports.VALUE="value",exports.VALUE_BEFORE_DECODE="valueBeforeDecode",exports.checkCA=checkCA,exports.createCMSECDSASignature=createCMSECDSASignature,exports.createECDSASignatureFromCMS=createECDSASignatureFromCMS,exports.getAlgorithmByOID=getAlgorithmByOID,exports.getAlgorithmParameters=getAlgorithmParameters,exports.getCrypto=getCrypto,exports.getEngine=getEngine,exports.getHashAlgorithm=getHashAlgorithm,exports.getOIDByAlgorithm=getOIDByAlgorithm,exports.getRandomValues=getRandomValues,exports.id_AnyPolicy=id_AnyPolicy,exports.id_AuthorityInfoAccess="1.3.6.1.5.5.7.1.1",exports.id_AuthorityKeyIdentifier="2.5.29.35",exports.id_BaseCRLNumber="2.5.29.27",exports.id_BasicConstraints="2.5.29.19",exports.id_CRLBag_X509CRL=id_CRLBag_X509CRL,exports.id_CRLDistributionPoints="2.5.29.31",exports.id_CRLNumber="2.5.29.20",exports.id_CRLReason="2.5.29.21",exports.id_CertBag_AttributeCertificate="1.2.840.113549.1.9.22.3",exports.id_CertBag_SDSICertificate="1.2.840.113549.1.9.22.2",exports.id_CertBag_X509Certificate="1.2.840.113549.1.9.22.1",exports.id_CertificateIssuer="2.5.29.29",exports.id_CertificatePolicies="2.5.29.32",exports.id_ContentType_Data=id_ContentType_Data,exports.id_ContentType_EncryptedData="1.2.840.113549.1.7.6",exports.id_ContentType_EnvelopedData="1.2.840.113549.1.7.3",exports.id_ContentType_SignedData="1.2.840.113549.1.7.2",exports.id_ExtKeyUsage="2.5.29.37",exports.id_FreshestCRL="2.5.29.46",exports.id_InhibitAnyPolicy="2.5.29.54",exports.id_InvalidityDate="2.5.29.24",exports.id_IssuerAltName="2.5.29.18",exports.id_IssuingDistributionPoint="2.5.29.28",exports.id_KeyUsage="2.5.29.15",exports.id_MicrosoftAppPolicies="1.3.6.1.4.1.311.21.10",exports.id_MicrosoftCaVersion=id_MicrosoftCaVersion,exports.id_MicrosoftCertTemplateV1="1.3.6.1.4.1.311.20.2",exports.id_MicrosoftCertTemplateV2="1.3.6.1.4.1.311.21.7",exports.id_MicrosoftPrevCaCertHash="1.3.6.1.4.1.311.21.2",exports.id_NameConstraints="2.5.29.30",exports.id_PKIX_OCSP_Basic=id_PKIX_OCSP_Basic,exports.id_PolicyConstraints="2.5.29.36",exports.id_PolicyMappings="2.5.29.33",exports.id_PrivateKeyUsagePeriod="2.5.29.16",exports.id_QCStatements=id_QCStatements,exports.id_SignedCertificateTimestampList="1.3.6.1.4.1.11129.2.4.2",exports.id_SubjectAltName="2.5.29.17",exports.id_SubjectDirectoryAttributes="2.5.29.9",exports.id_SubjectInfoAccess="1.3.6.1.5.5.7.1.11",exports.id_SubjectKeyIdentifier="2.5.29.14",exports.id_ad=id_ad,exports.id_ad_caIssuers=id_ad_caIssuers,exports.id_ad_ocsp=id_ad_ocsp,exports.id_eContentType_TSTInfo=id_eContentType_TSTInfo,exports.id_pkix=id_pkix,exports.id_sha1=id_sha1,exports.id_sha256=id_sha256,exports.id_sha384=id_sha384,exports.id_sha512=id_sha512,exports.kdf=kdf,exports.setEngine=setEngine,exports.stringPrep=stringPrep,exports.verifySCTsForCertificate=verifySCTsForCertificate;
//# sourceMappingURL=/sm/11a3c4eded982cb3e51679ee3101e1fed67dd3d9dfd063205a0957507a46d5d8.map